// Compiled by ClojureScript 0.0-2850 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2850";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__6043__delegate = function (args){
return console.log.apply(console,(function (){var G__6042 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__6042) : cljs.core.into_array.call(null,G__6042));
})());
};
var G__6043 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__6044__i = 0, G__6044__a = new Array(arguments.length -  0);
while (G__6044__i < G__6044__a.length) {G__6044__a[G__6044__i] = arguments[G__6044__i + 0]; ++G__6044__i;}
  args = new cljs.core.IndexedSeq(G__6044__a,0);
} 
return G__6043__delegate.call(this,args);};
G__6043.cljs$lang$maxFixedArity = 0;
G__6043.cljs$lang$applyTo = (function (arglist__6045){
var args = cljs.core.seq(arglist__6045);
return G__6043__delegate(args);
});
G__6043.cljs$core$IFn$_invoke$arity$variadic = G__6043__delegate;
return G__6043;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__6047 = x;
return goog.isString(G__6047);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__6049 = x__$1;
return goog.typeOf(G__6049);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3801__auto__ = ty;
if(cljs.core.truth_(and__3801__auto__)){
return ty.cljs$lang$type;
} else {
return and__3801__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__6051 = obj;
return goog.typeOf(G__6051);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__6053 = Symbol;
return goog.typeOf(G__6053);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4700__auto___6055 = len;
var i_6056 = (0);
while(true){
if((i_6056 < n__4700__auto___6055)){
(new_arr[i_6056] = (arr[i_6056]));

var G__6057 = (i_6056 + (1));
i_6056 = G__6057;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__6058 = (i + (1));
i = G__6058;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__6067__delegate = function (array,i,idxs){
var G__6064 = aget;
var G__6065 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__6066 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__6064,G__6065,G__6066) : cljs.core.apply.call(null,G__6064,G__6065,G__6066));
};
var G__6067 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__6068__i = 0, G__6068__a = new Array(arguments.length -  2);
while (G__6068__i < G__6068__a.length) {G__6068__a[G__6068__i] = arguments[G__6068__i + 2]; ++G__6068__i;}
  idxs = new cljs.core.IndexedSeq(G__6068__a,0);
} 
return G__6067__delegate.call(this,array,i,idxs);};
G__6067.cljs$lang$maxFixedArity = 2;
G__6067.cljs$lang$applyTo = (function (arglist__6069){
var array = cljs.core.first(arglist__6069);
arglist__6069 = cljs.core.next(arglist__6069);
var i = cljs.core.first(arglist__6069);
var idxs = cljs.core.rest(arglist__6069);
return G__6067__delegate(array,i,idxs);
});
G__6067.cljs$core$IFn$_invoke$arity$variadic = G__6067__delegate;
return G__6067;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__6070 = null;
if (arguments.length > 2) {
var G__6071__i = 0, G__6071__a = new Array(arguments.length -  2);
while (G__6071__i < G__6071__a.length) {G__6071__a[G__6071__i] = arguments[G__6071__i + 2]; ++G__6071__i;}
G__6070 = new cljs.core.IndexedSeq(G__6071__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__6070);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__6080__delegate = function (array,idx,idx2,idxv){
var G__6076 = aset;
var G__6077 = (array[idx]);
var G__6078 = idx2;
var G__6079 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__6076,G__6077,G__6078,G__6079) : cljs.core.apply.call(null,G__6076,G__6077,G__6078,G__6079));
};
var G__6080 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__6081__i = 0, G__6081__a = new Array(arguments.length -  3);
while (G__6081__i < G__6081__a.length) {G__6081__a[G__6081__i] = arguments[G__6081__i + 3]; ++G__6081__i;}
  idxv = new cljs.core.IndexedSeq(G__6081__a,0);
} 
return G__6080__delegate.call(this,array,idx,idx2,idxv);};
G__6080.cljs$lang$maxFixedArity = 3;
G__6080.cljs$lang$applyTo = (function (arglist__6082){
var array = cljs.core.first(arglist__6082);
arglist__6082 = cljs.core.next(arglist__6082);
var idx = cljs.core.first(arglist__6082);
arglist__6082 = cljs.core.next(arglist__6082);
var idx2 = cljs.core.first(arglist__6082);
var idxv = cljs.core.rest(arglist__6082);
return G__6080__delegate(array,idx,idx2,idxv);
});
G__6080.cljs$core$IFn$_invoke$arity$variadic = G__6080__delegate;
return G__6080;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__6083 = null;
if (arguments.length > 3) {
var G__6084__i = 0, G__6084__a = new Array(arguments.length -  3);
while (G__6084__i < G__6084__a.length) {G__6084__a[G__6084__i] = arguments[G__6084__i + 3]; ++G__6084__i;}
G__6083 = new cljs.core.IndexedSeq(G__6084__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__6083);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__6090 = (function (a,x){
a.push(x);

return a;
});
var G__6091 = [];
var G__6092 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__6090,G__6091,G__6092) : cljs.core.reduce.call(null,G__6090,G__6091,G__6092));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__6093__i = 0, G__6093__a = new Array(arguments.length -  2);
while (G__6093__i < G__6093__a.length) {G__6093__a[G__6093__i] = arguments[G__6093__i + 2]; ++G__6093__i;}
  args = new cljs.core.IndexedSeq(G__6093__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__6094){
var obj = cljs.core.first(arglist__6094);
arglist__6094 = cljs.core.next(arglist__6094);
var s = cljs.core.first(arglist__6094);
var args = cljs.core.rest(arglist__6094);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj6096 = {};
return obj6096;
})();


cljs.core.IFn = (function (){var obj6098 = {};
return obj6098;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._invoke[(function (){var G__6144 = x__4457__auto__;
return goog.typeOf(G__6144);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._invoke["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._invoke[(function (){var G__6146 = x__4457__auto__;
return goog.typeOf(G__6146);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._invoke["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._invoke[(function (){var G__6148 = x__4457__auto__;
return goog.typeOf(G__6148);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._invoke["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._invoke[(function (){var G__6150 = x__4457__auto__;
return goog.typeOf(G__6150);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._invoke["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._invoke[(function (){var G__6152 = x__4457__auto__;
return goog.typeOf(G__6152);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._invoke["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._invoke[(function (){var G__6154 = x__4457__auto__;
return goog.typeOf(G__6154);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._invoke["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._invoke[(function (){var G__6156 = x__4457__auto__;
return goog.typeOf(G__6156);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._invoke["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._invoke[(function (){var G__6158 = x__4457__auto__;
return goog.typeOf(G__6158);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._invoke["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._invoke[(function (){var G__6160 = x__4457__auto__;
return goog.typeOf(G__6160);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._invoke["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._invoke[(function (){var G__6162 = x__4457__auto__;
return goog.typeOf(G__6162);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._invoke["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._invoke[(function (){var G__6164 = x__4457__auto__;
return goog.typeOf(G__6164);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._invoke["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._invoke[(function (){var G__6166 = x__4457__auto__;
return goog.typeOf(G__6166);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._invoke["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._invoke[(function (){var G__6168 = x__4457__auto__;
return goog.typeOf(G__6168);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._invoke["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._invoke[(function (){var G__6170 = x__4457__auto__;
return goog.typeOf(G__6170);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._invoke["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._invoke[(function (){var G__6172 = x__4457__auto__;
return goog.typeOf(G__6172);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._invoke["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._invoke[(function (){var G__6174 = x__4457__auto__;
return goog.typeOf(G__6174);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._invoke["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._invoke[(function (){var G__6176 = x__4457__auto__;
return goog.typeOf(G__6176);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._invoke["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._invoke[(function (){var G__6178 = x__4457__auto__;
return goog.typeOf(G__6178);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._invoke["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._invoke[(function (){var G__6180 = x__4457__auto__;
return goog.typeOf(G__6180);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._invoke["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._invoke[(function (){var G__6182 = x__4457__auto__;
return goog.typeOf(G__6182);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._invoke["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._invoke[(function (){var G__6184 = x__4457__auto__;
return goog.typeOf(G__6184);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._invoke["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._invoke[(function (){var G__6186 = x__4457__auto__;
return goog.typeOf(G__6186);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._invoke["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj6188 = {};
return obj6188;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3801__auto__ = value;
if(and__3801__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3801__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4457__auto__ = (((value == null))?null:value);
return (function (){var or__3813__auto__ = (cljs.core._clone[(function (){var G__6192 = x__4457__auto__;
return goog.typeOf(G__6192);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._clone["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj6194 = {};
return obj6194;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._count[(function (){var G__6198 = x__4457__auto__;
return goog.typeOf(G__6198);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._count["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj6200 = {};
return obj6200;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._empty[(function (){var G__6204 = x__4457__auto__;
return goog.typeOf(G__6204);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._empty["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj6206 = {};
return obj6206;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._conj[(function (){var G__6210 = x__4457__auto__;
return goog.typeOf(G__6210);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._conj["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj6212 = {};
return obj6212;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._nth[(function (){var G__6218 = x__4457__auto__;
return goog.typeOf(G__6218);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._nth["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._nth[(function (){var G__6220 = x__4457__auto__;
return goog.typeOf(G__6220);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._nth["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj6222 = {};
return obj6222;
})();


cljs.core.ISeq = (function (){var obj6224 = {};
return obj6224;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._first[(function (){var G__6228 = x__4457__auto__;
return goog.typeOf(G__6228);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._first["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._rest[(function (){var G__6232 = x__4457__auto__;
return goog.typeOf(G__6232);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._rest["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj6234 = {};
return obj6234;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._next[(function (){var G__6238 = x__4457__auto__;
return goog.typeOf(G__6238);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._next["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj6240 = {};
return obj6240;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3801__auto__ = o;
if(and__3801__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3801__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4457__auto__ = (((o == null))?null:o);
return (function (){var or__3813__auto__ = (cljs.core._lookup[(function (){var G__6246 = x__4457__auto__;
return goog.typeOf(G__6246);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._lookup["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3801__auto__ = o;
if(and__3801__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3801__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4457__auto__ = (((o == null))?null:o);
return (function (){var or__3813__auto__ = (cljs.core._lookup[(function (){var G__6248 = x__4457__auto__;
return goog.typeOf(G__6248);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._lookup["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj6250 = {};
return obj6250;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__6254 = x__4457__auto__;
return goog.typeOf(G__6254);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._assoc[(function (){var G__6258 = x__4457__auto__;
return goog.typeOf(G__6258);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._assoc["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj6260 = {};
return obj6260;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._dissoc[(function (){var G__6264 = x__4457__auto__;
return goog.typeOf(G__6264);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj6266 = {};
return obj6266;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._key[(function (){var G__6270 = x__4457__auto__;
return goog.typeOf(G__6270);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._key["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._val[(function (){var G__6274 = x__4457__auto__;
return goog.typeOf(G__6274);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._val["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj6276 = {};
return obj6276;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._disjoin[(function (){var G__6280 = x__4457__auto__;
return goog.typeOf(G__6280);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj6282 = {};
return obj6282;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._peek[(function (){var G__6286 = x__4457__auto__;
return goog.typeOf(G__6286);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._peek["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._pop[(function (){var G__6290 = x__4457__auto__;
return goog.typeOf(G__6290);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._pop["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj6292 = {};
return obj6292;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._assoc_n[(function (){var G__6296 = x__4457__auto__;
return goog.typeOf(G__6296);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj6298 = {};
return obj6298;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3801__auto__ = o;
if(and__3801__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3801__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4457__auto__ = (((o == null))?null:o);
return (function (){var or__3813__auto__ = (cljs.core._deref[(function (){var G__6302 = x__4457__auto__;
return goog.typeOf(G__6302);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._deref["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj6304 = {};
return obj6304;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3801__auto__ = o;
if(and__3801__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3801__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4457__auto__ = (((o == null))?null:o);
return (function (){var or__3813__auto__ = (cljs.core._deref_with_timeout[(function (){var G__6308 = x__4457__auto__;
return goog.typeOf(G__6308);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj6310 = {};
return obj6310;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3801__auto__ = o;
if(and__3801__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3801__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4457__auto__ = (((o == null))?null:o);
return (function (){var or__3813__auto__ = (cljs.core._meta[(function (){var G__6314 = x__4457__auto__;
return goog.typeOf(G__6314);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._meta["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj6316 = {};
return obj6316;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3801__auto__ = o;
if(and__3801__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3801__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4457__auto__ = (((o == null))?null:o);
return (function (){var or__3813__auto__ = (cljs.core._with_meta[(function (){var G__6320 = x__4457__auto__;
return goog.typeOf(G__6320);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj6322 = {};
return obj6322;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._reduce[(function (){var G__6328 = x__4457__auto__;
return goog.typeOf(G__6328);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._reduce["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._reduce[(function (){var G__6330 = x__4457__auto__;
return goog.typeOf(G__6330);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._reduce["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj6332 = {};
return obj6332;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._kv_reduce[(function (){var G__6336 = x__4457__auto__;
return goog.typeOf(G__6336);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj6338 = {};
return obj6338;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3801__auto__ = o;
if(and__3801__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3801__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4457__auto__ = (((o == null))?null:o);
return (function (){var or__3813__auto__ = (cljs.core._equiv[(function (){var G__6342 = x__4457__auto__;
return goog.typeOf(G__6342);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._equiv["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj6344 = {};
return obj6344;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3801__auto__ = o;
if(and__3801__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3801__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4457__auto__ = (((o == null))?null:o);
return (function (){var or__3813__auto__ = (cljs.core._hash[(function (){var G__6348 = x__4457__auto__;
return goog.typeOf(G__6348);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._hash["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj6350 = {};
return obj6350;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3801__auto__ = o;
if(and__3801__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3801__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4457__auto__ = (((o == null))?null:o);
return (function (){var or__3813__auto__ = (cljs.core._seq[(function (){var G__6354 = x__4457__auto__;
return goog.typeOf(G__6354);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._seq["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj6356 = {};
return obj6356;
})();


cljs.core.IList = (function (){var obj6358 = {};
return obj6358;
})();


cljs.core.IRecord = (function (){var obj6360 = {};
return obj6360;
})();


cljs.core.IReversible = (function (){var obj6362 = {};
return obj6362;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._rseq[(function (){var G__6366 = x__4457__auto__;
return goog.typeOf(G__6366);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._rseq["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj6368 = {};
return obj6368;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._sorted_seq[(function (){var G__6372 = x__4457__auto__;
return goog.typeOf(G__6372);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._sorted_seq_from[(function (){var G__6376 = x__4457__auto__;
return goog.typeOf(G__6376);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._entry_key[(function (){var G__6380 = x__4457__auto__;
return goog.typeOf(G__6380);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._comparator[(function (){var G__6384 = x__4457__auto__;
return goog.typeOf(G__6384);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._comparator["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj6386 = {};
return obj6386;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3801__auto__ = writer;
if(and__3801__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3801__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4457__auto__ = (((writer == null))?null:writer);
return (function (){var or__3813__auto__ = (cljs.core._write[(function (){var G__6390 = x__4457__auto__;
return goog.typeOf(G__6390);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._write["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3801__auto__ = writer;
if(and__3801__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3801__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4457__auto__ = (((writer == null))?null:writer);
return (function (){var or__3813__auto__ = (cljs.core._flush[(function (){var G__6394 = x__4457__auto__;
return goog.typeOf(G__6394);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._flush["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj6396 = {};
return obj6396;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3801__auto__ = o;
if(and__3801__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3801__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4457__auto__ = (((o == null))?null:o);
return (function (){var or__3813__auto__ = (cljs.core._pr_writer[(function (){var G__6400 = x__4457__auto__;
return goog.typeOf(G__6400);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj6402 = {};
return obj6402;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3801__auto__ = d;
if(and__3801__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3801__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4457__auto__ = (((d == null))?null:d);
return (function (){var or__3813__auto__ = (cljs.core._realized_QMARK_[(function (){var G__6406 = x__4457__auto__;
return goog.typeOf(G__6406);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj6408 = {};
return obj6408;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._notify_watches[(function (){var G__6412 = x__4457__auto__;
return goog.typeOf(G__6412);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._add_watch[(function (){var G__6416 = x__4457__auto__;
return goog.typeOf(G__6416);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3801__auto__ = this$;
if(and__3801__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3801__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4457__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3813__auto__ = (cljs.core._remove_watch[(function (){var G__6420 = x__4457__auto__;
return goog.typeOf(G__6420);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj6422 = {};
return obj6422;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._as_transient[(function (){var G__6426 = x__4457__auto__;
return goog.typeOf(G__6426);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj6428 = {};
return obj6428;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3801__auto__ = tcoll;
if(and__3801__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3801__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4457__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3813__auto__ = (cljs.core._conj_BANG_[(function (){var G__6432 = x__4457__auto__;
return goog.typeOf(G__6432);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3801__auto__ = tcoll;
if(and__3801__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3801__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4457__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3813__auto__ = (cljs.core._persistent_BANG_[(function (){var G__6436 = x__4457__auto__;
return goog.typeOf(G__6436);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj6438 = {};
return obj6438;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3801__auto__ = tcoll;
if(and__3801__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3801__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4457__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3813__auto__ = (cljs.core._assoc_BANG_[(function (){var G__6442 = x__4457__auto__;
return goog.typeOf(G__6442);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj6444 = {};
return obj6444;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3801__auto__ = tcoll;
if(and__3801__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3801__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4457__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3813__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__6448 = x__4457__auto__;
return goog.typeOf(G__6448);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj6450 = {};
return obj6450;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3801__auto__ = tcoll;
if(and__3801__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3801__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4457__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3813__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__6454 = x__4457__auto__;
return goog.typeOf(G__6454);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3801__auto__ = tcoll;
if(and__3801__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3801__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4457__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3813__auto__ = (cljs.core._pop_BANG_[(function (){var G__6458 = x__4457__auto__;
return goog.typeOf(G__6458);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj6460 = {};
return obj6460;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3801__auto__ = tcoll;
if(and__3801__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3801__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4457__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3813__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__6464 = x__4457__auto__;
return goog.typeOf(G__6464);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj6466 = {};
return obj6466;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3801__auto__ = x;
if(and__3801__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3801__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4457__auto__ = (((x == null))?null:x);
return (function (){var or__3813__auto__ = (cljs.core._compare[(function (){var G__6470 = x__4457__auto__;
return goog.typeOf(G__6470);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._compare["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj6472 = {};
return obj6472;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._drop_first[(function (){var G__6476 = x__4457__auto__;
return goog.typeOf(G__6476);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj6478 = {};
return obj6478;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._chunked_first[(function (){var G__6482 = x__4457__auto__;
return goog.typeOf(G__6482);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._chunked_rest[(function (){var G__6486 = x__4457__auto__;
return goog.typeOf(G__6486);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj6488 = {};
return obj6488;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._chunked_next[(function (){var G__6492 = x__4457__auto__;
return goog.typeOf(G__6492);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj6494 = {};
return obj6494;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3801__auto__ = x;
if(and__3801__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3801__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4457__auto__ = (((x == null))?null:x);
return (function (){var or__3813__auto__ = (cljs.core._name[(function (){var G__6498 = x__4457__auto__;
return goog.typeOf(G__6498);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._name["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3801__auto__ = x;
if(and__3801__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3801__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4457__auto__ = (((x == null))?null:x);
return (function (){var or__3813__auto__ = (cljs.core._namespace[(function (){var G__6502 = x__4457__auto__;
return goog.typeOf(G__6502);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._namespace["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj6504 = {};
return obj6504;
})();


cljs.core.IReset = (function (){var obj6506 = {};
return obj6506;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3801__auto__ = o;
if(and__3801__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3801__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4457__auto__ = (((o == null))?null:o);
return (function (){var or__3813__auto__ = (cljs.core._reset_BANG_[(function (){var G__6510 = x__4457__auto__;
return goog.typeOf(G__6510);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj6512 = {};
return obj6512;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3801__auto__ = o;
if(and__3801__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3801__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4457__auto__ = (((o == null))?null:o);
return (function (){var or__3813__auto__ = (cljs.core._swap_BANG_[(function (){var G__6522 = x__4457__auto__;
return goog.typeOf(G__6522);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3801__auto__ = o;
if(and__3801__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3801__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4457__auto__ = (((o == null))?null:o);
return (function (){var or__3813__auto__ = (cljs.core._swap_BANG_[(function (){var G__6524 = x__4457__auto__;
return goog.typeOf(G__6524);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3801__auto__ = o;
if(and__3801__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3801__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4457__auto__ = (((o == null))?null:o);
return (function (){var or__3813__auto__ = (cljs.core._swap_BANG_[(function (){var G__6526 = x__4457__auto__;
return goog.typeOf(G__6526);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3801__auto__ = o;
if(and__3801__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3801__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4457__auto__ = (((o == null))?null:o);
return (function (){var or__3813__auto__ = (cljs.core._swap_BANG_[(function (){var G__6528 = x__4457__auto__;
return goog.typeOf(G__6528);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj6530 = {};
return obj6530;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3801__auto__ = o;
if(and__3801__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3801__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4457__auto__ = (((o == null))?null:o);
return (function (){var or__3813__auto__ = (cljs.core._vreset_BANG_[(function (){var G__6534 = x__4457__auto__;
return goog.typeOf(G__6534);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj6536 = {};
return obj6536;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3801__auto__ = coll;
if(and__3801__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3801__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4457__auto__ = (((coll == null))?null:coll);
return (function (){var or__3813__auto__ = (cljs.core._iterator[(function (){var G__6540 = x__4457__auto__;
return goog.typeOf(G__6540);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._iterator["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__6543 = (4294967295);
var G__6544 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__6543,G__6544) : Math.imul.call(null,G__6543,G__6544));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__6547 = a;
var G__6548 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__6547,G__6548) : Math.imul.call(null,G__6547,G__6548));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__6549 = (i + (2));
var G__6550 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__6549;
h1 = G__6550;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj6552 = {};
return obj6552;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__6553 = (i + (1));
var G__6554 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__6553;
hash = G__6554;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj6558 = {};
return obj6558;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__6561 = o;
if(G__6561){
var bit__4487__auto__ = (G__6561.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4487__auto__) || (G__6561.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__6562 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__6562) : Math.floor.call(null,G__6562));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3801__auto__ = cljs.core.not(a.ns);
if(and__3801__auto__){
return b.ns;
} else {
return and__3801__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__6569 = a.ns;
var G__6570 = b.ns;
return goog.array.defaultCompare(G__6569,G__6570);
})();
if(((0) === nsc)){
var G__6571 = a.name;
var G__6572 = b.name;
return goog.array.defaultCompare(G__6571,G__6572);
} else {
return nsc;
}
}
} else {
var G__6573 = a.name;
var G__6574 = b.name;
return goog.array.defaultCompare(G__6573,G__6574);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4234__auto__ = self__._hash;
if(!((h__4234__auto__ == null))){
return h__4234__auto__;
} else {
var h__4234__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4234__auto____$1;

return h__4234__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__6576 = null;
var G__6576__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__6576__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__6576 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__6576__2.call(this,self__,coll);
case 3:
return G__6576__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6576.cljs$core$IFn$_invoke$arity$2 = G__6576__2;
G__6576.cljs$core$IFn$_invoke$arity$3 = G__6576__3;
return G__6576;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args6575){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6575)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__6624 = null;
var G__6624__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__6624__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__6624__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__6624__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__6624__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__6624__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__6624__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__6624__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__6624__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__6624__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__6624__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__6624__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__6624__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__6624__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__6624__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__6624__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__6624__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__6624__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__6624__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__6624__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__6624__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__6624__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6580 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__6581 = a;
var G__6582 = b;
var G__6583 = c;
var G__6584 = d;
var G__6585 = e;
var G__6586 = f;
var G__6587 = g;
var G__6588 = h;
var G__6589 = i;
var G__6590 = j;
var G__6591 = k;
var G__6592 = l;
var G__6593 = m;
var G__6594 = n;
var G__6595 = o;
var G__6596 = p;
var G__6597 = q;
var G__6598 = r;
var G__6599 = s;
var G__6600 = t;
var G__6601 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6580,G__6581,G__6582,G__6583,G__6584,G__6585,G__6586,G__6587,G__6588,G__6589,G__6590,G__6591,G__6592,G__6593,G__6594,G__6595,G__6596,G__6597,G__6598,G__6599,G__6600,G__6601) : cljs.core.apply.call(null,G__6580,G__6581,G__6582,G__6583,G__6584,G__6585,G__6586,G__6587,G__6588,G__6589,G__6590,G__6591,G__6592,G__6593,G__6594,G__6595,G__6596,G__6597,G__6598,G__6599,G__6600,G__6601));
});
G__6624 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__6624__1.call(this,self__);
case 2:
return G__6624__2.call(this,self__,a);
case 3:
return G__6624__3.call(this,self__,a,b);
case 4:
return G__6624__4.call(this,self__,a,b,c);
case 5:
return G__6624__5.call(this,self__,a,b,c,d);
case 6:
return G__6624__6.call(this,self__,a,b,c,d,e);
case 7:
return G__6624__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__6624__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__6624__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__6624__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__6624__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__6624__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__6624__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__6624__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__6624__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__6624__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__6624__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__6624__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__6624__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__6624__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__6624__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__6624__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6624.cljs$core$IFn$_invoke$arity$1 = G__6624__1;
G__6624.cljs$core$IFn$_invoke$arity$2 = G__6624__2;
G__6624.cljs$core$IFn$_invoke$arity$3 = G__6624__3;
G__6624.cljs$core$IFn$_invoke$arity$4 = G__6624__4;
G__6624.cljs$core$IFn$_invoke$arity$5 = G__6624__5;
G__6624.cljs$core$IFn$_invoke$arity$6 = G__6624__6;
G__6624.cljs$core$IFn$_invoke$arity$7 = G__6624__7;
G__6624.cljs$core$IFn$_invoke$arity$8 = G__6624__8;
G__6624.cljs$core$IFn$_invoke$arity$9 = G__6624__9;
G__6624.cljs$core$IFn$_invoke$arity$10 = G__6624__10;
G__6624.cljs$core$IFn$_invoke$arity$11 = G__6624__11;
G__6624.cljs$core$IFn$_invoke$arity$12 = G__6624__12;
G__6624.cljs$core$IFn$_invoke$arity$13 = G__6624__13;
G__6624.cljs$core$IFn$_invoke$arity$14 = G__6624__14;
G__6624.cljs$core$IFn$_invoke$arity$15 = G__6624__15;
G__6624.cljs$core$IFn$_invoke$arity$16 = G__6624__16;
G__6624.cljs$core$IFn$_invoke$arity$17 = G__6624__17;
G__6624.cljs$core$IFn$_invoke$arity$18 = G__6624__18;
G__6624.cljs$core$IFn$_invoke$arity$19 = G__6624__19;
G__6624.cljs$core$IFn$_invoke$arity$20 = G__6624__20;
G__6624.cljs$core$IFn$_invoke$arity$21 = G__6624__21;
G__6624.cljs$core$IFn$_invoke$arity$22 = G__6624__22;
return G__6624;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args6579){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6579)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__6602 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__6603 = a;
var G__6604 = b;
var G__6605 = c;
var G__6606 = d;
var G__6607 = e;
var G__6608 = f;
var G__6609 = g;
var G__6610 = h;
var G__6611 = i;
var G__6612 = j;
var G__6613 = k;
var G__6614 = l;
var G__6615 = m;
var G__6616 = n;
var G__6617 = o;
var G__6618 = p;
var G__6619 = q;
var G__6620 = r;
var G__6621 = s;
var G__6622 = t;
var G__6623 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6602,G__6603,G__6604,G__6605,G__6606,G__6607,G__6608,G__6609,G__6610,G__6611,G__6612,G__6613,G__6614,G__6615,G__6616,G__6617,G__6618,G__6619,G__6620,G__6621,G__6622,G__6623) : cljs.core.apply.call(null,G__6602,G__6603,G__6604,G__6605,G__6606,G__6607,G__6608,G__6609,G__6610,G__6611,G__6612,G__6613,G__6614,G__6615,G__6616,G__6617,G__6618,G__6619,G__6620,G__6621,G__6622,G__6623));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__6626 = x;
if(G__6626){
var bit__4494__auto__ = null;
if(cljs.core.truth_((function (){var or__3813__auto__ = bit__4494__auto__;
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
return G__6626.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__6626.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__6626);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__6626);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__6628 = value;
if(G__6628){
var bit__4494__auto__ = (G__6628.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4494__auto__) || (G__6628.cljs$core$ICloneable$)){
return true;
} else {
if((!G__6628.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__6628);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__6628);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__6630 = coll;
if(G__6630){
var bit__4487__auto__ = (G__6630.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4487__auto__) || (G__6630.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__6632 = coll;
if(G__6632){
var bit__4487__auto__ = (G__6632.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4487__auto__) || (G__6632.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__6634 = coll;
if(G__6634){
var bit__4487__auto__ = (G__6634.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4487__auto__) || (G__6634.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__6636 = coll;
if(G__6636){
var bit__4487__auto__ = (G__6636.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4487__auto__) || (G__6636.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__6641__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__6642 = y;
var G__6643 = cljs.core.first(more);
var G__6644 = cljs.core.next(more);
x = G__6642;
y = G__6643;
more = G__6644;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__6641 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6645__i = 0, G__6645__a = new Array(arguments.length -  2);
while (G__6645__i < G__6645__a.length) {G__6645__a[G__6645__i] = arguments[G__6645__i + 2]; ++G__6645__i;}
  more = new cljs.core.IndexedSeq(G__6645__a,0);
} 
return G__6641__delegate.call(this,x,y,more);};
G__6641.cljs$lang$maxFixedArity = 2;
G__6641.cljs$lang$applyTo = (function (arglist__6646){
var x = cljs.core.first(arglist__6646);
arglist__6646 = cljs.core.next(arglist__6646);
var y = cljs.core.first(arglist__6646);
var more = cljs.core.rest(arglist__6646);
return G__6641__delegate(x,y,more);
});
G__6641.cljs$core$IFn$_invoke$arity$variadic = G__6641__delegate;
return G__6641;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__6647 = null;
if (arguments.length > 2) {
var G__6648__i = 0, G__6648__a = new Array(arguments.length -  2);
while (G__6648__i < G__6648__a.length) {G__6648__a[G__6648__i] = arguments[G__6648__i + 2]; ++G__6648__i;}
G__6647 = new cljs.core.IndexedSeq(G__6648__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6647);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__6649 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__6649) : cljs.core.es6_iterator_seq.call(null,G__6649));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__6650 = (n + (1));
var G__6651 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__6652 = cljs.core.next(coll__$1);
n = G__6650;
hash_code = G__6651;
coll__$1 = G__6652;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__6653 = (n + (1));
var G__6654 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__6655 = cljs.core.next(coll__$1);
n = G__6653;
hash_code = G__6654;
coll__$1 = G__6655;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__6656 = o;
return goog.getUid(G__6656);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__6658 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__6658) : cljs.core.deref.call(null,G__6658));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__6665 = val;
var G__6666 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6665,G__6666) : f.call(null,G__6665,G__6666));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6671 = nval;
var G__6672 = (n + (1));
val = G__6671;
n = G__6672;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__6667 = val__$1;
var G__6668 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6667,G__6668) : f.call(null,G__6667,G__6668));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6673 = nval;
var G__6674 = (n + (1));
val__$1 = G__6673;
n = G__6674;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__6669 = val__$1;
var G__6670 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6669,G__6670) : f.call(null,G__6669,G__6670));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6675 = nval;
var G__6676 = (n + (1));
val__$1 = G__6675;
n = G__6676;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__6683 = val;
var G__6684 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6683,G__6684) : f.call(null,G__6683,G__6684));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6689 = nval;
var G__6690 = (n + (1));
val = G__6689;
n = G__6690;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__6685 = val__$1;
var G__6686 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6685,G__6686) : f.call(null,G__6685,G__6686));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6691 = nval;
var G__6692 = (n + (1));
val__$1 = G__6691;
n = G__6692;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__6687 = val__$1;
var G__6688 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6687,G__6688) : f.call(null,G__6687,G__6688));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6693 = nval;
var G__6694 = (n + (1));
val__$1 = G__6693;
n = G__6694;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__6696 = x;
if(G__6696){
var bit__4494__auto__ = (G__6696.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4494__auto__) || (G__6696.cljs$core$ICounted$)){
return true;
} else {
if((!G__6696.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__6696);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__6696);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__6698 = x;
if(G__6698){
var bit__4494__auto__ = (G__6698.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4494__auto__) || (G__6698.cljs$core$IIndexed$)){
return true;
} else {
if((!G__6698.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__6698);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__6698);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__6699 = coll__$1;
var G__6700 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__6699,G__6700) : cljs.core.equiv_sequential.call(null,G__6699,G__6700));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__6701 = o;
var G__6702 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__6701,G__6702) : cljs.core.cons.call(null,G__6701,G__6702));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__6705 = coll__$1;
var G__6706 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__6705,G__6706) : cljs.core.equiv_sequential.call(null,G__6705,G__6706));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__6707 = cljs.core.List.EMPTY;
var G__6708 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__6707,G__6708) : cljs.core.with_meta.call(null,G__6707,G__6708));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__6709 = f;
var G__6710 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__6709,G__6710) : cljs.core.seq_reduce.call(null,G__6709,G__6710));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__6711 = f;
var G__6712 = start;
var G__6713 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__6711,G__6712,G__6713) : cljs.core.seq_reduce.call(null,G__6711,G__6712,G__6713));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__6714 = o;
var G__6715 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__6714,G__6715) : cljs.core.cons.call(null,G__6714,G__6715));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__6716 = sn;
s = G__6716;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__6721__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__6722 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__6723 = cljs.core.first(xs);
var G__6724 = cljs.core.next(xs);
coll = G__6722;
x = G__6723;
xs = G__6724;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__6721 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__6725__i = 0, G__6725__a = new Array(arguments.length -  2);
while (G__6725__i < G__6725__a.length) {G__6725__a[G__6725__i] = arguments[G__6725__i + 2]; ++G__6725__i;}
  xs = new cljs.core.IndexedSeq(G__6725__a,0);
} 
return G__6721__delegate.call(this,coll,x,xs);};
G__6721.cljs$lang$maxFixedArity = 2;
G__6721.cljs$lang$applyTo = (function (arglist__6726){
var coll = cljs.core.first(arglist__6726);
arglist__6726 = cljs.core.next(arglist__6726);
var x = cljs.core.first(arglist__6726);
var xs = cljs.core.rest(arglist__6726);
return G__6721__delegate(coll,x,xs);
});
G__6721.cljs$core$IFn$_invoke$arity$variadic = G__6721__delegate;
return G__6721;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__6727 = null;
if (arguments.length > 2) {
var G__6728__i = 0, G__6728__a = new Array(arguments.length -  2);
while (G__6728__i < G__6728__a.length) {G__6728__a[G__6728__i] = arguments[G__6728__i + 2]; ++G__6728__i;}
G__6727 = new cljs.core.IndexedSeq(G__6728__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__6727);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__6729 = cljs.core.next(s);
var G__6730 = (acc + (1));
s = G__6729;
acc = G__6730;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__6732 = coll;
if(G__6732){
var bit__4487__auto__ = (G__6732.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4487__auto__) || (G__6732.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__6733 = cljs.core.next(coll);
var G__6734 = (n - (1));
coll = G__6733;
n = G__6734;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__6735 = cljs.core.next(coll);
var G__6736 = (n - (1));
var G__6737 = not_found;
coll = G__6735;
n = G__6736;
not_found = G__6737;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__6742 = coll;
if(G__6742){
var bit__4487__auto__ = (G__6742.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4487__auto__) || (G__6742.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__6743 = coll;
if(G__6743){
var bit__4494__auto__ = (G__6743.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4494__auto__) || (G__6743.cljs$core$ISeq$)){
return true;
} else {
if((!G__6743.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6743);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6743);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__6744 = coll;
if(G__6744){
var bit__4487__auto__ = (G__6744.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4487__auto__) || (G__6744.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__6745 = coll;
if(G__6745){
var bit__4494__auto__ = (G__6745.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4494__auto__) || (G__6745.cljs$core$ISeq$)){
return true;
} else {
if((!G__6745.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6745);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6745);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__6746 = (n__$1 - (1));
var G__6747 = cljs.core.rest(xs);
n__$1 = G__6746;
xs = G__6747;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__6750 = o;
if(G__6750){
var bit__4487__auto__ = (G__6750.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4487__auto__) || (G__6750.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__6751 = o;
if(G__6751){
var bit__4487__auto__ = (G__6751.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4487__auto__) || (G__6751.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__6755__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__6756 = ret;
var G__6757 = cljs.core.first(kvs);
var G__6758 = cljs.core.second(kvs);
var G__6759 = cljs.core.nnext(kvs);
coll = G__6756;
k = G__6757;
v = G__6758;
kvs = G__6759;
continue;
} else {
return ret;
}
break;
}
};
var G__6755 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__6760__i = 0, G__6760__a = new Array(arguments.length -  3);
while (G__6760__i < G__6760__a.length) {G__6760__a[G__6760__i] = arguments[G__6760__i + 3]; ++G__6760__i;}
  kvs = new cljs.core.IndexedSeq(G__6760__a,0);
} 
return G__6755__delegate.call(this,coll,k,v,kvs);};
G__6755.cljs$lang$maxFixedArity = 3;
G__6755.cljs$lang$applyTo = (function (arglist__6761){
var coll = cljs.core.first(arglist__6761);
arglist__6761 = cljs.core.next(arglist__6761);
var k = cljs.core.first(arglist__6761);
arglist__6761 = cljs.core.next(arglist__6761);
var v = cljs.core.first(arglist__6761);
var kvs = cljs.core.rest(arglist__6761);
return G__6755__delegate(coll,k,v,kvs);
});
G__6755.cljs$core$IFn$_invoke$arity$variadic = G__6755__delegate;
return G__6755;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__6762 = null;
if (arguments.length > 3) {
var G__6763__i = 0, G__6763__a = new Array(arguments.length -  3);
while (G__6763__i < G__6763__a.length) {G__6763__a[G__6763__i] = arguments[G__6763__i + 3]; ++G__6763__i;}
G__6762 = new cljs.core.IndexedSeq(G__6763__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__6762);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__6766__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__6767 = ret;
var G__6768 = cljs.core.first(ks);
var G__6769 = cljs.core.next(ks);
coll = G__6767;
k = G__6768;
ks = G__6769;
continue;
} else {
return ret;
}
}
break;
}
};
var G__6766 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__6770__i = 0, G__6770__a = new Array(arguments.length -  2);
while (G__6770__i < G__6770__a.length) {G__6770__a[G__6770__i] = arguments[G__6770__i + 2]; ++G__6770__i;}
  ks = new cljs.core.IndexedSeq(G__6770__a,0);
} 
return G__6766__delegate.call(this,coll,k,ks);};
G__6766.cljs$lang$maxFixedArity = 2;
G__6766.cljs$lang$applyTo = (function (arglist__6771){
var coll = cljs.core.first(arglist__6771);
arglist__6771 = cljs.core.next(arglist__6771);
var k = cljs.core.first(arglist__6771);
var ks = cljs.core.rest(arglist__6771);
return G__6766__delegate(coll,k,ks);
});
G__6766.cljs$core$IFn$_invoke$arity$variadic = G__6766__delegate;
return G__6766;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__6772 = null;
if (arguments.length > 2) {
var G__6773__i = 0, G__6773__a = new Array(arguments.length -  2);
while (G__6773__i < G__6773__a.length) {G__6773__a[G__6773__i] = arguments[G__6773__i + 2]; ++G__6773__i;}
G__6772 = new cljs.core.IndexedSeq(G__6773__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__6772);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3813__auto__ = (function (){var G__6778 = f;
return goog.isFunction(G__6778);
})();
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
var G__6779 = f;
if(G__6779){
var bit__4494__auto__ = null;
if(cljs.core.truth_((function (){var or__3813__auto____$1 = bit__4494__auto__;
if(cljs.core.truth_(or__3813__auto____$1)){
return or__3813__auto____$1;
} else {
return G__6779.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__6779.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__6779);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__6779);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__7245 = null;
var G__7245__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__7245__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6781 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__6781) : self__.afn.call(null,G__6781));
});
var G__7245__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6782 = a;
var G__6783 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__6782,G__6783) : self__.afn.call(null,G__6782,G__6783));
});
var G__7245__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6784 = a;
var G__6785 = b;
var G__6786 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__6784,G__6785,G__6786) : self__.afn.call(null,G__6784,G__6785,G__6786));
});
var G__7245__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6787 = a;
var G__6788 = b;
var G__6789 = c;
var G__6790 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__6787,G__6788,G__6789,G__6790) : self__.afn.call(null,G__6787,G__6788,G__6789,G__6790));
});
var G__7245__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6791 = a;
var G__6792 = b;
var G__6793 = c;
var G__6794 = d;
var G__6795 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__6791,G__6792,G__6793,G__6794,G__6795) : self__.afn.call(null,G__6791,G__6792,G__6793,G__6794,G__6795));
});
var G__7245__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6796 = a;
var G__6797 = b;
var G__6798 = c;
var G__6799 = d;
var G__6800 = e;
var G__6801 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__6796,G__6797,G__6798,G__6799,G__6800,G__6801) : self__.afn.call(null,G__6796,G__6797,G__6798,G__6799,G__6800,G__6801));
});
var G__7245__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6802 = a;
var G__6803 = b;
var G__6804 = c;
var G__6805 = d;
var G__6806 = e;
var G__6807 = f;
var G__6808 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__6802,G__6803,G__6804,G__6805,G__6806,G__6807,G__6808) : self__.afn.call(null,G__6802,G__6803,G__6804,G__6805,G__6806,G__6807,G__6808));
});
var G__7245__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6809 = a;
var G__6810 = b;
var G__6811 = c;
var G__6812 = d;
var G__6813 = e;
var G__6814 = f;
var G__6815 = g;
var G__6816 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__6809,G__6810,G__6811,G__6812,G__6813,G__6814,G__6815,G__6816) : self__.afn.call(null,G__6809,G__6810,G__6811,G__6812,G__6813,G__6814,G__6815,G__6816));
});
var G__7245__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6817 = a;
var G__6818 = b;
var G__6819 = c;
var G__6820 = d;
var G__6821 = e;
var G__6822 = f;
var G__6823 = g;
var G__6824 = h;
var G__6825 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__6817,G__6818,G__6819,G__6820,G__6821,G__6822,G__6823,G__6824,G__6825) : self__.afn.call(null,G__6817,G__6818,G__6819,G__6820,G__6821,G__6822,G__6823,G__6824,G__6825));
});
var G__7245__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6826 = a;
var G__6827 = b;
var G__6828 = c;
var G__6829 = d;
var G__6830 = e;
var G__6831 = f;
var G__6832 = g;
var G__6833 = h;
var G__6834 = i;
var G__6835 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__6826,G__6827,G__6828,G__6829,G__6830,G__6831,G__6832,G__6833,G__6834,G__6835) : self__.afn.call(null,G__6826,G__6827,G__6828,G__6829,G__6830,G__6831,G__6832,G__6833,G__6834,G__6835));
});
var G__7245__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6836 = a;
var G__6837 = b;
var G__6838 = c;
var G__6839 = d;
var G__6840 = e;
var G__6841 = f;
var G__6842 = g;
var G__6843 = h;
var G__6844 = i;
var G__6845 = j;
var G__6846 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__6836,G__6837,G__6838,G__6839,G__6840,G__6841,G__6842,G__6843,G__6844,G__6845,G__6846) : self__.afn.call(null,G__6836,G__6837,G__6838,G__6839,G__6840,G__6841,G__6842,G__6843,G__6844,G__6845,G__6846));
});
var G__7245__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6847 = a;
var G__6848 = b;
var G__6849 = c;
var G__6850 = d;
var G__6851 = e;
var G__6852 = f;
var G__6853 = g;
var G__6854 = h;
var G__6855 = i;
var G__6856 = j;
var G__6857 = k;
var G__6858 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__6847,G__6848,G__6849,G__6850,G__6851,G__6852,G__6853,G__6854,G__6855,G__6856,G__6857,G__6858) : self__.afn.call(null,G__6847,G__6848,G__6849,G__6850,G__6851,G__6852,G__6853,G__6854,G__6855,G__6856,G__6857,G__6858));
});
var G__7245__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6859 = a;
var G__6860 = b;
var G__6861 = c;
var G__6862 = d;
var G__6863 = e;
var G__6864 = f;
var G__6865 = g;
var G__6866 = h;
var G__6867 = i;
var G__6868 = j;
var G__6869 = k;
var G__6870 = l;
var G__6871 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__6859,G__6860,G__6861,G__6862,G__6863,G__6864,G__6865,G__6866,G__6867,G__6868,G__6869,G__6870,G__6871) : self__.afn.call(null,G__6859,G__6860,G__6861,G__6862,G__6863,G__6864,G__6865,G__6866,G__6867,G__6868,G__6869,G__6870,G__6871));
});
var G__7245__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6872 = a;
var G__6873 = b;
var G__6874 = c;
var G__6875 = d;
var G__6876 = e;
var G__6877 = f;
var G__6878 = g;
var G__6879 = h;
var G__6880 = i;
var G__6881 = j;
var G__6882 = k;
var G__6883 = l;
var G__6884 = m;
var G__6885 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__6872,G__6873,G__6874,G__6875,G__6876,G__6877,G__6878,G__6879,G__6880,G__6881,G__6882,G__6883,G__6884,G__6885) : self__.afn.call(null,G__6872,G__6873,G__6874,G__6875,G__6876,G__6877,G__6878,G__6879,G__6880,G__6881,G__6882,G__6883,G__6884,G__6885));
});
var G__7245__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6886 = a;
var G__6887 = b;
var G__6888 = c;
var G__6889 = d;
var G__6890 = e;
var G__6891 = f;
var G__6892 = g;
var G__6893 = h;
var G__6894 = i;
var G__6895 = j;
var G__6896 = k;
var G__6897 = l;
var G__6898 = m;
var G__6899 = n;
var G__6900 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__6886,G__6887,G__6888,G__6889,G__6890,G__6891,G__6892,G__6893,G__6894,G__6895,G__6896,G__6897,G__6898,G__6899,G__6900) : self__.afn.call(null,G__6886,G__6887,G__6888,G__6889,G__6890,G__6891,G__6892,G__6893,G__6894,G__6895,G__6896,G__6897,G__6898,G__6899,G__6900));
});
var G__7245__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6901 = a;
var G__6902 = b;
var G__6903 = c;
var G__6904 = d;
var G__6905 = e;
var G__6906 = f;
var G__6907 = g;
var G__6908 = h;
var G__6909 = i;
var G__6910 = j;
var G__6911 = k;
var G__6912 = l;
var G__6913 = m;
var G__6914 = n;
var G__6915 = o;
var G__6916 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__6901,G__6902,G__6903,G__6904,G__6905,G__6906,G__6907,G__6908,G__6909,G__6910,G__6911,G__6912,G__6913,G__6914,G__6915,G__6916) : self__.afn.call(null,G__6901,G__6902,G__6903,G__6904,G__6905,G__6906,G__6907,G__6908,G__6909,G__6910,G__6911,G__6912,G__6913,G__6914,G__6915,G__6916));
});
var G__7245__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6917 = a;
var G__6918 = b;
var G__6919 = c;
var G__6920 = d;
var G__6921 = e;
var G__6922 = f;
var G__6923 = g;
var G__6924 = h;
var G__6925 = i;
var G__6926 = j;
var G__6927 = k;
var G__6928 = l;
var G__6929 = m;
var G__6930 = n;
var G__6931 = o;
var G__6932 = p;
var G__6933 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__6917,G__6918,G__6919,G__6920,G__6921,G__6922,G__6923,G__6924,G__6925,G__6926,G__6927,G__6928,G__6929,G__6930,G__6931,G__6932,G__6933) : self__.afn.call(null,G__6917,G__6918,G__6919,G__6920,G__6921,G__6922,G__6923,G__6924,G__6925,G__6926,G__6927,G__6928,G__6929,G__6930,G__6931,G__6932,G__6933));
});
var G__7245__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6934 = a;
var G__6935 = b;
var G__6936 = c;
var G__6937 = d;
var G__6938 = e;
var G__6939 = f;
var G__6940 = g;
var G__6941 = h;
var G__6942 = i;
var G__6943 = j;
var G__6944 = k;
var G__6945 = l;
var G__6946 = m;
var G__6947 = n;
var G__6948 = o;
var G__6949 = p;
var G__6950 = q;
var G__6951 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__6934,G__6935,G__6936,G__6937,G__6938,G__6939,G__6940,G__6941,G__6942,G__6943,G__6944,G__6945,G__6946,G__6947,G__6948,G__6949,G__6950,G__6951) : self__.afn.call(null,G__6934,G__6935,G__6936,G__6937,G__6938,G__6939,G__6940,G__6941,G__6942,G__6943,G__6944,G__6945,G__6946,G__6947,G__6948,G__6949,G__6950,G__6951));
});
var G__7245__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6952 = a;
var G__6953 = b;
var G__6954 = c;
var G__6955 = d;
var G__6956 = e;
var G__6957 = f;
var G__6958 = g;
var G__6959 = h;
var G__6960 = i;
var G__6961 = j;
var G__6962 = k;
var G__6963 = l;
var G__6964 = m;
var G__6965 = n;
var G__6966 = o;
var G__6967 = p;
var G__6968 = q;
var G__6969 = r;
var G__6970 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__6952,G__6953,G__6954,G__6955,G__6956,G__6957,G__6958,G__6959,G__6960,G__6961,G__6962,G__6963,G__6964,G__6965,G__6966,G__6967,G__6968,G__6969,G__6970) : self__.afn.call(null,G__6952,G__6953,G__6954,G__6955,G__6956,G__6957,G__6958,G__6959,G__6960,G__6961,G__6962,G__6963,G__6964,G__6965,G__6966,G__6967,G__6968,G__6969,G__6970));
});
var G__7245__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6971 = a;
var G__6972 = b;
var G__6973 = c;
var G__6974 = d;
var G__6975 = e;
var G__6976 = f;
var G__6977 = g;
var G__6978 = h;
var G__6979 = i;
var G__6980 = j;
var G__6981 = k;
var G__6982 = l;
var G__6983 = m;
var G__6984 = n;
var G__6985 = o;
var G__6986 = p;
var G__6987 = q;
var G__6988 = r;
var G__6989 = s;
var G__6990 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__6971,G__6972,G__6973,G__6974,G__6975,G__6976,G__6977,G__6978,G__6979,G__6980,G__6981,G__6982,G__6983,G__6984,G__6985,G__6986,G__6987,G__6988,G__6989,G__6990) : self__.afn.call(null,G__6971,G__6972,G__6973,G__6974,G__6975,G__6976,G__6977,G__6978,G__6979,G__6980,G__6981,G__6982,G__6983,G__6984,G__6985,G__6986,G__6987,G__6988,G__6989,G__6990));
});
var G__7245__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6991 = self__.afn;
var G__6992 = a;
var G__6993 = b;
var G__6994 = c;
var G__6995 = d;
var G__6996 = e;
var G__6997 = f;
var G__6998 = g;
var G__6999 = h;
var G__7000 = i;
var G__7001 = j;
var G__7002 = k;
var G__7003 = l;
var G__7004 = m;
var G__7005 = n;
var G__7006 = o;
var G__7007 = p;
var G__7008 = q;
var G__7009 = r;
var G__7010 = s;
var G__7011 = t;
var G__7012 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6991,G__6992,G__6993,G__6994,G__6995,G__6996,G__6997,G__6998,G__6999,G__7000,G__7001,G__7002,G__7003,G__7004,G__7005,G__7006,G__7007,G__7008,G__7009,G__7010,G__7011,G__7012) : cljs.core.apply.call(null,G__6991,G__6992,G__6993,G__6994,G__6995,G__6996,G__6997,G__6998,G__6999,G__7000,G__7001,G__7002,G__7003,G__7004,G__7005,G__7006,G__7007,G__7008,G__7009,G__7010,G__7011,G__7012));
});
G__7245 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__7245__1.call(this,self__);
case 2:
return G__7245__2.call(this,self__,a);
case 3:
return G__7245__3.call(this,self__,a,b);
case 4:
return G__7245__4.call(this,self__,a,b,c);
case 5:
return G__7245__5.call(this,self__,a,b,c,d);
case 6:
return G__7245__6.call(this,self__,a,b,c,d,e);
case 7:
return G__7245__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__7245__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__7245__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__7245__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__7245__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__7245__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__7245__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__7245__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__7245__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__7245__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__7245__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__7245__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__7245__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__7245__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__7245__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__7245__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7245.cljs$core$IFn$_invoke$arity$1 = G__7245__1;
G__7245.cljs$core$IFn$_invoke$arity$2 = G__7245__2;
G__7245.cljs$core$IFn$_invoke$arity$3 = G__7245__3;
G__7245.cljs$core$IFn$_invoke$arity$4 = G__7245__4;
G__7245.cljs$core$IFn$_invoke$arity$5 = G__7245__5;
G__7245.cljs$core$IFn$_invoke$arity$6 = G__7245__6;
G__7245.cljs$core$IFn$_invoke$arity$7 = G__7245__7;
G__7245.cljs$core$IFn$_invoke$arity$8 = G__7245__8;
G__7245.cljs$core$IFn$_invoke$arity$9 = G__7245__9;
G__7245.cljs$core$IFn$_invoke$arity$10 = G__7245__10;
G__7245.cljs$core$IFn$_invoke$arity$11 = G__7245__11;
G__7245.cljs$core$IFn$_invoke$arity$12 = G__7245__12;
G__7245.cljs$core$IFn$_invoke$arity$13 = G__7245__13;
G__7245.cljs$core$IFn$_invoke$arity$14 = G__7245__14;
G__7245.cljs$core$IFn$_invoke$arity$15 = G__7245__15;
G__7245.cljs$core$IFn$_invoke$arity$16 = G__7245__16;
G__7245.cljs$core$IFn$_invoke$arity$17 = G__7245__17;
G__7245.cljs$core$IFn$_invoke$arity$18 = G__7245__18;
G__7245.cljs$core$IFn$_invoke$arity$19 = G__7245__19;
G__7245.cljs$core$IFn$_invoke$arity$20 = G__7245__20;
G__7245.cljs$core$IFn$_invoke$arity$21 = G__7245__21;
G__7245.cljs$core$IFn$_invoke$arity$22 = G__7245__22;
return G__7245;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args6780){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6780)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__7013 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__7013) : self__.afn.call(null,G__7013));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__7014 = a;
var G__7015 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__7014,G__7015) : self__.afn.call(null,G__7014,G__7015));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__7016 = a;
var G__7017 = b;
var G__7018 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__7016,G__7017,G__7018) : self__.afn.call(null,G__7016,G__7017,G__7018));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__7019 = a;
var G__7020 = b;
var G__7021 = c;
var G__7022 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__7019,G__7020,G__7021,G__7022) : self__.afn.call(null,G__7019,G__7020,G__7021,G__7022));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__7023 = a;
var G__7024 = b;
var G__7025 = c;
var G__7026 = d;
var G__7027 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__7023,G__7024,G__7025,G__7026,G__7027) : self__.afn.call(null,G__7023,G__7024,G__7025,G__7026,G__7027));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__7028 = a;
var G__7029 = b;
var G__7030 = c;
var G__7031 = d;
var G__7032 = e;
var G__7033 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__7028,G__7029,G__7030,G__7031,G__7032,G__7033) : self__.afn.call(null,G__7028,G__7029,G__7030,G__7031,G__7032,G__7033));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__7034 = a;
var G__7035 = b;
var G__7036 = c;
var G__7037 = d;
var G__7038 = e;
var G__7039 = f;
var G__7040 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__7034,G__7035,G__7036,G__7037,G__7038,G__7039,G__7040) : self__.afn.call(null,G__7034,G__7035,G__7036,G__7037,G__7038,G__7039,G__7040));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__7041 = a;
var G__7042 = b;
var G__7043 = c;
var G__7044 = d;
var G__7045 = e;
var G__7046 = f;
var G__7047 = g;
var G__7048 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__7041,G__7042,G__7043,G__7044,G__7045,G__7046,G__7047,G__7048) : self__.afn.call(null,G__7041,G__7042,G__7043,G__7044,G__7045,G__7046,G__7047,G__7048));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__7049 = a;
var G__7050 = b;
var G__7051 = c;
var G__7052 = d;
var G__7053 = e;
var G__7054 = f;
var G__7055 = g;
var G__7056 = h;
var G__7057 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__7049,G__7050,G__7051,G__7052,G__7053,G__7054,G__7055,G__7056,G__7057) : self__.afn.call(null,G__7049,G__7050,G__7051,G__7052,G__7053,G__7054,G__7055,G__7056,G__7057));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__7058 = a;
var G__7059 = b;
var G__7060 = c;
var G__7061 = d;
var G__7062 = e;
var G__7063 = f;
var G__7064 = g;
var G__7065 = h;
var G__7066 = i;
var G__7067 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__7058,G__7059,G__7060,G__7061,G__7062,G__7063,G__7064,G__7065,G__7066,G__7067) : self__.afn.call(null,G__7058,G__7059,G__7060,G__7061,G__7062,G__7063,G__7064,G__7065,G__7066,G__7067));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__7068 = a;
var G__7069 = b;
var G__7070 = c;
var G__7071 = d;
var G__7072 = e;
var G__7073 = f;
var G__7074 = g;
var G__7075 = h;
var G__7076 = i;
var G__7077 = j;
var G__7078 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__7068,G__7069,G__7070,G__7071,G__7072,G__7073,G__7074,G__7075,G__7076,G__7077,G__7078) : self__.afn.call(null,G__7068,G__7069,G__7070,G__7071,G__7072,G__7073,G__7074,G__7075,G__7076,G__7077,G__7078));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__7079 = a;
var G__7080 = b;
var G__7081 = c;
var G__7082 = d;
var G__7083 = e;
var G__7084 = f;
var G__7085 = g;
var G__7086 = h;
var G__7087 = i;
var G__7088 = j;
var G__7089 = k;
var G__7090 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__7079,G__7080,G__7081,G__7082,G__7083,G__7084,G__7085,G__7086,G__7087,G__7088,G__7089,G__7090) : self__.afn.call(null,G__7079,G__7080,G__7081,G__7082,G__7083,G__7084,G__7085,G__7086,G__7087,G__7088,G__7089,G__7090));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__7091 = a;
var G__7092 = b;
var G__7093 = c;
var G__7094 = d;
var G__7095 = e;
var G__7096 = f;
var G__7097 = g;
var G__7098 = h;
var G__7099 = i;
var G__7100 = j;
var G__7101 = k;
var G__7102 = l;
var G__7103 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__7091,G__7092,G__7093,G__7094,G__7095,G__7096,G__7097,G__7098,G__7099,G__7100,G__7101,G__7102,G__7103) : self__.afn.call(null,G__7091,G__7092,G__7093,G__7094,G__7095,G__7096,G__7097,G__7098,G__7099,G__7100,G__7101,G__7102,G__7103));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__7104 = a;
var G__7105 = b;
var G__7106 = c;
var G__7107 = d;
var G__7108 = e;
var G__7109 = f;
var G__7110 = g;
var G__7111 = h;
var G__7112 = i;
var G__7113 = j;
var G__7114 = k;
var G__7115 = l;
var G__7116 = m;
var G__7117 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__7104,G__7105,G__7106,G__7107,G__7108,G__7109,G__7110,G__7111,G__7112,G__7113,G__7114,G__7115,G__7116,G__7117) : self__.afn.call(null,G__7104,G__7105,G__7106,G__7107,G__7108,G__7109,G__7110,G__7111,G__7112,G__7113,G__7114,G__7115,G__7116,G__7117));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__7118 = a;
var G__7119 = b;
var G__7120 = c;
var G__7121 = d;
var G__7122 = e;
var G__7123 = f;
var G__7124 = g;
var G__7125 = h;
var G__7126 = i;
var G__7127 = j;
var G__7128 = k;
var G__7129 = l;
var G__7130 = m;
var G__7131 = n;
var G__7132 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__7118,G__7119,G__7120,G__7121,G__7122,G__7123,G__7124,G__7125,G__7126,G__7127,G__7128,G__7129,G__7130,G__7131,G__7132) : self__.afn.call(null,G__7118,G__7119,G__7120,G__7121,G__7122,G__7123,G__7124,G__7125,G__7126,G__7127,G__7128,G__7129,G__7130,G__7131,G__7132));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__7133 = a;
var G__7134 = b;
var G__7135 = c;
var G__7136 = d;
var G__7137 = e;
var G__7138 = f;
var G__7139 = g;
var G__7140 = h;
var G__7141 = i;
var G__7142 = j;
var G__7143 = k;
var G__7144 = l;
var G__7145 = m;
var G__7146 = n;
var G__7147 = o;
var G__7148 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__7133,G__7134,G__7135,G__7136,G__7137,G__7138,G__7139,G__7140,G__7141,G__7142,G__7143,G__7144,G__7145,G__7146,G__7147,G__7148) : self__.afn.call(null,G__7133,G__7134,G__7135,G__7136,G__7137,G__7138,G__7139,G__7140,G__7141,G__7142,G__7143,G__7144,G__7145,G__7146,G__7147,G__7148));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__7149 = a;
var G__7150 = b;
var G__7151 = c;
var G__7152 = d;
var G__7153 = e;
var G__7154 = f;
var G__7155 = g;
var G__7156 = h;
var G__7157 = i;
var G__7158 = j;
var G__7159 = k;
var G__7160 = l;
var G__7161 = m;
var G__7162 = n;
var G__7163 = o;
var G__7164 = p;
var G__7165 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__7149,G__7150,G__7151,G__7152,G__7153,G__7154,G__7155,G__7156,G__7157,G__7158,G__7159,G__7160,G__7161,G__7162,G__7163,G__7164,G__7165) : self__.afn.call(null,G__7149,G__7150,G__7151,G__7152,G__7153,G__7154,G__7155,G__7156,G__7157,G__7158,G__7159,G__7160,G__7161,G__7162,G__7163,G__7164,G__7165));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__7166 = a;
var G__7167 = b;
var G__7168 = c;
var G__7169 = d;
var G__7170 = e;
var G__7171 = f;
var G__7172 = g;
var G__7173 = h;
var G__7174 = i;
var G__7175 = j;
var G__7176 = k;
var G__7177 = l;
var G__7178 = m;
var G__7179 = n;
var G__7180 = o;
var G__7181 = p;
var G__7182 = q;
var G__7183 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__7166,G__7167,G__7168,G__7169,G__7170,G__7171,G__7172,G__7173,G__7174,G__7175,G__7176,G__7177,G__7178,G__7179,G__7180,G__7181,G__7182,G__7183) : self__.afn.call(null,G__7166,G__7167,G__7168,G__7169,G__7170,G__7171,G__7172,G__7173,G__7174,G__7175,G__7176,G__7177,G__7178,G__7179,G__7180,G__7181,G__7182,G__7183));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__7184 = a;
var G__7185 = b;
var G__7186 = c;
var G__7187 = d;
var G__7188 = e;
var G__7189 = f;
var G__7190 = g;
var G__7191 = h;
var G__7192 = i;
var G__7193 = j;
var G__7194 = k;
var G__7195 = l;
var G__7196 = m;
var G__7197 = n;
var G__7198 = o;
var G__7199 = p;
var G__7200 = q;
var G__7201 = r;
var G__7202 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__7184,G__7185,G__7186,G__7187,G__7188,G__7189,G__7190,G__7191,G__7192,G__7193,G__7194,G__7195,G__7196,G__7197,G__7198,G__7199,G__7200,G__7201,G__7202) : self__.afn.call(null,G__7184,G__7185,G__7186,G__7187,G__7188,G__7189,G__7190,G__7191,G__7192,G__7193,G__7194,G__7195,G__7196,G__7197,G__7198,G__7199,G__7200,G__7201,G__7202));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__7203 = a;
var G__7204 = b;
var G__7205 = c;
var G__7206 = d;
var G__7207 = e;
var G__7208 = f;
var G__7209 = g;
var G__7210 = h;
var G__7211 = i;
var G__7212 = j;
var G__7213 = k;
var G__7214 = l;
var G__7215 = m;
var G__7216 = n;
var G__7217 = o;
var G__7218 = p;
var G__7219 = q;
var G__7220 = r;
var G__7221 = s;
var G__7222 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__7203,G__7204,G__7205,G__7206,G__7207,G__7208,G__7209,G__7210,G__7211,G__7212,G__7213,G__7214,G__7215,G__7216,G__7217,G__7218,G__7219,G__7220,G__7221,G__7222) : self__.afn.call(null,G__7203,G__7204,G__7205,G__7206,G__7207,G__7208,G__7209,G__7210,G__7211,G__7212,G__7213,G__7214,G__7215,G__7216,G__7217,G__7218,G__7219,G__7220,G__7221,G__7222));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__7223 = self__.afn;
var G__7224 = a;
var G__7225 = b;
var G__7226 = c;
var G__7227 = d;
var G__7228 = e;
var G__7229 = f;
var G__7230 = g;
var G__7231 = h;
var G__7232 = i;
var G__7233 = j;
var G__7234 = k;
var G__7235 = l;
var G__7236 = m;
var G__7237 = n;
var G__7238 = o;
var G__7239 = p;
var G__7240 = q;
var G__7241 = r;
var G__7242 = s;
var G__7243 = t;
var G__7244 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__7223,G__7224,G__7225,G__7226,G__7227,G__7228,G__7229,G__7230,G__7231,G__7232,G__7233,G__7234,G__7235,G__7236,G__7237,G__7238,G__7239,G__7240,G__7241,G__7242,G__7243,G__7244) : cljs.core.apply.call(null,G__7223,G__7224,G__7225,G__7226,G__7227,G__7228,G__7229,G__7230,G__7231,G__7232,G__7233,G__7234,G__7235,G__7236,G__7237,G__7238,G__7239,G__7240,G__7241,G__7242,G__7243,G__7244));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__7249 = o;
if(G__7249){
var bit__4494__auto__ = (G__7249.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4494__auto__) || (G__7249.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__7249.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__7249);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__7249);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__3801__auto__ = !((o == null));
if(and__3801__auto__){
var G__7253 = o;
if(G__7253){
var bit__4494__auto__ = (G__7253.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4494__auto__) || (G__7253.cljs$core$IMeta$)){
return true;
} else {
if((!G__7253.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__7253);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__7253);
}
} else {
return and__3801__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__7256__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__7257 = ret;
var G__7258 = cljs.core.first(ks);
var G__7259 = cljs.core.next(ks);
coll = G__7257;
k = G__7258;
ks = G__7259;
continue;
} else {
return ret;
}
}
break;
}
};
var G__7256 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__7260__i = 0, G__7260__a = new Array(arguments.length -  2);
while (G__7260__i < G__7260__a.length) {G__7260__a[G__7260__i] = arguments[G__7260__i + 2]; ++G__7260__i;}
  ks = new cljs.core.IndexedSeq(G__7260__a,0);
} 
return G__7256__delegate.call(this,coll,k,ks);};
G__7256.cljs$lang$maxFixedArity = 2;
G__7256.cljs$lang$applyTo = (function (arglist__7261){
var coll = cljs.core.first(arglist__7261);
arglist__7261 = cljs.core.next(arglist__7261);
var k = cljs.core.first(arglist__7261);
var ks = cljs.core.rest(arglist__7261);
return G__7256__delegate(coll,k,ks);
});
G__7256.cljs$core$IFn$_invoke$arity$variadic = G__7256__delegate;
return G__7256;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__7262 = null;
if (arguments.length > 2) {
var G__7263__i = 0, G__7263__a = new Array(arguments.length -  2);
while (G__7263__i < G__7263__a.length) {G__7263__a[G__7263__i] = arguments[G__7263__i + 2]; ++G__7263__i;}
G__7262 = new cljs.core.IndexedSeq(G__7263__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__7262);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__7265 = x;
if(G__7265){
var bit__4494__auto__ = (G__7265.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4494__auto__) || (G__7265.cljs$core$ICollection$)){
return true;
} else {
if((!G__7265.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__7265);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__7265);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__7267 = x;
if(G__7267){
var bit__4494__auto__ = (G__7267.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4494__auto__) || (G__7267.cljs$core$ISet$)){
return true;
} else {
if((!G__7267.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__7267);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__7267);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__7269 = x;
if(G__7269){
var bit__4494__auto__ = (G__7269.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4494__auto__) || (G__7269.cljs$core$IAssociative$)){
return true;
} else {
if((!G__7269.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__7269);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__7269);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__7271 = x;
if(G__7271){
var bit__4494__auto__ = (G__7271.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4494__auto__) || (G__7271.cljs$core$ISequential$)){
return true;
} else {
if((!G__7271.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__7271);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__7271);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__7273 = x;
if(G__7273){
var bit__4494__auto__ = (G__7273.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4494__auto__) || (G__7273.cljs$core$ISorted$)){
return true;
} else {
if((!G__7273.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__7273);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__7273);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__7275 = x;
if(G__7275){
var bit__4494__auto__ = (G__7275.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4494__auto__) || (G__7275.cljs$core$IReduce$)){
return true;
} else {
if((!G__7275.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__7275);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__7275);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__7277 = x;
if(G__7277){
var bit__4494__auto__ = (G__7277.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4494__auto__) || (G__7277.cljs$core$IMap$)){
return true;
} else {
if((!G__7277.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__7277);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__7277);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__7279 = x;
if(G__7279){
var bit__4494__auto__ = (G__7279.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4494__auto__) || (G__7279.cljs$core$IVector$)){
return true;
} else {
if((!G__7279.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__7279);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__7279);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__7281 = x;
if(G__7281){
var bit__4487__auto__ = (G__7281.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4487__auto__) || (G__7281.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj7287 = {};
return obj7287;
});
var js_obj__1 = (function() { 
var G__7290__delegate = function (keyvals){
var G__7288 = goog.object.create;
var G__7289 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__7288,G__7289) : cljs.core.apply.call(null,G__7288,G__7289));
};
var G__7290 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__7291__i = 0, G__7291__a = new Array(arguments.length -  0);
while (G__7291__i < G__7291__a.length) {G__7291__a[G__7291__i] = arguments[G__7291__i + 0]; ++G__7291__i;}
  keyvals = new cljs.core.IndexedSeq(G__7291__a,0);
} 
return G__7290__delegate.call(this,keyvals);};
G__7290.cljs$lang$maxFixedArity = 0;
G__7290.cljs$lang$applyTo = (function (arglist__7292){
var keyvals = cljs.core.seq(arglist__7292);
return G__7290__delegate(keyvals);
});
G__7290.cljs$core$IFn$_invoke$arity$variadic = G__7290__delegate;
return G__7290;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__7293 = null;
if (arguments.length > 0) {
var G__7294__i = 0, G__7294__a = new Array(arguments.length -  0);
while (G__7294__i < G__7294__a.length) {G__7294__a[G__7294__i] = arguments[G__7294__i + 0]; ++G__7294__i;}
G__7293 = new cljs.core.IndexedSeq(G__7294__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__7293);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__7297_7299 = obj;
var G__7298_7300 = ((function (G__7297_7299,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__7297_7299,keys))
;
goog.object.forEach(G__7297_7299,G__7298_7300);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__7301 = (i__$1 + (1));
var G__7302 = (j__$1 + (1));
var G__7303 = (len__$1 - (1));
i__$1 = G__7301;
j__$1 = G__7302;
len__$1 = G__7303;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__7304 = (i__$1 - (1));
var G__7305 = (j__$1 - (1));
var G__7306 = (len__$1 - (1));
i__$1 = G__7304;
j__$1 = G__7305;
len__$1 = G__7306;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj7308 = {};
return obj7308;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__7310 = s;
if(G__7310){
var bit__4494__auto__ = (G__7310.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4494__auto__) || (G__7310.cljs$core$ISeq$)){
return true;
} else {
if((!G__7310.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__7310);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__7310);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__7312 = s;
if(G__7312){
var bit__4494__auto__ = (G__7312.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4494__auto__) || (G__7312.cljs$core$ISeqable$)){
return true;
} else {
if((!G__7312.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__7312);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__7312);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3813__auto__ = cljs.core.fn_QMARK_(f);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var G__7316 = f;
if(G__7316){
var bit__4494__auto__ = (G__7316.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4494__auto__) || (G__7316.cljs$core$IFn$)){
return true;
} else {
if((!G__7316.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__7316);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__7316);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__7329 = n;
return isNaN(G__7329);
})())) && (!((n === Infinity))) && (((function (){var G__7330 = n;
return parseFloat(G__7330);
})() === (function (){var G__7331 = n;
var G__7332 = (10);
return parseInt(G__7331,G__7332);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__7333__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__7334 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__7335 = etc;
s = G__7334;
xs = G__7335;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__7333 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7336__i = 0, G__7336__a = new Array(arguments.length -  2);
while (G__7336__i < G__7336__a.length) {G__7336__a[G__7336__i] = arguments[G__7336__i + 2]; ++G__7336__i;}
  more = new cljs.core.IndexedSeq(G__7336__a,0);
} 
return G__7333__delegate.call(this,x,y,more);};
G__7333.cljs$lang$maxFixedArity = 2;
G__7333.cljs$lang$applyTo = (function (arglist__7337){
var x = cljs.core.first(arglist__7337);
arglist__7337 = cljs.core.next(arglist__7337);
var y = cljs.core.first(arglist__7337);
var more = cljs.core.rest(arglist__7337);
return G__7333__delegate(x,y,more);
});
G__7333.cljs$core$IFn$_invoke$arity$variadic = G__7333__delegate;
return G__7333;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__7338 = null;
if (arguments.length > 2) {
var G__7339__i = 0, G__7339__a = new Array(arguments.length -  2);
while (G__7339__i < G__7339__a.length) {G__7339__a[G__7339__i] = arguments[G__7339__i + 2]; ++G__7339__i;}
G__7338 = new cljs.core.IndexedSeq(G__7339__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7338);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__7343 = x;
if(G__7343){
var bit__4487__auto__ = (G__7343.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4487__auto__) || (G__7343.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__7344 = x;
var G__7345 = y;
return goog.array.defaultCompare(G__7344,G__7345);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__7350 = xs;
var G__7351 = ys;
var G__7352 = len;
var G__7353 = (n + (1));
xs = G__7350;
ys = G__7351;
len = G__7352;
n = G__7353;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__7358 = x;
var G__7359 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7358,G__7359) : f.call(null,G__7358,G__7359));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__7360 = y;
var G__7361 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7360,G__7361) : f.call(null,G__7360,G__7361));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__7367 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__7367) : cljs.core.to_array.call(null,G__7367));
})();
var G__7368_7370 = a;
var G__7369_7371 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__7368_7370,G__7369_7371);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__7377 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__7377) : keyfn.call(null,G__7377));
})(),(function (){var G__7378 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__7378) : keyfn.call(null,G__7378));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__7384 = f;
var G__7385 = cljs.core.first(s);
var G__7386 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__7384,G__7385,G__7386) : cljs.core.reduce.call(null,G__7384,G__7385,G__7386));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__7387 = val__$1;
var G__7388 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7387,G__7388) : f.call(null,G__7387,G__7388));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__7389 = nval;
var G__7390 = cljs.core.next(coll__$1);
val__$1 = G__7389;
coll__$1 = G__7390;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__7394 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__7394) : cljs.core.to_array.call(null,G__7394));
})();
var G__7395_7397 = a;
goog.array.shuffle(G__7395_7397);

var G__7396 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__7396) : cljs.core.vec.call(null,G__7396));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__7400 = coll;
if(G__7400){
var bit__4487__auto__ = (G__7400.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4487__auto__) || (G__7400.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__7401 = coll;
if(G__7401){
var bit__4487__auto__ = (G__7401.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4487__auto__) || (G__7401.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__7410 = null;
var G__7410__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__7410__1 = (function (x){
var G__7407 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__7407) : cf.call(null,G__7407));
});
var G__7410__2 = (function (x,y){
var G__7408 = x;
var G__7409 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7408,G__7409) : f.call(null,G__7408,G__7409));
});
G__7410 = function(x,y){
switch(arguments.length){
case 0:
return G__7410__0.call(this);
case 1:
return G__7410__1.call(this,x);
case 2:
return G__7410__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7410.cljs$core$IFn$_invoke$arity$0 = G__7410__0;
G__7410.cljs$core$IFn$_invoke$arity$1 = G__7410__1;
G__7410.cljs$core$IFn$_invoke$arity$2 = G__7410__2;
return G__7410;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__7417 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__7417) : xform.call(null,G__7417));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__7418 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__7418) : f__$1.call(null,G__7418));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__7419__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__7419 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7420__i = 0, G__7420__a = new Array(arguments.length -  2);
while (G__7420__i < G__7420__a.length) {G__7420__a[G__7420__i] = arguments[G__7420__i + 2]; ++G__7420__i;}
  more = new cljs.core.IndexedSeq(G__7420__a,0);
} 
return G__7419__delegate.call(this,x,y,more);};
G__7419.cljs$lang$maxFixedArity = 2;
G__7419.cljs$lang$applyTo = (function (arglist__7421){
var x = cljs.core.first(arglist__7421);
arglist__7421 = cljs.core.next(arglist__7421);
var y = cljs.core.first(arglist__7421);
var more = cljs.core.rest(arglist__7421);
return G__7419__delegate(x,y,more);
});
G__7419.cljs$core$IFn$_invoke$arity$variadic = G__7419__delegate;
return G__7419;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__7422 = null;
if (arguments.length > 2) {
var G__7423__i = 0, G__7423__a = new Array(arguments.length -  2);
while (G__7423__i < G__7423__a.length) {G__7423__a[G__7423__i] = arguments[G__7423__i + 2]; ++G__7423__i;}
G__7422 = new cljs.core.IndexedSeq(G__7423__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7422);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__7424__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__7424 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7425__i = 0, G__7425__a = new Array(arguments.length -  2);
while (G__7425__i < G__7425__a.length) {G__7425__a[G__7425__i] = arguments[G__7425__i + 2]; ++G__7425__i;}
  more = new cljs.core.IndexedSeq(G__7425__a,0);
} 
return G__7424__delegate.call(this,x,y,more);};
G__7424.cljs$lang$maxFixedArity = 2;
G__7424.cljs$lang$applyTo = (function (arglist__7426){
var x = cljs.core.first(arglist__7426);
arglist__7426 = cljs.core.next(arglist__7426);
var y = cljs.core.first(arglist__7426);
var more = cljs.core.rest(arglist__7426);
return G__7424__delegate(x,y,more);
});
G__7424.cljs$core$IFn$_invoke$arity$variadic = G__7424__delegate;
return G__7424;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__7427 = null;
if (arguments.length > 2) {
var G__7428__i = 0, G__7428__a = new Array(arguments.length -  2);
while (G__7428__i < G__7428__a.length) {G__7428__a[G__7428__i] = arguments[G__7428__i + 2]; ++G__7428__i;}
G__7427 = new cljs.core.IndexedSeq(G__7428__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7427);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__7429__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__7429 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7430__i = 0, G__7430__a = new Array(arguments.length -  2);
while (G__7430__i < G__7430__a.length) {G__7430__a[G__7430__i] = arguments[G__7430__i + 2]; ++G__7430__i;}
  more = new cljs.core.IndexedSeq(G__7430__a,0);
} 
return G__7429__delegate.call(this,x,y,more);};
G__7429.cljs$lang$maxFixedArity = 2;
G__7429.cljs$lang$applyTo = (function (arglist__7431){
var x = cljs.core.first(arglist__7431);
arglist__7431 = cljs.core.next(arglist__7431);
var y = cljs.core.first(arglist__7431);
var more = cljs.core.rest(arglist__7431);
return G__7429__delegate(x,y,more);
});
G__7429.cljs$core$IFn$_invoke$arity$variadic = G__7429__delegate;
return G__7429;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__7432 = null;
if (arguments.length > 2) {
var G__7433__i = 0, G__7433__a = new Array(arguments.length -  2);
while (G__7433__i < G__7433__a.length) {G__7433__a[G__7433__i] = arguments[G__7433__i + 2]; ++G__7433__i;}
G__7432 = new cljs.core.IndexedSeq(G__7433__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7432);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__7438__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__7438 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7439__i = 0, G__7439__a = new Array(arguments.length -  2);
while (G__7439__i < G__7439__a.length) {G__7439__a[G__7439__i] = arguments[G__7439__i + 2]; ++G__7439__i;}
  more = new cljs.core.IndexedSeq(G__7439__a,0);
} 
return G__7438__delegate.call(this,x,y,more);};
G__7438.cljs$lang$maxFixedArity = 2;
G__7438.cljs$lang$applyTo = (function (arglist__7440){
var x = cljs.core.first(arglist__7440);
arglist__7440 = cljs.core.next(arglist__7440);
var y = cljs.core.first(arglist__7440);
var more = cljs.core.rest(arglist__7440);
return G__7438__delegate(x,y,more);
});
G__7438.cljs$core$IFn$_invoke$arity$variadic = G__7438__delegate;
return G__7438;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__7441 = null;
if (arguments.length > 2) {
var G__7442__i = 0, G__7442__a = new Array(arguments.length -  2);
while (G__7442__i < G__7442__a.length) {G__7442__a[G__7442__i] = arguments[G__7442__i + 2]; ++G__7442__i;}
G__7441 = new cljs.core.IndexedSeq(G__7442__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7441);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__7443__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__7444 = y;
var G__7445 = cljs.core.first(more);
var G__7446 = cljs.core.next(more);
x = G__7444;
y = G__7445;
more = G__7446;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7443 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7447__i = 0, G__7447__a = new Array(arguments.length -  2);
while (G__7447__i < G__7447__a.length) {G__7447__a[G__7447__i] = arguments[G__7447__i + 2]; ++G__7447__i;}
  more = new cljs.core.IndexedSeq(G__7447__a,0);
} 
return G__7443__delegate.call(this,x,y,more);};
G__7443.cljs$lang$maxFixedArity = 2;
G__7443.cljs$lang$applyTo = (function (arglist__7448){
var x = cljs.core.first(arglist__7448);
arglist__7448 = cljs.core.next(arglist__7448);
var y = cljs.core.first(arglist__7448);
var more = cljs.core.rest(arglist__7448);
return G__7443__delegate(x,y,more);
});
G__7443.cljs$core$IFn$_invoke$arity$variadic = G__7443__delegate;
return G__7443;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__7449 = null;
if (arguments.length > 2) {
var G__7450__i = 0, G__7450__a = new Array(arguments.length -  2);
while (G__7450__i < G__7450__a.length) {G__7450__a[G__7450__i] = arguments[G__7450__i + 2]; ++G__7450__i;}
G__7449 = new cljs.core.IndexedSeq(G__7450__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7449);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__7451__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__7452 = y;
var G__7453 = cljs.core.first(more);
var G__7454 = cljs.core.next(more);
x = G__7452;
y = G__7453;
more = G__7454;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7451 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7455__i = 0, G__7455__a = new Array(arguments.length -  2);
while (G__7455__i < G__7455__a.length) {G__7455__a[G__7455__i] = arguments[G__7455__i + 2]; ++G__7455__i;}
  more = new cljs.core.IndexedSeq(G__7455__a,0);
} 
return G__7451__delegate.call(this,x,y,more);};
G__7451.cljs$lang$maxFixedArity = 2;
G__7451.cljs$lang$applyTo = (function (arglist__7456){
var x = cljs.core.first(arglist__7456);
arglist__7456 = cljs.core.next(arglist__7456);
var y = cljs.core.first(arglist__7456);
var more = cljs.core.rest(arglist__7456);
return G__7451__delegate(x,y,more);
});
G__7451.cljs$core$IFn$_invoke$arity$variadic = G__7451__delegate;
return G__7451;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__7457 = null;
if (arguments.length > 2) {
var G__7458__i = 0, G__7458__a = new Array(arguments.length -  2);
while (G__7458__i < G__7458__a.length) {G__7458__a[G__7458__i] = arguments[G__7458__i + 2]; ++G__7458__i;}
G__7457 = new cljs.core.IndexedSeq(G__7458__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7457);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__7459__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__7460 = y;
var G__7461 = cljs.core.first(more);
var G__7462 = cljs.core.next(more);
x = G__7460;
y = G__7461;
more = G__7462;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7459 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7463__i = 0, G__7463__a = new Array(arguments.length -  2);
while (G__7463__i < G__7463__a.length) {G__7463__a[G__7463__i] = arguments[G__7463__i + 2]; ++G__7463__i;}
  more = new cljs.core.IndexedSeq(G__7463__a,0);
} 
return G__7459__delegate.call(this,x,y,more);};
G__7459.cljs$lang$maxFixedArity = 2;
G__7459.cljs$lang$applyTo = (function (arglist__7464){
var x = cljs.core.first(arglist__7464);
arglist__7464 = cljs.core.next(arglist__7464);
var y = cljs.core.first(arglist__7464);
var more = cljs.core.rest(arglist__7464);
return G__7459__delegate(x,y,more);
});
G__7459.cljs$core$IFn$_invoke$arity$variadic = G__7459__delegate;
return G__7459;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__7465 = null;
if (arguments.length > 2) {
var G__7466__i = 0, G__7466__a = new Array(arguments.length -  2);
while (G__7466__i < G__7466__a.length) {G__7466__a[G__7466__i] = arguments[G__7466__i + 2]; ++G__7466__i;}
G__7465 = new cljs.core.IndexedSeq(G__7466__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7465);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__7467__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__7468 = y;
var G__7469 = cljs.core.first(more);
var G__7470 = cljs.core.next(more);
x = G__7468;
y = G__7469;
more = G__7470;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7467 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7471__i = 0, G__7471__a = new Array(arguments.length -  2);
while (G__7471__i < G__7471__a.length) {G__7471__a[G__7471__i] = arguments[G__7471__i + 2]; ++G__7471__i;}
  more = new cljs.core.IndexedSeq(G__7471__a,0);
} 
return G__7467__delegate.call(this,x,y,more);};
G__7467.cljs$lang$maxFixedArity = 2;
G__7467.cljs$lang$applyTo = (function (arglist__7472){
var x = cljs.core.first(arglist__7472);
arglist__7472 = cljs.core.next(arglist__7472);
var y = cljs.core.first(arglist__7472);
var more = cljs.core.rest(arglist__7472);
return G__7467__delegate(x,y,more);
});
G__7467.cljs$core$IFn$_invoke$arity$variadic = G__7467__delegate;
return G__7467;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__7473 = null;
if (arguments.length > 2) {
var G__7474__i = 0, G__7474__a = new Array(arguments.length -  2);
while (G__7474__i < G__7474__a.length) {G__7474__a[G__7474__i] = arguments[G__7474__i + 2]; ++G__7474__i;}
G__7473 = new cljs.core.IndexedSeq(G__7474__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7473);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__4130__auto__ = x;
var y__4131__auto__ = y;
return ((x__4130__auto__ > y__4131__auto__) ? x__4130__auto__ : y__4131__auto__);
});
var max__3 = (function() { 
var G__7475__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__4130__auto__ = x;
var y__4131__auto__ = y;
return ((x__4130__auto__ > y__4131__auto__) ? x__4130__auto__ : y__4131__auto__);
})(),more);
};
var G__7475 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7476__i = 0, G__7476__a = new Array(arguments.length -  2);
while (G__7476__i < G__7476__a.length) {G__7476__a[G__7476__i] = arguments[G__7476__i + 2]; ++G__7476__i;}
  more = new cljs.core.IndexedSeq(G__7476__a,0);
} 
return G__7475__delegate.call(this,x,y,more);};
G__7475.cljs$lang$maxFixedArity = 2;
G__7475.cljs$lang$applyTo = (function (arglist__7477){
var x = cljs.core.first(arglist__7477);
arglist__7477 = cljs.core.next(arglist__7477);
var y = cljs.core.first(arglist__7477);
var more = cljs.core.rest(arglist__7477);
return G__7475__delegate(x,y,more);
});
G__7475.cljs$core$IFn$_invoke$arity$variadic = G__7475__delegate;
return G__7475;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__7478 = null;
if (arguments.length > 2) {
var G__7479__i = 0, G__7479__a = new Array(arguments.length -  2);
while (G__7479__i < G__7479__a.length) {G__7479__a[G__7479__i] = arguments[G__7479__i + 2]; ++G__7479__i;}
G__7478 = new cljs.core.IndexedSeq(G__7479__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7478);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__4137__auto__ = x;
var y__4138__auto__ = y;
return ((x__4137__auto__ < y__4138__auto__) ? x__4137__auto__ : y__4138__auto__);
});
var min__3 = (function() { 
var G__7480__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__4137__auto__ = x;
var y__4138__auto__ = y;
return ((x__4137__auto__ < y__4138__auto__) ? x__4137__auto__ : y__4138__auto__);
})(),more);
};
var G__7480 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7481__i = 0, G__7481__a = new Array(arguments.length -  2);
while (G__7481__i < G__7481__a.length) {G__7481__a[G__7481__i] = arguments[G__7481__i + 2]; ++G__7481__i;}
  more = new cljs.core.IndexedSeq(G__7481__a,0);
} 
return G__7480__delegate.call(this,x,y,more);};
G__7480.cljs$lang$maxFixedArity = 2;
G__7480.cljs$lang$applyTo = (function (arglist__7482){
var x = cljs.core.first(arglist__7482);
arglist__7482 = cljs.core.next(arglist__7482);
var y = cljs.core.first(arglist__7482);
var more = cljs.core.rest(arglist__7482);
return G__7480__delegate(x,y,more);
});
G__7480.cljs$core$IFn$_invoke$arity$variadic = G__7480__delegate;
return G__7480;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__7483 = null;
if (arguments.length > 2) {
var G__7484__i = 0, G__7484__a = new Array(arguments.length -  2);
while (G__7484__i < G__7484__a.length) {G__7484__a[G__7484__i] = arguments[G__7484__i + 2]; ++G__7484__i;}
G__7483 = new cljs.core.IndexedSeq(G__7484__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7483);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__7485__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__7485 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7486__i = 0, G__7486__a = new Array(arguments.length -  2);
while (G__7486__i < G__7486__a.length) {G__7486__a[G__7486__i] = arguments[G__7486__i + 2]; ++G__7486__i;}
  more = new cljs.core.IndexedSeq(G__7486__a,0);
} 
return G__7485__delegate.call(this,x,y,more);};
G__7485.cljs$lang$maxFixedArity = 2;
G__7485.cljs$lang$applyTo = (function (arglist__7487){
var x = cljs.core.first(arglist__7487);
arglist__7487 = cljs.core.next(arglist__7487);
var y = cljs.core.first(arglist__7487);
var more = cljs.core.rest(arglist__7487);
return G__7485__delegate(x,y,more);
});
G__7485.cljs$core$IFn$_invoke$arity$variadic = G__7485__delegate;
return G__7485;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__7488 = null;
if (arguments.length > 2) {
var G__7489__i = 0, G__7489__a = new Array(arguments.length -  2);
while (G__7489__i < G__7489__a.length) {G__7489__a[G__7489__i] = arguments[G__7489__i + 2]; ++G__7489__i;}
G__7488 = new cljs.core.IndexedSeq(G__7489__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7488);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__7490__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__7490 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7491__i = 0, G__7491__a = new Array(arguments.length -  2);
while (G__7491__i < G__7491__a.length) {G__7491__a[G__7491__i] = arguments[G__7491__i + 2]; ++G__7491__i;}
  more = new cljs.core.IndexedSeq(G__7491__a,0);
} 
return G__7490__delegate.call(this,x,y,more);};
G__7490.cljs$lang$maxFixedArity = 2;
G__7490.cljs$lang$applyTo = (function (arglist__7492){
var x = cljs.core.first(arglist__7492);
arglist__7492 = cljs.core.next(arglist__7492);
var y = cljs.core.first(arglist__7492);
var more = cljs.core.rest(arglist__7492);
return G__7490__delegate(x,y,more);
});
G__7490.cljs$core$IFn$_invoke$arity$variadic = G__7490__delegate;
return G__7490;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__7493 = null;
if (arguments.length > 2) {
var G__7494__i = 0, G__7494__a = new Array(arguments.length -  2);
while (G__7494__i < G__7494__a.length) {G__7494__a[G__7494__i] = arguments[G__7494__i + 2]; ++G__7494__i;}
G__7493 = new cljs.core.IndexedSeq(G__7494__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7493);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__7499__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__7499 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7500__i = 0, G__7500__a = new Array(arguments.length -  2);
while (G__7500__i < G__7500__a.length) {G__7500__a[G__7500__i] = arguments[G__7500__i + 2]; ++G__7500__i;}
  more = new cljs.core.IndexedSeq(G__7500__a,0);
} 
return G__7499__delegate.call(this,x,y,more);};
G__7499.cljs$lang$maxFixedArity = 2;
G__7499.cljs$lang$applyTo = (function (arglist__7501){
var x = cljs.core.first(arglist__7501);
arglist__7501 = cljs.core.next(arglist__7501);
var y = cljs.core.first(arglist__7501);
var more = cljs.core.rest(arglist__7501);
return G__7499__delegate(x,y,more);
});
G__7499.cljs$core$IFn$_invoke$arity$variadic = G__7499__delegate;
return G__7499;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__7502 = null;
if (arguments.length > 2) {
var G__7503__i = 0, G__7503__a = new Array(arguments.length -  2);
while (G__7503__i < G__7503__a.length) {G__7503__a[G__7503__i] = arguments[G__7503__i + 2]; ++G__7503__i;}
G__7502 = new cljs.core.IndexedSeq(G__7503__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7502);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__7504__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__7504 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7505__i = 0, G__7505__a = new Array(arguments.length -  2);
while (G__7505__i < G__7505__a.length) {G__7505__a[G__7505__i] = arguments[G__7505__i + 2]; ++G__7505__i;}
  more = new cljs.core.IndexedSeq(G__7505__a,0);
} 
return G__7504__delegate.call(this,x,y,more);};
G__7504.cljs$lang$maxFixedArity = 2;
G__7504.cljs$lang$applyTo = (function (arglist__7506){
var x = cljs.core.first(arglist__7506);
arglist__7506 = cljs.core.next(arglist__7506);
var y = cljs.core.first(arglist__7506);
var more = cljs.core.rest(arglist__7506);
return G__7504__delegate(x,y,more);
});
G__7504.cljs$core$IFn$_invoke$arity$variadic = G__7504__delegate;
return G__7504;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__7507 = null;
if (arguments.length > 2) {
var G__7508__i = 0, G__7508__a = new Array(arguments.length -  2);
while (G__7508__i < G__7508__a.length) {G__7508__a[G__7508__i] = arguments[G__7508__i + 2]; ++G__7508__i;}
G__7507 = new cljs.core.IndexedSeq(G__7508__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7507);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__7509__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__7509 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7510__i = 0, G__7510__a = new Array(arguments.length -  2);
while (G__7510__i < G__7510__a.length) {G__7510__a[G__7510__i] = arguments[G__7510__i + 2]; ++G__7510__i;}
  more = new cljs.core.IndexedSeq(G__7510__a,0);
} 
return G__7509__delegate.call(this,x,y,more);};
G__7509.cljs$lang$maxFixedArity = 2;
G__7509.cljs$lang$applyTo = (function (arglist__7511){
var x = cljs.core.first(arglist__7511);
arglist__7511 = cljs.core.next(arglist__7511);
var y = cljs.core.first(arglist__7511);
var more = cljs.core.rest(arglist__7511);
return G__7509__delegate(x,y,more);
});
G__7509.cljs$core$IFn$_invoke$arity$variadic = G__7509__delegate;
return G__7509;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__7512 = null;
if (arguments.length > 2) {
var G__7513__i = 0, G__7513__a = new Array(arguments.length -  2);
while (G__7513__i < G__7513__a.length) {G__7513__a[G__7513__i] = arguments[G__7513__i + 2]; ++G__7513__i;}
G__7512 = new cljs.core.IndexedSeq(G__7513__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7512);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__7516 = x;
var G__7517 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__7516,G__7517) : cljs.core.mod.call(null,G__7516,G__7517));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__7518__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__7518 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7519__i = 0, G__7519__a = new Array(arguments.length -  2);
while (G__7519__i < G__7519__a.length) {G__7519__a[G__7519__i] = arguments[G__7519__i + 2]; ++G__7519__i;}
  more = new cljs.core.IndexedSeq(G__7519__a,0);
} 
return G__7518__delegate.call(this,x,y,more);};
G__7518.cljs$lang$maxFixedArity = 2;
G__7518.cljs$lang$applyTo = (function (arglist__7520){
var x = cljs.core.first(arglist__7520);
arglist__7520 = cljs.core.next(arglist__7520);
var y = cljs.core.first(arglist__7520);
var more = cljs.core.rest(arglist__7520);
return G__7518__delegate(x,y,more);
});
G__7518.cljs$core$IFn$_invoke$arity$variadic = G__7518__delegate;
return G__7518;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__7521 = null;
if (arguments.length > 2) {
var G__7522__i = 0, G__7522__a = new Array(arguments.length -  2);
while (G__7522__i < G__7522__a.length) {G__7522__a[G__7522__i] = arguments[G__7522__i + 2]; ++G__7522__i;}
G__7521 = new cljs.core.IndexedSeq(G__7522__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7521);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__7523__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__7523 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7524__i = 0, G__7524__a = new Array(arguments.length -  2);
while (G__7524__i < G__7524__a.length) {G__7524__a[G__7524__i] = arguments[G__7524__i + 2]; ++G__7524__i;}
  more = new cljs.core.IndexedSeq(G__7524__a,0);
} 
return G__7523__delegate.call(this,x,y,more);};
G__7523.cljs$lang$maxFixedArity = 2;
G__7523.cljs$lang$applyTo = (function (arglist__7525){
var x = cljs.core.first(arglist__7525);
arglist__7525 = cljs.core.next(arglist__7525);
var y = cljs.core.first(arglist__7525);
var more = cljs.core.rest(arglist__7525);
return G__7523__delegate(x,y,more);
});
G__7523.cljs$core$IFn$_invoke$arity$variadic = G__7523__delegate;
return G__7523;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__7526 = null;
if (arguments.length > 2) {
var G__7527__i = 0, G__7527__a = new Array(arguments.length -  2);
while (G__7527__i < G__7527__a.length) {G__7527__a[G__7527__i] = arguments[G__7527__i + 2]; ++G__7527__i;}
G__7526 = new cljs.core.IndexedSeq(G__7527__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7526);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__7530 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__7530) : Math.floor.call(null,G__7530));
} else {
var G__7531 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__7531) : Math.ceil.call(null,G__7531));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__7532__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__7532 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7533__i = 0, G__7533__a = new Array(arguments.length -  2);
while (G__7533__i < G__7533__a.length) {G__7533__a[G__7533__i] = arguments[G__7533__i + 2]; ++G__7533__i;}
  more = new cljs.core.IndexedSeq(G__7533__a,0);
} 
return G__7532__delegate.call(this,x,y,more);};
G__7532.cljs$lang$maxFixedArity = 2;
G__7532.cljs$lang$applyTo = (function (arglist__7534){
var x = cljs.core.first(arglist__7534);
arglist__7534 = cljs.core.next(arglist__7534);
var y = cljs.core.first(arglist__7534);
var more = cljs.core.rest(arglist__7534);
return G__7532__delegate(x,y,more);
});
G__7532.cljs$core$IFn$_invoke$arity$variadic = G__7532__delegate;
return G__7532;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__7535 = null;
if (arguments.length > 2) {
var G__7536__i = 0, G__7536__a = new Array(arguments.length -  2);
while (G__7536__i < G__7536__a.length) {G__7536__a[G__7536__i] = arguments[G__7536__i + 2]; ++G__7536__i;}
G__7535 = new cljs.core.IndexedSeq(G__7536__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7535);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__7537__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__7537 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7538__i = 0, G__7538__a = new Array(arguments.length -  2);
while (G__7538__i < G__7538__a.length) {G__7538__a[G__7538__i] = arguments[G__7538__i + 2]; ++G__7538__i;}
  more = new cljs.core.IndexedSeq(G__7538__a,0);
} 
return G__7537__delegate.call(this,x,y,more);};
G__7537.cljs$lang$maxFixedArity = 2;
G__7537.cljs$lang$applyTo = (function (arglist__7539){
var x = cljs.core.first(arglist__7539);
arglist__7539 = cljs.core.next(arglist__7539);
var y = cljs.core.first(arglist__7539);
var more = cljs.core.rest(arglist__7539);
return G__7537__delegate(x,y,more);
});
G__7537.cljs$core$IFn$_invoke$arity$variadic = G__7537__delegate;
return G__7537;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__7540 = null;
if (arguments.length > 2) {
var G__7541__i = 0, G__7541__a = new Array(arguments.length -  2);
while (G__7541__i < G__7541__a.length) {G__7541__a[G__7541__i] = arguments[G__7541__i + 2]; ++G__7541__i;}
G__7540 = new cljs.core.IndexedSeq(G__7541__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7540);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__7542__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__7542 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7543__i = 0, G__7543__a = new Array(arguments.length -  2);
while (G__7543__i < G__7543__a.length) {G__7543__a[G__7543__i] = arguments[G__7543__i + 2]; ++G__7543__i;}
  more = new cljs.core.IndexedSeq(G__7543__a,0);
} 
return G__7542__delegate.call(this,x,y,more);};
G__7542.cljs$lang$maxFixedArity = 2;
G__7542.cljs$lang$applyTo = (function (arglist__7544){
var x = cljs.core.first(arglist__7544);
arglist__7544 = cljs.core.next(arglist__7544);
var y = cljs.core.first(arglist__7544);
var more = cljs.core.rest(arglist__7544);
return G__7542__delegate(x,y,more);
});
G__7542.cljs$core$IFn$_invoke$arity$variadic = G__7542__delegate;
return G__7542;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__7545 = null;
if (arguments.length > 2) {
var G__7546__i = 0, G__7546__a = new Array(arguments.length -  2);
while (G__7546__i < G__7546__a.length) {G__7546__a[G__7546__i] = arguments[G__7546__i + 2]; ++G__7546__i;}
G__7545 = new cljs.core.IndexedSeq(G__7546__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7545);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__7547__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__7547 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7548__i = 0, G__7548__a = new Array(arguments.length -  2);
while (G__7548__i < G__7548__a.length) {G__7548__a[G__7548__i] = arguments[G__7548__i + 2]; ++G__7548__i;}
  more = new cljs.core.IndexedSeq(G__7548__a,0);
} 
return G__7547__delegate.call(this,x,y,more);};
G__7547.cljs$lang$maxFixedArity = 2;
G__7547.cljs$lang$applyTo = (function (arglist__7549){
var x = cljs.core.first(arglist__7549);
arglist__7549 = cljs.core.next(arglist__7549);
var y = cljs.core.first(arglist__7549);
var more = cljs.core.rest(arglist__7549);
return G__7547__delegate(x,y,more);
});
G__7547.cljs$core$IFn$_invoke$arity$variadic = G__7547__delegate;
return G__7547;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__7550 = null;
if (arguments.length > 2) {
var G__7551__i = 0, G__7551__a = new Array(arguments.length -  2);
while (G__7551__i < G__7551__a.length) {G__7551__a[G__7551__i] = arguments[G__7551__i + 2]; ++G__7551__i;}
G__7550 = new cljs.core.IndexedSeq(G__7551__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7550);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__7556__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__7557 = y;
var G__7558 = cljs.core.first(more);
var G__7559 = cljs.core.next(more);
x = G__7557;
y = G__7558;
more = G__7559;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7556 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7560__i = 0, G__7560__a = new Array(arguments.length -  2);
while (G__7560__i < G__7560__a.length) {G__7560__a[G__7560__i] = arguments[G__7560__i + 2]; ++G__7560__i;}
  more = new cljs.core.IndexedSeq(G__7560__a,0);
} 
return G__7556__delegate.call(this,x,y,more);};
G__7556.cljs$lang$maxFixedArity = 2;
G__7556.cljs$lang$applyTo = (function (arglist__7561){
var x = cljs.core.first(arglist__7561);
arglist__7561 = cljs.core.next(arglist__7561);
var y = cljs.core.first(arglist__7561);
var more = cljs.core.rest(arglist__7561);
return G__7556__delegate(x,y,more);
});
G__7556.cljs$core$IFn$_invoke$arity$variadic = G__7556__delegate;
return G__7556;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__7562 = null;
if (arguments.length > 2) {
var G__7563__i = 0, G__7563__a = new Array(arguments.length -  2);
while (G__7563__i < G__7563__a.length) {G__7563__a[G__7563__i] = arguments[G__7563__i + 2]; ++G__7563__i;}
G__7562 = new cljs.core.IndexedSeq(G__7563__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7562);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__7564 = (n__$1 - (1));
var G__7565 = cljs.core.next(xs);
n__$1 = G__7564;
xs = G__7565;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__7569 = x;
return goog.string.buildString(G__7569);
}
});
var str__2 = (function() { 
var G__7570__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__7571 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__7572 = cljs.core.next(more);
sb = G__7571;
more = G__7572;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__7570 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__7573__i = 0, G__7573__a = new Array(arguments.length -  1);
while (G__7573__i < G__7573__a.length) {G__7573__a[G__7573__i] = arguments[G__7573__i + 1]; ++G__7573__i;}
  ys = new cljs.core.IndexedSeq(G__7573__a,0);
} 
return G__7570__delegate.call(this,x,ys);};
G__7570.cljs$lang$maxFixedArity = 1;
G__7570.cljs$lang$applyTo = (function (arglist__7574){
var x = cljs.core.first(arglist__7574);
var ys = cljs.core.rest(arglist__7574);
return G__7570__delegate(x,ys);
});
G__7570.cljs$core$IFn$_invoke$arity$variadic = G__7570__delegate;
return G__7570;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__7575 = null;
if (arguments.length > 1) {
var G__7576__i = 0, G__7576__a = new Array(arguments.length -  1);
while (G__7576__i < G__7576__a.length) {G__7576__a[G__7576__i] = arguments[G__7576__i + 1]; ++G__7576__i;}
G__7575 = new cljs.core.IndexedSeq(G__7576__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__7575);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__7577 = cljs.core.next(xs);
var G__7578 = cljs.core.next(ys);
xs = G__7577;
ys = G__7578;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__7579 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__7580 = cljs.core.next(s);
res = G__7579;
s = G__7580;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__7585 = ((h + (cljs.core.hash((function (){var G__7583 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__7583) : cljs.core.key.call(null,G__7583));
})()) ^ cljs.core.hash((function (){var G__7584 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__7584) : cljs.core.val.call(null,G__7584));
})()))) % (4503599627370496));
var G__7586 = cljs.core.next(s);
h = G__7585;
s = G__7586;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__7587 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__7588 = cljs.core.next(s__$1);
h = G__7587;
s__$1 = G__7588;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__7599_7609 = cljs.core.seq(fn_map);
var chunk__7600_7610 = null;
var count__7601_7611 = (0);
var i__7602_7612 = (0);
while(true){
if((i__7602_7612 < count__7601_7611)){
var vec__7603_7613 = chunk__7600_7610.cljs$core$IIndexed$_nth$arity$2(null,i__7602_7612);
var key_name_7614 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7603_7613,(0),null);
var f_7615 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7603_7613,(1),null);
var str_name_7616 = (function (){var G__7604 = key_name_7614;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__7604) : cljs.core.name.call(null,G__7604));
})();
(obj[str_name_7616] = f_7615);

var G__7617 = seq__7599_7609;
var G__7618 = chunk__7600_7610;
var G__7619 = count__7601_7611;
var G__7620 = (i__7602_7612 + (1));
seq__7599_7609 = G__7617;
chunk__7600_7610 = G__7618;
count__7601_7611 = G__7619;
i__7602_7612 = G__7620;
continue;
} else {
var temp__4126__auto___7621 = cljs.core.seq(seq__7599_7609);
if(temp__4126__auto___7621){
var seq__7599_7622__$1 = temp__4126__auto___7621;
if(cljs.core.chunked_seq_QMARK_(seq__7599_7622__$1)){
var c__4600__auto___7623 = (function (){var G__7605 = seq__7599_7622__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__7605) : cljs.core.chunk_first.call(null,G__7605));
})();
var G__7624 = (function (){var G__7606 = seq__7599_7622__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__7606) : cljs.core.chunk_rest.call(null,G__7606));
})();
var G__7625 = c__4600__auto___7623;
var G__7626 = cljs.core.count(c__4600__auto___7623);
var G__7627 = (0);
seq__7599_7609 = G__7624;
chunk__7600_7610 = G__7625;
count__7601_7611 = G__7626;
i__7602_7612 = G__7627;
continue;
} else {
var vec__7607_7628 = cljs.core.first(seq__7599_7622__$1);
var key_name_7629 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7607_7628,(0),null);
var f_7630 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7607_7628,(1),null);
var str_name_7631 = (function (){var G__7608 = key_name_7629;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__7608) : cljs.core.name.call(null,G__7608));
})();
(obj[str_name_7631] = f_7630);

var G__7632 = cljs.core.next(seq__7599_7622__$1);
var G__7633 = null;
var G__7634 = (0);
var G__7635 = (0);
seq__7599_7609 = G__7632;
chunk__7600_7610 = G__7633;
count__7601_7611 = G__7634;
i__7602_7612 = G__7635;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4234__auto__ = self__.__hash;
if(!((h__4234__auto__ == null))){
return h__4234__auto__;
} else {
var h__4234__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4234__auto____$1;

return h__4234__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__7637 = coll;
if(G__7637){
var bit__4494__auto__ = (G__7637.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4494__auto__) || (G__7637.cljs$core$IReversible$)){
return true;
} else {
if((!G__7637.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__7637);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__7637);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__7638 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__7638;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__7639 = (i - (1));
var G__7640 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__7639;
r = G__7640;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__7641__i = 0, G__7641__a = new Array(arguments.length -  0);
while (G__7641__i < G__7641__a.length) {G__7641__a[G__7641__i] = arguments[G__7641__i + 0]; ++G__7641__i;}
  xs = new cljs.core.IndexedSeq(G__7641__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__7642){
var xs = cljs.core.seq(arglist__7642);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4234__auto__ = self__.__hash;
if(!((h__4234__auto__ == null))){
return h__4234__auto__;
} else {
var h__4234__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4234__auto____$1;

return h__4234__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3813__auto__ = (coll == null);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var G__7646 = coll;
if(G__7646){
var bit__4487__auto__ = (G__7646.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4487__auto__) || (G__7646.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__7648 = x;
if(G__7648){
var bit__4494__auto__ = (G__7648.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4494__auto__) || (G__7648.cljs$core$IList$)){
return true;
} else {
if((!G__7648.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__7648);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__7648);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3801__auto__ = cljs.core.not(a.ns);
if(and__3801__auto__){
return b.ns;
} else {
return and__3801__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__7655 = a.ns;
var G__7656 = b.ns;
return goog.array.defaultCompare(G__7655,G__7656);
})();
if(((0) === nsc)){
var G__7657 = a.name;
var G__7658 = b.name;
return goog.array.defaultCompare(G__7657,G__7658);
} else {
return nsc;
}
}
} else {
var G__7659 = a.name;
var G__7660 = b.name;
return goog.array.defaultCompare(G__7659,G__7660);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4234__auto__ = self__._hash;
if(!((h__4234__auto__ == null))){
return h__4234__auto__;
} else {
var h__4234__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4234__auto____$1;

return h__4234__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__7662 = null;
var G__7662__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__7662__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__7662 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__7662__2.call(this,self__,coll);
case 3:
return G__7662__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7662.cljs$core$IFn$_invoke$arity$2 = G__7662__2;
G__7662.cljs$core$IFn$_invoke$arity$3 = G__7662__3;
return G__7662;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args7661){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args7661)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__7664 = x;
if(G__7664){
var bit__4487__auto__ = (G__7664.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4487__auto__) || (G__7664.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__7666 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__7666) : cljs.core.name.call(null,G__7666));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4234__auto__ = self__.__hash;
if(!((h__4234__auto__ == null))){
return h__4234__auto__;
} else {
var h__4234__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4234__auto____$1;

return h__4234__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__7667 = ls.sval();
ls = G__7667;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4234__auto__ = self__.__hash;
if(!((h__4234__auto__ == null))){
return h__4234__auto__;
} else {
var h__4234__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4234__auto____$1;

return h__4234__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__7669 = s;
if(G__7669){
var bit__4487__auto__ = (G__7669.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4487__auto__) || (G__7669.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__7670 = cljs.core.next(s__$1);
s__$1 = G__7670;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_7671 = (0);
var xs_7672 = cljs.core.seq(coll);
while(true){
if(xs_7672){
(ret[i_7671] = cljs.core.to_array(cljs.core.first(xs_7672)));

var G__7673 = (i_7671 + (1));
var G__7674 = cljs.core.next(xs_7672);
i_7671 = G__7673;
xs_7672 = G__7674;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__7677 = (i + (1));
var G__7678 = cljs.core.next(s__$1);
i = G__7677;
s__$1 = G__7678;
continue;
} else {
return a;
}
break;
}
} else {
var n__4700__auto___7679 = size;
var i_7680 = (0);
while(true){
if((i_7680 < n__4700__auto___7679)){
(a[i_7680] = init_val_or_seq);

var G__7681 = (i_7680 + (1));
i_7680 = G__7681;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__7684 = (i + (1));
var G__7685 = cljs.core.next(s__$1);
i = G__7684;
s__$1 = G__7685;
continue;
} else {
return a;
}
break;
}
} else {
var n__4700__auto___7686 = size;
var i_7687 = (0);
while(true){
if((i_7687 < n__4700__auto___7686)){
(a[i_7687] = init_val_or_seq);

var G__7688 = (i_7687 + (1));
i_7687 = G__7688;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__7691 = (i + (1));
var G__7692 = cljs.core.next(s__$1);
i = G__7691;
s__$1 = G__7692;
continue;
} else {
return a;
}
break;
}
} else {
var n__4700__auto___7693 = size;
var i_7694 = (0);
while(true){
if((i_7694 < n__4700__auto___7693)){
(a[i_7694] = init_val_or_seq);

var G__7695 = (i_7694 + (1));
i_7694 = G__7695;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__7698 = (i + (1));
var G__7699 = cljs.core.next(s__$1);
i = G__7698;
s__$1 = G__7699;
continue;
} else {
return a;
}
break;
}
} else {
var n__4700__auto___7700 = size;
var i_7701 = (0);
while(true){
if((i_7701 < n__4700__auto___7700)){
(a[i_7701] = init_val_or_seq);

var G__7702 = (i_7701 + (1));
i_7701 = G__7702;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__7703 = cljs.core.next(s__$1);
var G__7704 = (i - (1));
var G__7705 = (sum + (1));
s__$1 = G__7703;
i = G__7704;
sum = G__7705;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__7725__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__7725 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__7726__i = 0, G__7726__a = new Array(arguments.length -  2);
while (G__7726__i < G__7726__a.length) {G__7726__a[G__7726__i] = arguments[G__7726__i + 2]; ++G__7726__i;}
  zs = new cljs.core.IndexedSeq(G__7726__a,0);
} 
return G__7725__delegate.call(this,x,y,zs);};
G__7725.cljs$lang$maxFixedArity = 2;
G__7725.cljs$lang$applyTo = (function (arglist__7727){
var x = cljs.core.first(arglist__7727);
arglist__7727 = cljs.core.next(arglist__7727);
var y = cljs.core.first(arglist__7727);
var zs = cljs.core.rest(arglist__7727);
return G__7725__delegate(x,y,zs);
});
G__7725.cljs$core$IFn$_invoke$arity$variadic = G__7725__delegate;
return G__7725;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__7728 = null;
if (arguments.length > 2) {
var G__7729__i = 0, G__7729__a = new Array(arguments.length -  2);
while (G__7729__i < G__7729__a.length) {G__7729__a[G__7729__i] = arguments[G__7729__i + 2]; ++G__7729__i;}
G__7728 = new cljs.core.IndexedSeq(G__7729__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7728);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__7730__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__7730 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__7731__i = 0, G__7731__a = new Array(arguments.length -  4);
while (G__7731__i < G__7731__a.length) {G__7731__a[G__7731__i] = arguments[G__7731__i + 4]; ++G__7731__i;}
  more = new cljs.core.IndexedSeq(G__7731__a,0);
} 
return G__7730__delegate.call(this,a,b,c,d,more);};
G__7730.cljs$lang$maxFixedArity = 4;
G__7730.cljs$lang$applyTo = (function (arglist__7732){
var a = cljs.core.first(arglist__7732);
arglist__7732 = cljs.core.next(arglist__7732);
var b = cljs.core.first(arglist__7732);
arglist__7732 = cljs.core.next(arglist__7732);
var c = cljs.core.first(arglist__7732);
arglist__7732 = cljs.core.next(arglist__7732);
var d = cljs.core.first(arglist__7732);
var more = cljs.core.rest(arglist__7732);
return G__7730__delegate(a,b,c,d,more);
});
G__7730.cljs$core$IFn$_invoke$arity$variadic = G__7730__delegate;
return G__7730;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__7733 = null;
if (arguments.length > 4) {
var G__7734__i = 0, G__7734__a = new Array(arguments.length -  4);
while (G__7734__i < G__7734__a.length) {G__7734__a[G__7734__i] = arguments[G__7734__i + 4]; ++G__7734__i;}
G__7733 = new cljs.core.IndexedSeq(G__7734__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__7733);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__7735__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__7736 = ntcoll;
var G__7737 = cljs.core.first(vals);
var G__7738 = cljs.core.next(vals);
tcoll = G__7736;
val = G__7737;
vals = G__7738;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__7735 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__7739__i = 0, G__7739__a = new Array(arguments.length -  2);
while (G__7739__i < G__7739__a.length) {G__7739__a[G__7739__i] = arguments[G__7739__i + 2]; ++G__7739__i;}
  vals = new cljs.core.IndexedSeq(G__7739__a,0);
} 
return G__7735__delegate.call(this,tcoll,val,vals);};
G__7735.cljs$lang$maxFixedArity = 2;
G__7735.cljs$lang$applyTo = (function (arglist__7740){
var tcoll = cljs.core.first(arglist__7740);
arglist__7740 = cljs.core.next(arglist__7740);
var val = cljs.core.first(arglist__7740);
var vals = cljs.core.rest(arglist__7740);
return G__7735__delegate(tcoll,val,vals);
});
G__7735.cljs$core$IFn$_invoke$arity$variadic = G__7735__delegate;
return G__7735;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__7741 = null;
if (arguments.length > 2) {
var G__7742__i = 0, G__7742__a = new Array(arguments.length -  2);
while (G__7742__i < G__7742__a.length) {G__7742__a[G__7742__i] = arguments[G__7742__i + 2]; ++G__7742__i;}
G__7741 = new cljs.core.IndexedSeq(G__7742__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__7741);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__7743__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__7744 = ntcoll;
var G__7745 = cljs.core.first(kvs);
var G__7746 = cljs.core.second(kvs);
var G__7747 = cljs.core.nnext(kvs);
tcoll = G__7744;
key = G__7745;
val = G__7746;
kvs = G__7747;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__7743 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__7748__i = 0, G__7748__a = new Array(arguments.length -  3);
while (G__7748__i < G__7748__a.length) {G__7748__a[G__7748__i] = arguments[G__7748__i + 3]; ++G__7748__i;}
  kvs = new cljs.core.IndexedSeq(G__7748__a,0);
} 
return G__7743__delegate.call(this,tcoll,key,val,kvs);};
G__7743.cljs$lang$maxFixedArity = 3;
G__7743.cljs$lang$applyTo = (function (arglist__7749){
var tcoll = cljs.core.first(arglist__7749);
arglist__7749 = cljs.core.next(arglist__7749);
var key = cljs.core.first(arglist__7749);
arglist__7749 = cljs.core.next(arglist__7749);
var val = cljs.core.first(arglist__7749);
var kvs = cljs.core.rest(arglist__7749);
return G__7743__delegate(tcoll,key,val,kvs);
});
G__7743.cljs$core$IFn$_invoke$arity$variadic = G__7743__delegate;
return G__7743;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__7750 = null;
if (arguments.length > 3) {
var G__7751__i = 0, G__7751__a = new Array(arguments.length -  3);
while (G__7751__i < G__7751__a.length) {G__7751__a[G__7751__i] = arguments[G__7751__i + 3]; ++G__7751__i;}
G__7750 = new cljs.core.IndexedSeq(G__7751__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__7750);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__7752__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__7753 = ntcoll;
var G__7754 = cljs.core.first(ks);
var G__7755 = cljs.core.next(ks);
tcoll = G__7753;
key = G__7754;
ks = G__7755;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__7752 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__7756__i = 0, G__7756__a = new Array(arguments.length -  2);
while (G__7756__i < G__7756__a.length) {G__7756__a[G__7756__i] = arguments[G__7756__i + 2]; ++G__7756__i;}
  ks = new cljs.core.IndexedSeq(G__7756__a,0);
} 
return G__7752__delegate.call(this,tcoll,key,ks);};
G__7752.cljs$lang$maxFixedArity = 2;
G__7752.cljs$lang$applyTo = (function (arglist__7757){
var tcoll = cljs.core.first(arglist__7757);
arglist__7757 = cljs.core.next(arglist__7757);
var key = cljs.core.first(arglist__7757);
var ks = cljs.core.rest(arglist__7757);
return G__7752__delegate(tcoll,key,ks);
});
G__7752.cljs$core$IFn$_invoke$arity$variadic = G__7752__delegate;
return G__7752;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__7758 = null;
if (arguments.length > 2) {
var G__7759__i = 0, G__7759__a = new Array(arguments.length -  2);
while (G__7759__i < G__7759__a.length) {G__7759__a[G__7759__i] = arguments[G__7759__i + 2]; ++G__7759__i;}
G__7758 = new cljs.core.IndexedSeq(G__7759__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__7758);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__7760__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__7761 = ntcoll;
var G__7762 = cljs.core.first(vals);
var G__7763 = cljs.core.next(vals);
tcoll = G__7761;
val = G__7762;
vals = G__7763;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__7760 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__7764__i = 0, G__7764__a = new Array(arguments.length -  2);
while (G__7764__i < G__7764__a.length) {G__7764__a[G__7764__i] = arguments[G__7764__i + 2]; ++G__7764__i;}
  vals = new cljs.core.IndexedSeq(G__7764__a,0);
} 
return G__7760__delegate.call(this,tcoll,val,vals);};
G__7760.cljs$lang$maxFixedArity = 2;
G__7760.cljs$lang$applyTo = (function (arglist__7765){
var tcoll = cljs.core.first(arglist__7765);
arglist__7765 = cljs.core.next(arglist__7765);
var val = cljs.core.first(arglist__7765);
var vals = cljs.core.rest(arglist__7765);
return G__7760__delegate(tcoll,val,vals);
});
G__7760.cljs$core$IFn$_invoke$arity$variadic = G__7760__delegate;
return G__7760;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__7766 = null;
if (arguments.length > 2) {
var G__7767__i = 0, G__7767__a = new Array(arguments.length -  2);
while (G__7767__i < G__7767__a.length) {G__7767__a[G__7767__i] = arguments[G__7767__i + 2]; ++G__7767__i;}
G__7766 = new cljs.core.IndexedSeq(G__7767__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__7766);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4744 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4744);
} else {
var G__7978 = a4744;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7978) : f.call(null,G__7978));
}
} else {
var b4745 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4744,b4745);
} else {
var G__7979 = a4744;
var G__7980 = b4745;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7979,G__7980) : f.call(null,G__7979,G__7980));
}
} else {
var c4746 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4744,b4745,c4746);
} else {
var G__7981 = a4744;
var G__7982 = b4745;
var G__7983 = c4746;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7981,G__7982,G__7983) : f.call(null,G__7981,G__7982,G__7983));
}
} else {
var d4747 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4744,b4745,c4746,d4747);
} else {
var G__7984 = a4744;
var G__7985 = b4745;
var G__7986 = c4746;
var G__7987 = d4747;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7984,G__7985,G__7986,G__7987) : f.call(null,G__7984,G__7985,G__7986,G__7987));
}
} else {
var e4748 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4744,b4745,c4746,d4747,e4748);
} else {
var G__7988 = a4744;
var G__7989 = b4745;
var G__7990 = c4746;
var G__7991 = d4747;
var G__7992 = e4748;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7988,G__7989,G__7990,G__7991,G__7992) : f.call(null,G__7988,G__7989,G__7990,G__7991,G__7992));
}
} else {
var f4749 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4744,b4745,c4746,d4747,e4748,f4749);
} else {
var G__7993 = a4744;
var G__7994 = b4745;
var G__7995 = c4746;
var G__7996 = d4747;
var G__7997 = e4748;
var G__7998 = f4749;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__7993,G__7994,G__7995,G__7996,G__7997,G__7998) : f.call(null,G__7993,G__7994,G__7995,G__7996,G__7997,G__7998));
}
} else {
var g4750 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4744,b4745,c4746,d4747,e4748,f4749,g4750);
} else {
var G__7999 = a4744;
var G__8000 = b4745;
var G__8001 = c4746;
var G__8002 = d4747;
var G__8003 = e4748;
var G__8004 = f4749;
var G__8005 = g4750;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__7999,G__8000,G__8001,G__8002,G__8003,G__8004,G__8005) : f.call(null,G__7999,G__8000,G__8001,G__8002,G__8003,G__8004,G__8005));
}
} else {
var h4751 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4744,b4745,c4746,d4747,e4748,f4749,g4750,h4751);
} else {
var G__8006 = a4744;
var G__8007 = b4745;
var G__8008 = c4746;
var G__8009 = d4747;
var G__8010 = e4748;
var G__8011 = f4749;
var G__8012 = g4750;
var G__8013 = h4751;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__8006,G__8007,G__8008,G__8009,G__8010,G__8011,G__8012,G__8013) : f.call(null,G__8006,G__8007,G__8008,G__8009,G__8010,G__8011,G__8012,G__8013));
}
} else {
var i4752 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4744,b4745,c4746,d4747,e4748,f4749,g4750,h4751,i4752);
} else {
var G__8014 = a4744;
var G__8015 = b4745;
var G__8016 = c4746;
var G__8017 = d4747;
var G__8018 = e4748;
var G__8019 = f4749;
var G__8020 = g4750;
var G__8021 = h4751;
var G__8022 = i4752;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__8014,G__8015,G__8016,G__8017,G__8018,G__8019,G__8020,G__8021,G__8022) : f.call(null,G__8014,G__8015,G__8016,G__8017,G__8018,G__8019,G__8020,G__8021,G__8022));
}
} else {
var j4753 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4744,b4745,c4746,d4747,e4748,f4749,g4750,h4751,i4752,j4753);
} else {
var G__8023 = a4744;
var G__8024 = b4745;
var G__8025 = c4746;
var G__8026 = d4747;
var G__8027 = e4748;
var G__8028 = f4749;
var G__8029 = g4750;
var G__8030 = h4751;
var G__8031 = i4752;
var G__8032 = j4753;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__8023,G__8024,G__8025,G__8026,G__8027,G__8028,G__8029,G__8030,G__8031,G__8032) : f.call(null,G__8023,G__8024,G__8025,G__8026,G__8027,G__8028,G__8029,G__8030,G__8031,G__8032));
}
} else {
var k4754 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4744,b4745,c4746,d4747,e4748,f4749,g4750,h4751,i4752,j4753,k4754);
} else {
var G__8033 = a4744;
var G__8034 = b4745;
var G__8035 = c4746;
var G__8036 = d4747;
var G__8037 = e4748;
var G__8038 = f4749;
var G__8039 = g4750;
var G__8040 = h4751;
var G__8041 = i4752;
var G__8042 = j4753;
var G__8043 = k4754;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__8033,G__8034,G__8035,G__8036,G__8037,G__8038,G__8039,G__8040,G__8041,G__8042,G__8043) : f.call(null,G__8033,G__8034,G__8035,G__8036,G__8037,G__8038,G__8039,G__8040,G__8041,G__8042,G__8043));
}
} else {
var l4755 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4744,b4745,c4746,d4747,e4748,f4749,g4750,h4751,i4752,j4753,k4754,l4755);
} else {
var G__8044 = a4744;
var G__8045 = b4745;
var G__8046 = c4746;
var G__8047 = d4747;
var G__8048 = e4748;
var G__8049 = f4749;
var G__8050 = g4750;
var G__8051 = h4751;
var G__8052 = i4752;
var G__8053 = j4753;
var G__8054 = k4754;
var G__8055 = l4755;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__8044,G__8045,G__8046,G__8047,G__8048,G__8049,G__8050,G__8051,G__8052,G__8053,G__8054,G__8055) : f.call(null,G__8044,G__8045,G__8046,G__8047,G__8048,G__8049,G__8050,G__8051,G__8052,G__8053,G__8054,G__8055));
}
} else {
var m4756 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4744,b4745,c4746,d4747,e4748,f4749,g4750,h4751,i4752,j4753,k4754,l4755,m4756);
} else {
var G__8056 = a4744;
var G__8057 = b4745;
var G__8058 = c4746;
var G__8059 = d4747;
var G__8060 = e4748;
var G__8061 = f4749;
var G__8062 = g4750;
var G__8063 = h4751;
var G__8064 = i4752;
var G__8065 = j4753;
var G__8066 = k4754;
var G__8067 = l4755;
var G__8068 = m4756;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__8056,G__8057,G__8058,G__8059,G__8060,G__8061,G__8062,G__8063,G__8064,G__8065,G__8066,G__8067,G__8068) : f.call(null,G__8056,G__8057,G__8058,G__8059,G__8060,G__8061,G__8062,G__8063,G__8064,G__8065,G__8066,G__8067,G__8068));
}
} else {
var n4757 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4744,b4745,c4746,d4747,e4748,f4749,g4750,h4751,i4752,j4753,k4754,l4755,m4756,n4757);
} else {
var G__8069 = a4744;
var G__8070 = b4745;
var G__8071 = c4746;
var G__8072 = d4747;
var G__8073 = e4748;
var G__8074 = f4749;
var G__8075 = g4750;
var G__8076 = h4751;
var G__8077 = i4752;
var G__8078 = j4753;
var G__8079 = k4754;
var G__8080 = l4755;
var G__8081 = m4756;
var G__8082 = n4757;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__8069,G__8070,G__8071,G__8072,G__8073,G__8074,G__8075,G__8076,G__8077,G__8078,G__8079,G__8080,G__8081,G__8082) : f.call(null,G__8069,G__8070,G__8071,G__8072,G__8073,G__8074,G__8075,G__8076,G__8077,G__8078,G__8079,G__8080,G__8081,G__8082));
}
} else {
var o4758 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4744,b4745,c4746,d4747,e4748,f4749,g4750,h4751,i4752,j4753,k4754,l4755,m4756,n4757,o4758);
} else {
var G__8083 = a4744;
var G__8084 = b4745;
var G__8085 = c4746;
var G__8086 = d4747;
var G__8087 = e4748;
var G__8088 = f4749;
var G__8089 = g4750;
var G__8090 = h4751;
var G__8091 = i4752;
var G__8092 = j4753;
var G__8093 = k4754;
var G__8094 = l4755;
var G__8095 = m4756;
var G__8096 = n4757;
var G__8097 = o4758;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__8083,G__8084,G__8085,G__8086,G__8087,G__8088,G__8089,G__8090,G__8091,G__8092,G__8093,G__8094,G__8095,G__8096,G__8097) : f.call(null,G__8083,G__8084,G__8085,G__8086,G__8087,G__8088,G__8089,G__8090,G__8091,G__8092,G__8093,G__8094,G__8095,G__8096,G__8097));
}
} else {
var p4759 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4744,b4745,c4746,d4747,e4748,f4749,g4750,h4751,i4752,j4753,k4754,l4755,m4756,n4757,o4758,p4759);
} else {
var G__8098 = a4744;
var G__8099 = b4745;
var G__8100 = c4746;
var G__8101 = d4747;
var G__8102 = e4748;
var G__8103 = f4749;
var G__8104 = g4750;
var G__8105 = h4751;
var G__8106 = i4752;
var G__8107 = j4753;
var G__8108 = k4754;
var G__8109 = l4755;
var G__8110 = m4756;
var G__8111 = n4757;
var G__8112 = o4758;
var G__8113 = p4759;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__8098,G__8099,G__8100,G__8101,G__8102,G__8103,G__8104,G__8105,G__8106,G__8107,G__8108,G__8109,G__8110,G__8111,G__8112,G__8113) : f.call(null,G__8098,G__8099,G__8100,G__8101,G__8102,G__8103,G__8104,G__8105,G__8106,G__8107,G__8108,G__8109,G__8110,G__8111,G__8112,G__8113));
}
} else {
var q4760 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4744,b4745,c4746,d4747,e4748,f4749,g4750,h4751,i4752,j4753,k4754,l4755,m4756,n4757,o4758,p4759,q4760);
} else {
var G__8114 = a4744;
var G__8115 = b4745;
var G__8116 = c4746;
var G__8117 = d4747;
var G__8118 = e4748;
var G__8119 = f4749;
var G__8120 = g4750;
var G__8121 = h4751;
var G__8122 = i4752;
var G__8123 = j4753;
var G__8124 = k4754;
var G__8125 = l4755;
var G__8126 = m4756;
var G__8127 = n4757;
var G__8128 = o4758;
var G__8129 = p4759;
var G__8130 = q4760;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__8114,G__8115,G__8116,G__8117,G__8118,G__8119,G__8120,G__8121,G__8122,G__8123,G__8124,G__8125,G__8126,G__8127,G__8128,G__8129,G__8130) : f.call(null,G__8114,G__8115,G__8116,G__8117,G__8118,G__8119,G__8120,G__8121,G__8122,G__8123,G__8124,G__8125,G__8126,G__8127,G__8128,G__8129,G__8130));
}
} else {
var r4761 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4744,b4745,c4746,d4747,e4748,f4749,g4750,h4751,i4752,j4753,k4754,l4755,m4756,n4757,o4758,p4759,q4760,r4761);
} else {
var G__8131 = a4744;
var G__8132 = b4745;
var G__8133 = c4746;
var G__8134 = d4747;
var G__8135 = e4748;
var G__8136 = f4749;
var G__8137 = g4750;
var G__8138 = h4751;
var G__8139 = i4752;
var G__8140 = j4753;
var G__8141 = k4754;
var G__8142 = l4755;
var G__8143 = m4756;
var G__8144 = n4757;
var G__8145 = o4758;
var G__8146 = p4759;
var G__8147 = q4760;
var G__8148 = r4761;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__8131,G__8132,G__8133,G__8134,G__8135,G__8136,G__8137,G__8138,G__8139,G__8140,G__8141,G__8142,G__8143,G__8144,G__8145,G__8146,G__8147,G__8148) : f.call(null,G__8131,G__8132,G__8133,G__8134,G__8135,G__8136,G__8137,G__8138,G__8139,G__8140,G__8141,G__8142,G__8143,G__8144,G__8145,G__8146,G__8147,G__8148));
}
} else {
var s4762 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4744,b4745,c4746,d4747,e4748,f4749,g4750,h4751,i4752,j4753,k4754,l4755,m4756,n4757,o4758,p4759,q4760,r4761,s4762);
} else {
var G__8149 = a4744;
var G__8150 = b4745;
var G__8151 = c4746;
var G__8152 = d4747;
var G__8153 = e4748;
var G__8154 = f4749;
var G__8155 = g4750;
var G__8156 = h4751;
var G__8157 = i4752;
var G__8158 = j4753;
var G__8159 = k4754;
var G__8160 = l4755;
var G__8161 = m4756;
var G__8162 = n4757;
var G__8163 = o4758;
var G__8164 = p4759;
var G__8165 = q4760;
var G__8166 = r4761;
var G__8167 = s4762;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__8149,G__8150,G__8151,G__8152,G__8153,G__8154,G__8155,G__8156,G__8157,G__8158,G__8159,G__8160,G__8161,G__8162,G__8163,G__8164,G__8165,G__8166,G__8167) : f.call(null,G__8149,G__8150,G__8151,G__8152,G__8153,G__8154,G__8155,G__8156,G__8157,G__8158,G__8159,G__8160,G__8161,G__8162,G__8163,G__8164,G__8165,G__8166,G__8167));
}
} else {
var t4763 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4744,b4745,c4746,d4747,e4748,f4749,g4750,h4751,i4752,j4753,k4754,l4755,m4756,n4757,o4758,p4759,q4760,r4761,s4762,t4763);
} else {
var G__8168 = a4744;
var G__8169 = b4745;
var G__8170 = c4746;
var G__8171 = d4747;
var G__8172 = e4748;
var G__8173 = f4749;
var G__8174 = g4750;
var G__8175 = h4751;
var G__8176 = i4752;
var G__8177 = j4753;
var G__8178 = k4754;
var G__8179 = l4755;
var G__8180 = m4756;
var G__8181 = n4757;
var G__8182 = o4758;
var G__8183 = p4759;
var G__8184 = q4760;
var G__8185 = r4761;
var G__8186 = s4762;
var G__8187 = t4763;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__8168,G__8169,G__8170,G__8171,G__8172,G__8173,G__8174,G__8175,G__8176,G__8177,G__8178,G__8179,G__8180,G__8181,G__8182,G__8183,G__8184,G__8185,G__8186,G__8187) : f.call(null,G__8168,G__8169,G__8170,G__8171,G__8172,G__8173,G__8174,G__8175,G__8176,G__8177,G__8178,G__8179,G__8180,G__8181,G__8182,G__8183,G__8184,G__8185,G__8186,G__8187));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__8188__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__8188 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__8189__i = 0, G__8189__a = new Array(arguments.length -  5);
while (G__8189__i < G__8189__a.length) {G__8189__a[G__8189__i] = arguments[G__8189__i + 5]; ++G__8189__i;}
  args = new cljs.core.IndexedSeq(G__8189__a,0);
} 
return G__8188__delegate.call(this,f,a,b,c,d,args);};
G__8188.cljs$lang$maxFixedArity = 5;
G__8188.cljs$lang$applyTo = (function (arglist__8190){
var f = cljs.core.first(arglist__8190);
arglist__8190 = cljs.core.next(arglist__8190);
var a = cljs.core.first(arglist__8190);
arglist__8190 = cljs.core.next(arglist__8190);
var b = cljs.core.first(arglist__8190);
arglist__8190 = cljs.core.next(arglist__8190);
var c = cljs.core.first(arglist__8190);
arglist__8190 = cljs.core.next(arglist__8190);
var d = cljs.core.first(arglist__8190);
var args = cljs.core.rest(arglist__8190);
return G__8188__delegate(f,a,b,c,d,args);
});
G__8188.cljs$core$IFn$_invoke$arity$variadic = G__8188__delegate;
return G__8188;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__8191 = null;
if (arguments.length > 5) {
var G__8192__i = 0, G__8192__a = new Array(arguments.length -  5);
while (G__8192__i < G__8192__a.length) {G__8192__a[G__8192__i] = arguments[G__8192__i + 5]; ++G__8192__i;}
G__8191 = new cljs.core.IndexedSeq(G__8192__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__8191);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__8208 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8208) : f.call(null,G__8208));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__8209 = cljs.core.meta(obj);
var G__8210 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8209,G__8210) : f.call(null,G__8209,G__8210));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__8211 = cljs.core.meta(obj);
var G__8212 = a;
var G__8213 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8211,G__8212,G__8213) : f.call(null,G__8211,G__8212,G__8213));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__8214 = cljs.core.meta(obj);
var G__8215 = a;
var G__8216 = b;
var G__8217 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8214,G__8215,G__8216,G__8217) : f.call(null,G__8214,G__8215,G__8216,G__8217));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__8218 = cljs.core.meta(obj);
var G__8219 = a;
var G__8220 = b;
var G__8221 = c;
var G__8222 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__8218,G__8219,G__8220,G__8221,G__8222) : f.call(null,G__8218,G__8219,G__8220,G__8221,G__8222));
})());
});
var vary_meta__7 = (function() { 
var G__8223__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__8223 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__8224__i = 0, G__8224__a = new Array(arguments.length -  6);
while (G__8224__i < G__8224__a.length) {G__8224__a[G__8224__i] = arguments[G__8224__i + 6]; ++G__8224__i;}
  args = new cljs.core.IndexedSeq(G__8224__a,0);
} 
return G__8223__delegate.call(this,obj,f,a,b,c,d,args);};
G__8223.cljs$lang$maxFixedArity = 6;
G__8223.cljs$lang$applyTo = (function (arglist__8225){
var obj = cljs.core.first(arglist__8225);
arglist__8225 = cljs.core.next(arglist__8225);
var f = cljs.core.first(arglist__8225);
arglist__8225 = cljs.core.next(arglist__8225);
var a = cljs.core.first(arglist__8225);
arglist__8225 = cljs.core.next(arglist__8225);
var b = cljs.core.first(arglist__8225);
arglist__8225 = cljs.core.next(arglist__8225);
var c = cljs.core.first(arglist__8225);
arglist__8225 = cljs.core.next(arglist__8225);
var d = cljs.core.first(arglist__8225);
var args = cljs.core.rest(arglist__8225);
return G__8223__delegate(obj,f,a,b,c,d,args);
});
G__8223.cljs$core$IFn$_invoke$arity$variadic = G__8223__delegate;
return G__8223;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__8226 = null;
if (arguments.length > 6) {
var G__8227__i = 0, G__8227__a = new Array(arguments.length -  6);
while (G__8227__i < G__8227__a.length) {G__8227__a[G__8227__i] = arguments[G__8227__i + 6]; ++G__8227__i;}
G__8226 = new cljs.core.IndexedSeq(G__8227__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__8226);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__8228__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__8228 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8229__i = 0, G__8229__a = new Array(arguments.length -  2);
while (G__8229__i < G__8229__a.length) {G__8229__a[G__8229__i] = arguments[G__8229__i + 2]; ++G__8229__i;}
  more = new cljs.core.IndexedSeq(G__8229__a,0);
} 
return G__8228__delegate.call(this,x,y,more);};
G__8228.cljs$lang$maxFixedArity = 2;
G__8228.cljs$lang$applyTo = (function (arglist__8230){
var x = cljs.core.first(arglist__8230);
arglist__8230 = cljs.core.next(arglist__8230);
var y = cljs.core.first(arglist__8230);
var more = cljs.core.rest(arglist__8230);
return G__8228__delegate(x,y,more);
});
G__8228.cljs$core$IFn$_invoke$arity$variadic = G__8228__delegate;
return G__8228;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__8231 = null;
if (arguments.length > 2) {
var G__8232__i = 0, G__8232__a = new Array(arguments.length -  2);
while (G__8232__i < G__8232__a.length) {G__8232__a[G__8232__i] = arguments[G__8232__i + 2]; ++G__8232__i;}
G__8231 = new cljs.core.IndexedSeq(G__8232__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8231);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t8236 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t8236 = (function (nil_iter,meta8237){
this.nil_iter = nil_iter;
this.meta8237 = meta8237;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t8236.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t8236.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t8236.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t8236.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_8238){
var self__ = this;
var _8238__$1 = this;
return self__.meta8237;
});

cljs.core.t8236.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_8238,meta8237__$1){
var self__ = this;
var _8238__$1 = this;
return (new cljs.core.t8236(self__.nil_iter,meta8237__$1));
});

cljs.core.t8236.cljs$lang$type = true;

cljs.core.t8236.cljs$lang$ctorStr = "cljs.core/t8236";

cljs.core.t8236.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/t8236");
});

cljs.core.__GT_t8236 = (function __GT_t8236(nil_iter__$1,meta8237){
return (new cljs.core.t8236(nil_iter__$1,meta8237));
});

}

return (new cljs.core.t8236(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3801__auto__ = !((lt.stepper == null));
if(and__3801__auto__){
return self__.iter.hasNext();
} else {
return and__3801__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__8239 = lt;
var G__8240 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__8239,G__8240) : self__.xform.call(null,G__8239,G__8240));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__8241 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__8241) : self__.xform.call(null,G__8241));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__8243 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__8243) : xform.call(null,G__8243));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__8245 = cljs.core.next(iters__$1);
iters__$1 = G__8245;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4700__auto___8246 = self__.iters.length;
var i_8247 = (0);
while(true){
if((i_8247 < n__4700__auto___8246)){
(self__.nexts[i_8247] = (self__.iters[i_8247]).next());

var G__8248 = (i_8247 + (1));
i_8247 = G__8248;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3801__auto__ = !((lt.stepper == null));
if(and__3801__auto__){
return this$.hasNext();
} else {
return and__3801__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__8244 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__8244) : self__.xform.call(null,G__8244));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__8253 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__8253) : xform.call(null,G__8253));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__8254_8258 = cljs.core.seq(colls);
var chunk__8255_8259 = null;
var count__8256_8260 = (0);
var i__8257_8261 = (0);
while(true){
if((i__8257_8261 < count__8256_8260)){
var coll_8262 = chunk__8255_8259.cljs$core$IIndexed$_nth$arity$2(null,i__8257_8261);
iters.push(cljs.core.iter(coll_8262));

var G__8263 = seq__8254_8258;
var G__8264 = chunk__8255_8259;
var G__8265 = count__8256_8260;
var G__8266 = (i__8257_8261 + (1));
seq__8254_8258 = G__8263;
chunk__8255_8259 = G__8264;
count__8256_8260 = G__8265;
i__8257_8261 = G__8266;
continue;
} else {
var temp__4126__auto___8267 = cljs.core.seq(seq__8254_8258);
if(temp__4126__auto___8267){
var seq__8254_8268__$1 = temp__4126__auto___8267;
if(cljs.core.chunked_seq_QMARK_(seq__8254_8268__$1)){
var c__4600__auto___8269 = cljs.core.chunk_first(seq__8254_8268__$1);
var G__8270 = cljs.core.chunk_rest(seq__8254_8268__$1);
var G__8271 = c__4600__auto___8269;
var G__8272 = cljs.core.count(c__4600__auto___8269);
var G__8273 = (0);
seq__8254_8258 = G__8270;
chunk__8255_8259 = G__8271;
count__8256_8260 = G__8272;
i__8257_8261 = G__8273;
continue;
} else {
var coll_8274 = cljs.core.first(seq__8254_8268__$1);
iters.push(cljs.core.iter(coll_8274));

var G__8275 = cljs.core.next(seq__8254_8268__$1);
var G__8276 = null;
var G__8277 = (0);
var G__8278 = (0);
seq__8254_8258 = G__8275;
chunk__8255_8259 = G__8276;
count__8256_8260 = G__8277;
i__8257_8261 = G__8278;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3813__auto__ = cljs.core.seq(coll);
if(or__3813__auto__){
return or__3813__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__8279__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__8279 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__8280__i = 0, G__8280__a = new Array(arguments.length -  2);
while (G__8280__i < G__8280__a.length) {G__8280__a[G__8280__i] = arguments[G__8280__i + 2]; ++G__8280__i;}
  colls = new cljs.core.IndexedSeq(G__8280__a,0);
} 
return G__8279__delegate.call(this,xform,coll,colls);};
G__8279.cljs$lang$maxFixedArity = 2;
G__8279.cljs$lang$applyTo = (function (arglist__8281){
var xform = cljs.core.first(arglist__8281);
arglist__8281 = cljs.core.next(arglist__8281);
var coll = cljs.core.first(arglist__8281);
var colls = cljs.core.rest(arglist__8281);
return G__8279__delegate(xform,coll,colls);
});
G__8279.cljs$core$IFn$_invoke$arity$variadic = G__8279__delegate;
return G__8279;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__8282 = null;
if (arguments.length > 2) {
var G__8283__i = 0, G__8283__a = new Array(arguments.length -  2);
while (G__8283__i < G__8283__a.length) {G__8283__a[G__8283__i] = arguments[G__8283__i + 2]; ++G__8283__i;}
G__8282 = new cljs.core.IndexedSeq(G__8283__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__8282);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__8285 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8285) : pred.call(null,G__8285));
})())){
var G__8286 = pred;
var G__8287 = cljs.core.next(coll);
pred = G__8286;
coll = G__8287;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3813__auto__ = (function (){var G__8291 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8291) : pred.call(null,G__8291));
})();
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
var G__8292 = pred;
var G__8293 = cljs.core.next(coll);
pred = G__8292;
coll = G__8293;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__8300 = null;
var G__8300__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__8300__1 = (function (x){
return cljs.core.not((function (){var G__8297 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8297) : f.call(null,G__8297));
})());
});
var G__8300__2 = (function (x,y){
return cljs.core.not((function (){var G__8298 = x;
var G__8299 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8298,G__8299) : f.call(null,G__8298,G__8299));
})());
});
var G__8300__3 = (function() { 
var G__8301__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__8301 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__8302__i = 0, G__8302__a = new Array(arguments.length -  2);
while (G__8302__i < G__8302__a.length) {G__8302__a[G__8302__i] = arguments[G__8302__i + 2]; ++G__8302__i;}
  zs = new cljs.core.IndexedSeq(G__8302__a,0);
} 
return G__8301__delegate.call(this,x,y,zs);};
G__8301.cljs$lang$maxFixedArity = 2;
G__8301.cljs$lang$applyTo = (function (arglist__8303){
var x = cljs.core.first(arglist__8303);
arglist__8303 = cljs.core.next(arglist__8303);
var y = cljs.core.first(arglist__8303);
var zs = cljs.core.rest(arglist__8303);
return G__8301__delegate(x,y,zs);
});
G__8301.cljs$core$IFn$_invoke$arity$variadic = G__8301__delegate;
return G__8301;
})()
;
G__8300 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__8300__0.call(this);
case 1:
return G__8300__1.call(this,x);
case 2:
return G__8300__2.call(this,x,y);
default:
var G__8304 = null;
if (arguments.length > 2) {
var G__8305__i = 0, G__8305__a = new Array(arguments.length -  2);
while (G__8305__i < G__8305__a.length) {G__8305__a[G__8305__i] = arguments[G__8305__i + 2]; ++G__8305__i;}
G__8304 = new cljs.core.IndexedSeq(G__8305__a,0);
}
return G__8300__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8304);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8300.cljs$lang$maxFixedArity = 2;
G__8300.cljs$lang$applyTo = G__8300__3.cljs$lang$applyTo;
G__8300.cljs$core$IFn$_invoke$arity$0 = G__8300__0;
G__8300.cljs$core$IFn$_invoke$arity$1 = G__8300__1;
G__8300.cljs$core$IFn$_invoke$arity$2 = G__8300__2;
G__8300.cljs$core$IFn$_invoke$arity$variadic = G__8300__3.cljs$core$IFn$_invoke$arity$variadic;
return G__8300;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__8306__delegate = function (args){
return x;
};
var G__8306 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__8307__i = 0, G__8307__a = new Array(arguments.length -  0);
while (G__8307__i < G__8307__a.length) {G__8307__a[G__8307__i] = arguments[G__8307__i + 0]; ++G__8307__i;}
  args = new cljs.core.IndexedSeq(G__8307__a,0);
} 
return G__8306__delegate.call(this,args);};
G__8306.cljs$lang$maxFixedArity = 0;
G__8306.cljs$lang$applyTo = (function (arglist__8308){
var args = cljs.core.seq(arglist__8308);
return G__8306__delegate(args);
});
G__8306.cljs$core$IFn$_invoke$arity$variadic = G__8306__delegate;
return G__8306;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__8363 = null;
var G__8363__0 = (function (){
var G__8336 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8336) : f.call(null,G__8336));
});
var G__8363__1 = (function (x){
var G__8337 = (function (){var G__8338 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8338) : g.call(null,G__8338));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8337) : f.call(null,G__8337));
});
var G__8363__2 = (function (x,y){
var G__8339 = (function (){var G__8340 = x;
var G__8341 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__8340,G__8341) : g.call(null,G__8340,G__8341));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8339) : f.call(null,G__8339));
});
var G__8363__3 = (function (x,y,z){
var G__8342 = (function (){var G__8343 = x;
var G__8344 = y;
var G__8345 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__8343,G__8344,G__8345) : g.call(null,G__8343,G__8344,G__8345));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8342) : f.call(null,G__8342));
});
var G__8363__4 = (function() { 
var G__8364__delegate = function (x,y,z,args){
var G__8346 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8346) : f.call(null,G__8346));
};
var G__8364 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8365__i = 0, G__8365__a = new Array(arguments.length -  3);
while (G__8365__i < G__8365__a.length) {G__8365__a[G__8365__i] = arguments[G__8365__i + 3]; ++G__8365__i;}
  args = new cljs.core.IndexedSeq(G__8365__a,0);
} 
return G__8364__delegate.call(this,x,y,z,args);};
G__8364.cljs$lang$maxFixedArity = 3;
G__8364.cljs$lang$applyTo = (function (arglist__8366){
var x = cljs.core.first(arglist__8366);
arglist__8366 = cljs.core.next(arglist__8366);
var y = cljs.core.first(arglist__8366);
arglist__8366 = cljs.core.next(arglist__8366);
var z = cljs.core.first(arglist__8366);
var args = cljs.core.rest(arglist__8366);
return G__8364__delegate(x,y,z,args);
});
G__8364.cljs$core$IFn$_invoke$arity$variadic = G__8364__delegate;
return G__8364;
})()
;
G__8363 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__8363__0.call(this);
case 1:
return G__8363__1.call(this,x);
case 2:
return G__8363__2.call(this,x,y);
case 3:
return G__8363__3.call(this,x,y,z);
default:
var G__8367 = null;
if (arguments.length > 3) {
var G__8368__i = 0, G__8368__a = new Array(arguments.length -  3);
while (G__8368__i < G__8368__a.length) {G__8368__a[G__8368__i] = arguments[G__8368__i + 3]; ++G__8368__i;}
G__8367 = new cljs.core.IndexedSeq(G__8368__a,0);
}
return G__8363__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8367);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8363.cljs$lang$maxFixedArity = 3;
G__8363.cljs$lang$applyTo = G__8363__4.cljs$lang$applyTo;
G__8363.cljs$core$IFn$_invoke$arity$0 = G__8363__0;
G__8363.cljs$core$IFn$_invoke$arity$1 = G__8363__1;
G__8363.cljs$core$IFn$_invoke$arity$2 = G__8363__2;
G__8363.cljs$core$IFn$_invoke$arity$3 = G__8363__3;
G__8363.cljs$core$IFn$_invoke$arity$variadic = G__8363__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8363;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__8369 = null;
var G__8369__0 = (function (){
var G__8347 = (function (){var G__8348 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8348) : g.call(null,G__8348));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8347) : f.call(null,G__8347));
});
var G__8369__1 = (function (x){
var G__8349 = (function (){var G__8350 = (function (){var G__8351 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__8351) : h.call(null,G__8351));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8350) : g.call(null,G__8350));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8349) : f.call(null,G__8349));
});
var G__8369__2 = (function (x,y){
var G__8352 = (function (){var G__8353 = (function (){var G__8354 = x;
var G__8355 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__8354,G__8355) : h.call(null,G__8354,G__8355));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8353) : g.call(null,G__8353));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8352) : f.call(null,G__8352));
});
var G__8369__3 = (function (x,y,z){
var G__8356 = (function (){var G__8357 = (function (){var G__8358 = x;
var G__8359 = y;
var G__8360 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__8358,G__8359,G__8360) : h.call(null,G__8358,G__8359,G__8360));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8357) : g.call(null,G__8357));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8356) : f.call(null,G__8356));
});
var G__8369__4 = (function() { 
var G__8370__delegate = function (x,y,z,args){
var G__8361 = (function (){var G__8362 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8362) : g.call(null,G__8362));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8361) : f.call(null,G__8361));
};
var G__8370 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8371__i = 0, G__8371__a = new Array(arguments.length -  3);
while (G__8371__i < G__8371__a.length) {G__8371__a[G__8371__i] = arguments[G__8371__i + 3]; ++G__8371__i;}
  args = new cljs.core.IndexedSeq(G__8371__a,0);
} 
return G__8370__delegate.call(this,x,y,z,args);};
G__8370.cljs$lang$maxFixedArity = 3;
G__8370.cljs$lang$applyTo = (function (arglist__8372){
var x = cljs.core.first(arglist__8372);
arglist__8372 = cljs.core.next(arglist__8372);
var y = cljs.core.first(arglist__8372);
arglist__8372 = cljs.core.next(arglist__8372);
var z = cljs.core.first(arglist__8372);
var args = cljs.core.rest(arglist__8372);
return G__8370__delegate(x,y,z,args);
});
G__8370.cljs$core$IFn$_invoke$arity$variadic = G__8370__delegate;
return G__8370;
})()
;
G__8369 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__8369__0.call(this);
case 1:
return G__8369__1.call(this,x);
case 2:
return G__8369__2.call(this,x,y);
case 3:
return G__8369__3.call(this,x,y,z);
default:
var G__8373 = null;
if (arguments.length > 3) {
var G__8374__i = 0, G__8374__a = new Array(arguments.length -  3);
while (G__8374__i < G__8374__a.length) {G__8374__a[G__8374__i] = arguments[G__8374__i + 3]; ++G__8374__i;}
G__8373 = new cljs.core.IndexedSeq(G__8374__a,0);
}
return G__8369__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8373);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8369.cljs$lang$maxFixedArity = 3;
G__8369.cljs$lang$applyTo = G__8369__4.cljs$lang$applyTo;
G__8369.cljs$core$IFn$_invoke$arity$0 = G__8369__0;
G__8369.cljs$core$IFn$_invoke$arity$1 = G__8369__1;
G__8369.cljs$core$IFn$_invoke$arity$2 = G__8369__2;
G__8369.cljs$core$IFn$_invoke$arity$3 = G__8369__3;
G__8369.cljs$core$IFn$_invoke$arity$variadic = G__8369__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8369;
})()
});
var comp__4 = (function() { 
var G__8375__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__8376__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__8377 = cljs.core.first(fs__$2).call(null,ret);
var G__8378 = cljs.core.next(fs__$2);
ret = G__8377;
fs__$2 = G__8378;
continue;
} else {
return ret;
}
break;
}
};
var G__8376 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__8379__i = 0, G__8379__a = new Array(arguments.length -  0);
while (G__8379__i < G__8379__a.length) {G__8379__a[G__8379__i] = arguments[G__8379__i + 0]; ++G__8379__i;}
  args = new cljs.core.IndexedSeq(G__8379__a,0);
} 
return G__8376__delegate.call(this,args);};
G__8376.cljs$lang$maxFixedArity = 0;
G__8376.cljs$lang$applyTo = (function (arglist__8380){
var args = cljs.core.seq(arglist__8380);
return G__8376__delegate(args);
});
G__8376.cljs$core$IFn$_invoke$arity$variadic = G__8376__delegate;
return G__8376;
})()
;
;})(fs__$1))
};
var G__8375 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__8381__i = 0, G__8381__a = new Array(arguments.length -  3);
while (G__8381__i < G__8381__a.length) {G__8381__a[G__8381__i] = arguments[G__8381__i + 3]; ++G__8381__i;}
  fs = new cljs.core.IndexedSeq(G__8381__a,0);
} 
return G__8375__delegate.call(this,f1,f2,f3,fs);};
G__8375.cljs$lang$maxFixedArity = 3;
G__8375.cljs$lang$applyTo = (function (arglist__8382){
var f1 = cljs.core.first(arglist__8382);
arglist__8382 = cljs.core.next(arglist__8382);
var f2 = cljs.core.first(arglist__8382);
arglist__8382 = cljs.core.next(arglist__8382);
var f3 = cljs.core.first(arglist__8382);
var fs = cljs.core.rest(arglist__8382);
return G__8375__delegate(f1,f2,f3,fs);
});
G__8375.cljs$core$IFn$_invoke$arity$variadic = G__8375__delegate;
return G__8375;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__8383 = null;
if (arguments.length > 3) {
var G__8384__i = 0, G__8384__a = new Array(arguments.length -  3);
while (G__8384__i < G__8384__a.length) {G__8384__a[G__8384__i] = arguments[G__8384__i + 3]; ++G__8384__i;}
G__8383 = new cljs.core.IndexedSeq(G__8384__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__8383);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__8469 = null;
var G__8469__0 = (function (){
var G__8427 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8427) : f.call(null,G__8427));
});
var G__8469__1 = (function (x){
var G__8428 = arg1;
var G__8429 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8428,G__8429) : f.call(null,G__8428,G__8429));
});
var G__8469__2 = (function (x,y){
var G__8430 = arg1;
var G__8431 = x;
var G__8432 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8430,G__8431,G__8432) : f.call(null,G__8430,G__8431,G__8432));
});
var G__8469__3 = (function (x,y,z){
var G__8433 = arg1;
var G__8434 = x;
var G__8435 = y;
var G__8436 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8433,G__8434,G__8435,G__8436) : f.call(null,G__8433,G__8434,G__8435,G__8436));
});
var G__8469__4 = (function() { 
var G__8470__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__8470 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8471__i = 0, G__8471__a = new Array(arguments.length -  3);
while (G__8471__i < G__8471__a.length) {G__8471__a[G__8471__i] = arguments[G__8471__i + 3]; ++G__8471__i;}
  args = new cljs.core.IndexedSeq(G__8471__a,0);
} 
return G__8470__delegate.call(this,x,y,z,args);};
G__8470.cljs$lang$maxFixedArity = 3;
G__8470.cljs$lang$applyTo = (function (arglist__8472){
var x = cljs.core.first(arglist__8472);
arglist__8472 = cljs.core.next(arglist__8472);
var y = cljs.core.first(arglist__8472);
arglist__8472 = cljs.core.next(arglist__8472);
var z = cljs.core.first(arglist__8472);
var args = cljs.core.rest(arglist__8472);
return G__8470__delegate(x,y,z,args);
});
G__8470.cljs$core$IFn$_invoke$arity$variadic = G__8470__delegate;
return G__8470;
})()
;
G__8469 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__8469__0.call(this);
case 1:
return G__8469__1.call(this,x);
case 2:
return G__8469__2.call(this,x,y);
case 3:
return G__8469__3.call(this,x,y,z);
default:
var G__8473 = null;
if (arguments.length > 3) {
var G__8474__i = 0, G__8474__a = new Array(arguments.length -  3);
while (G__8474__i < G__8474__a.length) {G__8474__a[G__8474__i] = arguments[G__8474__i + 3]; ++G__8474__i;}
G__8473 = new cljs.core.IndexedSeq(G__8474__a,0);
}
return G__8469__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8473);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8469.cljs$lang$maxFixedArity = 3;
G__8469.cljs$lang$applyTo = G__8469__4.cljs$lang$applyTo;
G__8469.cljs$core$IFn$_invoke$arity$0 = G__8469__0;
G__8469.cljs$core$IFn$_invoke$arity$1 = G__8469__1;
G__8469.cljs$core$IFn$_invoke$arity$2 = G__8469__2;
G__8469.cljs$core$IFn$_invoke$arity$3 = G__8469__3;
G__8469.cljs$core$IFn$_invoke$arity$variadic = G__8469__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8469;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__8475 = null;
var G__8475__0 = (function (){
var G__8437 = arg1;
var G__8438 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8437,G__8438) : f.call(null,G__8437,G__8438));
});
var G__8475__1 = (function (x){
var G__8439 = arg1;
var G__8440 = arg2;
var G__8441 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8439,G__8440,G__8441) : f.call(null,G__8439,G__8440,G__8441));
});
var G__8475__2 = (function (x,y){
var G__8442 = arg1;
var G__8443 = arg2;
var G__8444 = x;
var G__8445 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8442,G__8443,G__8444,G__8445) : f.call(null,G__8442,G__8443,G__8444,G__8445));
});
var G__8475__3 = (function (x,y,z){
var G__8446 = arg1;
var G__8447 = arg2;
var G__8448 = x;
var G__8449 = y;
var G__8450 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__8446,G__8447,G__8448,G__8449,G__8450) : f.call(null,G__8446,G__8447,G__8448,G__8449,G__8450));
});
var G__8475__4 = (function() { 
var G__8476__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__8476 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8477__i = 0, G__8477__a = new Array(arguments.length -  3);
while (G__8477__i < G__8477__a.length) {G__8477__a[G__8477__i] = arguments[G__8477__i + 3]; ++G__8477__i;}
  args = new cljs.core.IndexedSeq(G__8477__a,0);
} 
return G__8476__delegate.call(this,x,y,z,args);};
G__8476.cljs$lang$maxFixedArity = 3;
G__8476.cljs$lang$applyTo = (function (arglist__8478){
var x = cljs.core.first(arglist__8478);
arglist__8478 = cljs.core.next(arglist__8478);
var y = cljs.core.first(arglist__8478);
arglist__8478 = cljs.core.next(arglist__8478);
var z = cljs.core.first(arglist__8478);
var args = cljs.core.rest(arglist__8478);
return G__8476__delegate(x,y,z,args);
});
G__8476.cljs$core$IFn$_invoke$arity$variadic = G__8476__delegate;
return G__8476;
})()
;
G__8475 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__8475__0.call(this);
case 1:
return G__8475__1.call(this,x);
case 2:
return G__8475__2.call(this,x,y);
case 3:
return G__8475__3.call(this,x,y,z);
default:
var G__8479 = null;
if (arguments.length > 3) {
var G__8480__i = 0, G__8480__a = new Array(arguments.length -  3);
while (G__8480__i < G__8480__a.length) {G__8480__a[G__8480__i] = arguments[G__8480__i + 3]; ++G__8480__i;}
G__8479 = new cljs.core.IndexedSeq(G__8480__a,0);
}
return G__8475__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8479);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8475.cljs$lang$maxFixedArity = 3;
G__8475.cljs$lang$applyTo = G__8475__4.cljs$lang$applyTo;
G__8475.cljs$core$IFn$_invoke$arity$0 = G__8475__0;
G__8475.cljs$core$IFn$_invoke$arity$1 = G__8475__1;
G__8475.cljs$core$IFn$_invoke$arity$2 = G__8475__2;
G__8475.cljs$core$IFn$_invoke$arity$3 = G__8475__3;
G__8475.cljs$core$IFn$_invoke$arity$variadic = G__8475__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8475;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__8481 = null;
var G__8481__0 = (function (){
var G__8451 = arg1;
var G__8452 = arg2;
var G__8453 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8451,G__8452,G__8453) : f.call(null,G__8451,G__8452,G__8453));
});
var G__8481__1 = (function (x){
var G__8454 = arg1;
var G__8455 = arg2;
var G__8456 = arg3;
var G__8457 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8454,G__8455,G__8456,G__8457) : f.call(null,G__8454,G__8455,G__8456,G__8457));
});
var G__8481__2 = (function (x,y){
var G__8458 = arg1;
var G__8459 = arg2;
var G__8460 = arg3;
var G__8461 = x;
var G__8462 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__8458,G__8459,G__8460,G__8461,G__8462) : f.call(null,G__8458,G__8459,G__8460,G__8461,G__8462));
});
var G__8481__3 = (function (x,y,z){
var G__8463 = arg1;
var G__8464 = arg2;
var G__8465 = arg3;
var G__8466 = x;
var G__8467 = y;
var G__8468 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__8463,G__8464,G__8465,G__8466,G__8467,G__8468) : f.call(null,G__8463,G__8464,G__8465,G__8466,G__8467,G__8468));
});
var G__8481__4 = (function() { 
var G__8482__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__8482 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8483__i = 0, G__8483__a = new Array(arguments.length -  3);
while (G__8483__i < G__8483__a.length) {G__8483__a[G__8483__i] = arguments[G__8483__i + 3]; ++G__8483__i;}
  args = new cljs.core.IndexedSeq(G__8483__a,0);
} 
return G__8482__delegate.call(this,x,y,z,args);};
G__8482.cljs$lang$maxFixedArity = 3;
G__8482.cljs$lang$applyTo = (function (arglist__8484){
var x = cljs.core.first(arglist__8484);
arglist__8484 = cljs.core.next(arglist__8484);
var y = cljs.core.first(arglist__8484);
arglist__8484 = cljs.core.next(arglist__8484);
var z = cljs.core.first(arglist__8484);
var args = cljs.core.rest(arglist__8484);
return G__8482__delegate(x,y,z,args);
});
G__8482.cljs$core$IFn$_invoke$arity$variadic = G__8482__delegate;
return G__8482;
})()
;
G__8481 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__8481__0.call(this);
case 1:
return G__8481__1.call(this,x);
case 2:
return G__8481__2.call(this,x,y);
case 3:
return G__8481__3.call(this,x,y,z);
default:
var G__8485 = null;
if (arguments.length > 3) {
var G__8486__i = 0, G__8486__a = new Array(arguments.length -  3);
while (G__8486__i < G__8486__a.length) {G__8486__a[G__8486__i] = arguments[G__8486__i + 3]; ++G__8486__i;}
G__8485 = new cljs.core.IndexedSeq(G__8486__a,0);
}
return G__8481__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8485);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8481.cljs$lang$maxFixedArity = 3;
G__8481.cljs$lang$applyTo = G__8481__4.cljs$lang$applyTo;
G__8481.cljs$core$IFn$_invoke$arity$0 = G__8481__0;
G__8481.cljs$core$IFn$_invoke$arity$1 = G__8481__1;
G__8481.cljs$core$IFn$_invoke$arity$2 = G__8481__2;
G__8481.cljs$core$IFn$_invoke$arity$3 = G__8481__3;
G__8481.cljs$core$IFn$_invoke$arity$variadic = G__8481__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8481;
})()
});
var partial__5 = (function() { 
var G__8487__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__8488__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__8488 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__8489__i = 0, G__8489__a = new Array(arguments.length -  0);
while (G__8489__i < G__8489__a.length) {G__8489__a[G__8489__i] = arguments[G__8489__i + 0]; ++G__8489__i;}
  args = new cljs.core.IndexedSeq(G__8489__a,0);
} 
return G__8488__delegate.call(this,args);};
G__8488.cljs$lang$maxFixedArity = 0;
G__8488.cljs$lang$applyTo = (function (arglist__8490){
var args = cljs.core.seq(arglist__8490);
return G__8488__delegate(args);
});
G__8488.cljs$core$IFn$_invoke$arity$variadic = G__8488__delegate;
return G__8488;
})()
;
};
var G__8487 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__8491__i = 0, G__8491__a = new Array(arguments.length -  4);
while (G__8491__i < G__8491__a.length) {G__8491__a[G__8491__i] = arguments[G__8491__i + 4]; ++G__8491__i;}
  more = new cljs.core.IndexedSeq(G__8491__a,0);
} 
return G__8487__delegate.call(this,f,arg1,arg2,arg3,more);};
G__8487.cljs$lang$maxFixedArity = 4;
G__8487.cljs$lang$applyTo = (function (arglist__8492){
var f = cljs.core.first(arglist__8492);
arglist__8492 = cljs.core.next(arglist__8492);
var arg1 = cljs.core.first(arglist__8492);
arglist__8492 = cljs.core.next(arglist__8492);
var arg2 = cljs.core.first(arglist__8492);
arglist__8492 = cljs.core.next(arglist__8492);
var arg3 = cljs.core.first(arglist__8492);
var more = cljs.core.rest(arglist__8492);
return G__8487__delegate(f,arg1,arg2,arg3,more);
});
G__8487.cljs$core$IFn$_invoke$arity$variadic = G__8487__delegate;
return G__8487;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__8493 = null;
if (arguments.length > 4) {
var G__8494__i = 0, G__8494__a = new Array(arguments.length -  4);
while (G__8494__i < G__8494__a.length) {G__8494__a[G__8494__i] = arguments[G__8494__i + 4]; ++G__8494__i;}
G__8493 = new cljs.core.IndexedSeq(G__8494__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__8493);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__8527 = null;
var G__8527__1 = (function (a){
var G__8511 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8511) : f.call(null,G__8511));
});
var G__8527__2 = (function (a,b){
var G__8512 = (((a == null))?x:a);
var G__8513 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8512,G__8513) : f.call(null,G__8512,G__8513));
});
var G__8527__3 = (function (a,b,c){
var G__8514 = (((a == null))?x:a);
var G__8515 = b;
var G__8516 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8514,G__8515,G__8516) : f.call(null,G__8514,G__8515,G__8516));
});
var G__8527__4 = (function() { 
var G__8528__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__8528 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__8529__i = 0, G__8529__a = new Array(arguments.length -  3);
while (G__8529__i < G__8529__a.length) {G__8529__a[G__8529__i] = arguments[G__8529__i + 3]; ++G__8529__i;}
  ds = new cljs.core.IndexedSeq(G__8529__a,0);
} 
return G__8528__delegate.call(this,a,b,c,ds);};
G__8528.cljs$lang$maxFixedArity = 3;
G__8528.cljs$lang$applyTo = (function (arglist__8530){
var a = cljs.core.first(arglist__8530);
arglist__8530 = cljs.core.next(arglist__8530);
var b = cljs.core.first(arglist__8530);
arglist__8530 = cljs.core.next(arglist__8530);
var c = cljs.core.first(arglist__8530);
var ds = cljs.core.rest(arglist__8530);
return G__8528__delegate(a,b,c,ds);
});
G__8528.cljs$core$IFn$_invoke$arity$variadic = G__8528__delegate;
return G__8528;
})()
;
G__8527 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__8527__1.call(this,a);
case 2:
return G__8527__2.call(this,a,b);
case 3:
return G__8527__3.call(this,a,b,c);
default:
var G__8531 = null;
if (arguments.length > 3) {
var G__8532__i = 0, G__8532__a = new Array(arguments.length -  3);
while (G__8532__i < G__8532__a.length) {G__8532__a[G__8532__i] = arguments[G__8532__i + 3]; ++G__8532__i;}
G__8531 = new cljs.core.IndexedSeq(G__8532__a,0);
}
return G__8527__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__8531);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8527.cljs$lang$maxFixedArity = 3;
G__8527.cljs$lang$applyTo = G__8527__4.cljs$lang$applyTo;
G__8527.cljs$core$IFn$_invoke$arity$1 = G__8527__1;
G__8527.cljs$core$IFn$_invoke$arity$2 = G__8527__2;
G__8527.cljs$core$IFn$_invoke$arity$3 = G__8527__3;
G__8527.cljs$core$IFn$_invoke$arity$variadic = G__8527__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8527;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__8533 = null;
var G__8533__2 = (function (a,b){
var G__8517 = (((a == null))?x:a);
var G__8518 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8517,G__8518) : f.call(null,G__8517,G__8518));
});
var G__8533__3 = (function (a,b,c){
var G__8519 = (((a == null))?x:a);
var G__8520 = (((b == null))?y:b);
var G__8521 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8519,G__8520,G__8521) : f.call(null,G__8519,G__8520,G__8521));
});
var G__8533__4 = (function() { 
var G__8534__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__8534 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__8535__i = 0, G__8535__a = new Array(arguments.length -  3);
while (G__8535__i < G__8535__a.length) {G__8535__a[G__8535__i] = arguments[G__8535__i + 3]; ++G__8535__i;}
  ds = new cljs.core.IndexedSeq(G__8535__a,0);
} 
return G__8534__delegate.call(this,a,b,c,ds);};
G__8534.cljs$lang$maxFixedArity = 3;
G__8534.cljs$lang$applyTo = (function (arglist__8536){
var a = cljs.core.first(arglist__8536);
arglist__8536 = cljs.core.next(arglist__8536);
var b = cljs.core.first(arglist__8536);
arglist__8536 = cljs.core.next(arglist__8536);
var c = cljs.core.first(arglist__8536);
var ds = cljs.core.rest(arglist__8536);
return G__8534__delegate(a,b,c,ds);
});
G__8534.cljs$core$IFn$_invoke$arity$variadic = G__8534__delegate;
return G__8534;
})()
;
G__8533 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__8533__2.call(this,a,b);
case 3:
return G__8533__3.call(this,a,b,c);
default:
var G__8537 = null;
if (arguments.length > 3) {
var G__8538__i = 0, G__8538__a = new Array(arguments.length -  3);
while (G__8538__i < G__8538__a.length) {G__8538__a[G__8538__i] = arguments[G__8538__i + 3]; ++G__8538__i;}
G__8537 = new cljs.core.IndexedSeq(G__8538__a,0);
}
return G__8533__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__8537);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8533.cljs$lang$maxFixedArity = 3;
G__8533.cljs$lang$applyTo = G__8533__4.cljs$lang$applyTo;
G__8533.cljs$core$IFn$_invoke$arity$2 = G__8533__2;
G__8533.cljs$core$IFn$_invoke$arity$3 = G__8533__3;
G__8533.cljs$core$IFn$_invoke$arity$variadic = G__8533__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8533;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__8539 = null;
var G__8539__2 = (function (a,b){
var G__8522 = (((a == null))?x:a);
var G__8523 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8522,G__8523) : f.call(null,G__8522,G__8523));
});
var G__8539__3 = (function (a,b,c){
var G__8524 = (((a == null))?x:a);
var G__8525 = (((b == null))?y:b);
var G__8526 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8524,G__8525,G__8526) : f.call(null,G__8524,G__8525,G__8526));
});
var G__8539__4 = (function() { 
var G__8540__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__8540 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__8541__i = 0, G__8541__a = new Array(arguments.length -  3);
while (G__8541__i < G__8541__a.length) {G__8541__a[G__8541__i] = arguments[G__8541__i + 3]; ++G__8541__i;}
  ds = new cljs.core.IndexedSeq(G__8541__a,0);
} 
return G__8540__delegate.call(this,a,b,c,ds);};
G__8540.cljs$lang$maxFixedArity = 3;
G__8540.cljs$lang$applyTo = (function (arglist__8542){
var a = cljs.core.first(arglist__8542);
arglist__8542 = cljs.core.next(arglist__8542);
var b = cljs.core.first(arglist__8542);
arglist__8542 = cljs.core.next(arglist__8542);
var c = cljs.core.first(arglist__8542);
var ds = cljs.core.rest(arglist__8542);
return G__8540__delegate(a,b,c,ds);
});
G__8540.cljs$core$IFn$_invoke$arity$variadic = G__8540__delegate;
return G__8540;
})()
;
G__8539 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__8539__2.call(this,a,b);
case 3:
return G__8539__3.call(this,a,b,c);
default:
var G__8543 = null;
if (arguments.length > 3) {
var G__8544__i = 0, G__8544__a = new Array(arguments.length -  3);
while (G__8544__i < G__8544__a.length) {G__8544__a[G__8544__i] = arguments[G__8544__i + 3]; ++G__8544__i;}
G__8543 = new cljs.core.IndexedSeq(G__8544__a,0);
}
return G__8539__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__8543);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8539.cljs$lang$maxFixedArity = 3;
G__8539.cljs$lang$applyTo = G__8539__4.cljs$lang$applyTo;
G__8539.cljs$core$IFn$_invoke$arity$2 = G__8539__2;
G__8539.cljs$core$IFn$_invoke$arity$3 = G__8539__3;
G__8539.cljs$core$IFn$_invoke$arity$variadic = G__8539__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8539;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__8575 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__8575) : cljs.core.volatile_BANG_.call(null,G__8575));
})();
return ((function (i){
return (function() {
var G__8605 = null;
var G__8605__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8605__1 = (function (result){
var G__8576 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8576) : rf.call(null,G__8576));
});
var G__8605__2 = (function (result,input){
var G__8577 = result;
var G__8578 = (function (){var G__8579 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__8580 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8579,G__8580) : f.call(null,G__8579,G__8580));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8577,G__8578) : rf.call(null,G__8577,G__8578));
});
G__8605 = function(result,input){
switch(arguments.length){
case 0:
return G__8605__0.call(this);
case 1:
return G__8605__1.call(this,result);
case 2:
return G__8605__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8605.cljs$core$IFn$_invoke$arity$0 = G__8605__0;
G__8605.cljs$core$IFn$_invoke$arity$1 = G__8605__1;
G__8605.cljs$core$IFn$_invoke$arity$2 = G__8605__2;
return G__8605;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4700__auto___8606 = size;
var i_8607 = (0);
while(true){
if((i_8607 < n__4700__auto___8606)){
cljs.core.chunk_append(b,(function (){var G__8601 = (idx + i_8607);
var G__8602 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_8607);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8601,G__8602) : f.call(null,G__8601,G__8602));
})());

var G__8608 = (i_8607 + (1));
i_8607 = G__8608;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__8603 = idx;
var G__8604 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8603,G__8604) : f.call(null,G__8603,G__8604));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__8627 = null;
var G__8627__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8627__1 = (function (result){
var G__8621 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8621) : rf.call(null,G__8621));
});
var G__8627__2 = (function (result,input){
var v = (function (){var G__8622 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8622) : f.call(null,G__8622));
})();
if((v == null)){
return result;
} else {
var G__8623 = result;
var G__8624 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8623,G__8624) : rf.call(null,G__8623,G__8624));
}
});
G__8627 = function(result,input){
switch(arguments.length){
case 0:
return G__8627__0.call(this);
case 1:
return G__8627__1.call(this,result);
case 2:
return G__8627__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8627.cljs$core$IFn$_invoke$arity$0 = G__8627__0;
G__8627.cljs$core$IFn$_invoke$arity$1 = G__8627__1;
G__8627.cljs$core$IFn$_invoke$arity$2 = G__8627__2;
return G__8627;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4700__auto___8628 = size;
var i_8629 = (0);
while(true){
if((i_8629 < n__4700__auto___8628)){
var x_8630 = (function (){var G__8625 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_8629);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8625) : f.call(null,G__8625));
})();
if((x_8630 == null)){
} else {
cljs.core.chunk_append(b,x_8630);
}

var G__8631 = (i_8629 + (1));
i_8629 = G__8631;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__8626 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8626) : f.call(null,G__8626));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__8632 = this$__$1;
return goog.getUid(G__8632);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__8633 = cljs.core.seq(self__.watches);
var chunk__8634 = null;
var count__8635 = (0);
var i__8636 = (0);
while(true){
if((i__8636 < count__8635)){
var vec__8637 = chunk__8634.cljs$core$IIndexed$_nth$arity$2(null,i__8636);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8637,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8637,(1),null);
var G__8638_8647 = key;
var G__8639_8648 = this$__$1;
var G__8640_8649 = oldval;
var G__8641_8650 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8638_8647,G__8639_8648,G__8640_8649,G__8641_8650) : f.call(null,G__8638_8647,G__8639_8648,G__8640_8649,G__8641_8650));

var G__8651 = seq__8633;
var G__8652 = chunk__8634;
var G__8653 = count__8635;
var G__8654 = (i__8636 + (1));
seq__8633 = G__8651;
chunk__8634 = G__8652;
count__8635 = G__8653;
i__8636 = G__8654;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__8633);
if(temp__4126__auto__){
var seq__8633__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__8633__$1)){
var c__4600__auto__ = cljs.core.chunk_first(seq__8633__$1);
var G__8655 = cljs.core.chunk_rest(seq__8633__$1);
var G__8656 = c__4600__auto__;
var G__8657 = cljs.core.count(c__4600__auto__);
var G__8658 = (0);
seq__8633 = G__8655;
chunk__8634 = G__8656;
count__8635 = G__8657;
i__8636 = G__8658;
continue;
} else {
var vec__8642 = cljs.core.first(seq__8633__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8642,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8642,(1),null);
var G__8643_8659 = key;
var G__8644_8660 = this$__$1;
var G__8645_8661 = oldval;
var G__8646_8662 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8643_8659,G__8644_8660,G__8645_8661,G__8646_8662) : f.call(null,G__8643_8659,G__8644_8660,G__8645_8661,G__8646_8662));

var G__8663 = cljs.core.next(seq__8633__$1);
var G__8664 = null;
var G__8665 = (0);
var G__8666 = (0);
seq__8633 = G__8663;
chunk__8634 = G__8664;
count__8635 = G__8665;
i__8636 = G__8666;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__8670__delegate = function (x,p__8667){
var map__8669 = p__8667;
var map__8669__$1 = ((cljs.core.seq_QMARK_(map__8669))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__8669):map__8669);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__8669__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__8669__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__8670 = function (x,var_args){
var p__8667 = null;
if (arguments.length > 1) {
var G__8671__i = 0, G__8671__a = new Array(arguments.length -  1);
while (G__8671__i < G__8671__a.length) {G__8671__a[G__8671__i] = arguments[G__8671__i + 1]; ++G__8671__i;}
  p__8667 = new cljs.core.IndexedSeq(G__8671__a,0);
} 
return G__8670__delegate.call(this,x,p__8667);};
G__8670.cljs$lang$maxFixedArity = 1;
G__8670.cljs$lang$applyTo = (function (arglist__8672){
var x = cljs.core.first(arglist__8672);
var p__8667 = cljs.core.rest(arglist__8672);
return G__8670__delegate(x,p__8667);
});
G__8670.cljs$core$IFn$_invoke$arity$variadic = G__8670__delegate;
return G__8670;
})()
;
atom = function(x,var_args){
var p__8667 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__8673 = null;
if (arguments.length > 1) {
var G__8674__i = 0, G__8674__a = new Array(arguments.length -  1);
while (G__8674__i < G__8674__a.length) {G__8674__a[G__8674__i] = arguments[G__8674__i + 1]; ++G__8674__i;}
G__8673 = new cljs.core.IndexedSeq(G__8674__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__8673);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__8677 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__8677) : validate.call(null,G__8677));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__8678 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__8678) : cljs.core.pr_str.call(null,G__8678));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__8685 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8685) : f.call(null,G__8685));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__8686 = a.state;
var G__8687 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8686,G__8687) : f.call(null,G__8686,G__8687));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__8688 = a.state;
var G__8689 = x;
var G__8690 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8688,G__8689,G__8690) : f.call(null,G__8688,G__8689,G__8690));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__8691__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__8691 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__8692__i = 0, G__8692__a = new Array(arguments.length -  4);
while (G__8692__i < G__8692__a.length) {G__8692__a[G__8692__i] = arguments[G__8692__i + 4]; ++G__8692__i;}
  more = new cljs.core.IndexedSeq(G__8692__a,0);
} 
return G__8691__delegate.call(this,a,f,x,y,more);};
G__8691.cljs$lang$maxFixedArity = 4;
G__8691.cljs$lang$applyTo = (function (arglist__8693){
var a = cljs.core.first(arglist__8693);
arglist__8693 = cljs.core.next(arglist__8693);
var f = cljs.core.first(arglist__8693);
arglist__8693 = cljs.core.next(arglist__8693);
var x = cljs.core.first(arglist__8693);
arglist__8693 = cljs.core.next(arglist__8693);
var y = cljs.core.first(arglist__8693);
var more = cljs.core.rest(arglist__8693);
return G__8691__delegate(a,f,x,y,more);
});
G__8691.cljs$core$IFn$_invoke$arity$variadic = G__8691__delegate;
return G__8691;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__8694 = null;
if (arguments.length > 4) {
var G__8695__i = 0, G__8695__a = new Array(arguments.length -  4);
while (G__8695__i < G__8695__a.length) {G__8695__a[G__8695__i] = arguments[G__8695__i + 4]; ++G__8695__i;}
G__8694 = new cljs.core.IndexedSeq(G__8695__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__8694);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__8762 = null;
var G__8762__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8762__1 = (function (result){
var G__8729 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8729) : rf.call(null,G__8729));
});
var G__8762__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__8730 = i;
var G__8731 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8730,G__8731) : f.call(null,G__8730,G__8731));
})();
if((v == null)){
return result;
} else {
var G__8732 = result;
var G__8733 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8732,G__8733) : rf.call(null,G__8732,G__8733));
}
});
G__8762 = function(result,input){
switch(arguments.length){
case 0:
return G__8762__0.call(this);
case 1:
return G__8762__1.call(this,result);
case 2:
return G__8762__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8762.cljs$core$IFn$_invoke$arity$0 = G__8762__0;
G__8762.cljs$core$IFn$_invoke$arity$1 = G__8762__1;
G__8762.cljs$core$IFn$_invoke$arity$2 = G__8762__2;
return G__8762;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4700__auto___8763 = size;
var i_8764 = (0);
while(true){
if((i_8764 < n__4700__auto___8763)){
var x_8765 = (function (){var G__8758 = (idx + i_8764);
var G__8759 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_8764);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8758,G__8759) : f.call(null,G__8758,G__8759));
})();
if((x_8765 == null)){
} else {
cljs.core.chunk_append(b,x_8765);
}

var G__8766 = (i_8764 + (1));
i_8764 = G__8766;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__8760 = idx;
var G__8761 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8760,G__8761) : f.call(null,G__8760,G__8761));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__8980 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8980) : p.call(null,G__8980));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3801__auto__ = (function (){var G__8982 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8982) : p.call(null,G__8982));
})();
if(cljs.core.truth_(and__3801__auto__)){
var G__8983 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8983) : p.call(null,G__8983));
} else {
return and__3801__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3801__auto__ = (function (){var G__8985 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8985) : p.call(null,G__8985));
})();
if(cljs.core.truth_(and__3801__auto__)){
var and__3801__auto____$1 = (function (){var G__8987 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8987) : p.call(null,G__8987));
})();
if(cljs.core.truth_(and__3801__auto____$1)){
var G__8988 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8988) : p.call(null,G__8988));
} else {
return and__3801__auto____$1;
}
} else {
return and__3801__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__9157__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__9157 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9158__i = 0, G__9158__a = new Array(arguments.length -  3);
while (G__9158__i < G__9158__a.length) {G__9158__a[G__9158__i] = arguments[G__9158__i + 3]; ++G__9158__i;}
  args = new cljs.core.IndexedSeq(G__9158__a,0);
} 
return G__9157__delegate.call(this,x,y,z,args);};
G__9157.cljs$lang$maxFixedArity = 3;
G__9157.cljs$lang$applyTo = (function (arglist__9159){
var x = cljs.core.first(arglist__9159);
arglist__9159 = cljs.core.next(arglist__9159);
var y = cljs.core.first(arglist__9159);
arglist__9159 = cljs.core.next(arglist__9159);
var z = cljs.core.first(arglist__9159);
var args = cljs.core.rest(arglist__9159);
return G__9157__delegate(x,y,z,args);
});
G__9157.cljs$core$IFn$_invoke$arity$variadic = G__9157__delegate;
return G__9157;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__9160 = null;
if (arguments.length > 3) {
var G__9161__i = 0, G__9161__a = new Array(arguments.length -  3);
while (G__9161__i < G__9161__a.length) {G__9161__a[G__9161__i] = arguments[G__9161__i + 3]; ++G__9161__i;}
G__9160 = new cljs.core.IndexedSeq(G__9161__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9160);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3801__auto__ = (function (){var G__9020 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9020) : p1.call(null,G__9020));
})();
if(cljs.core.truth_(and__3801__auto__)){
var G__9021 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9021) : p2.call(null,G__9021));
} else {
return and__3801__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3801__auto__ = (function (){var G__9023 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9023) : p1.call(null,G__9023));
})();
if(cljs.core.truth_(and__3801__auto__)){
var and__3801__auto____$1 = (function (){var G__9025 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9025) : p1.call(null,G__9025));
})();
if(cljs.core.truth_(and__3801__auto____$1)){
var and__3801__auto____$2 = (function (){var G__9027 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9027) : p2.call(null,G__9027));
})();
if(cljs.core.truth_(and__3801__auto____$2)){
var G__9028 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9028) : p2.call(null,G__9028));
} else {
return and__3801__auto____$2;
}
} else {
return and__3801__auto____$1;
}
} else {
return and__3801__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3801__auto__ = (function (){var G__9030 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9030) : p1.call(null,G__9030));
})();
if(cljs.core.truth_(and__3801__auto__)){
var and__3801__auto____$1 = (function (){var G__9032 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9032) : p1.call(null,G__9032));
})();
if(cljs.core.truth_(and__3801__auto____$1)){
var and__3801__auto____$2 = (function (){var G__9034 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9034) : p1.call(null,G__9034));
})();
if(cljs.core.truth_(and__3801__auto____$2)){
var and__3801__auto____$3 = (function (){var G__9036 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9036) : p2.call(null,G__9036));
})();
if(cljs.core.truth_(and__3801__auto____$3)){
var and__3801__auto____$4 = (function (){var G__9038 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9038) : p2.call(null,G__9038));
})();
if(cljs.core.truth_(and__3801__auto____$4)){
var G__9039 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9039) : p2.call(null,G__9039));
} else {
return and__3801__auto____$4;
}
} else {
return and__3801__auto____$3;
}
} else {
return and__3801__auto____$2;
}
} else {
return and__3801__auto____$1;
}
} else {
return and__3801__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__9162__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__8767_SHARP_){
var and__3801__auto__ = (function (){var G__9044 = p1__8767_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9044) : p1.call(null,G__9044));
})();
if(cljs.core.truth_(and__3801__auto__)){
var G__9045 = p1__8767_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9045) : p2.call(null,G__9045));
} else {
return and__3801__auto__;
}
}),args)));
};
var G__9162 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9163__i = 0, G__9163__a = new Array(arguments.length -  3);
while (G__9163__i < G__9163__a.length) {G__9163__a[G__9163__i] = arguments[G__9163__i + 3]; ++G__9163__i;}
  args = new cljs.core.IndexedSeq(G__9163__a,0);
} 
return G__9162__delegate.call(this,x,y,z,args);};
G__9162.cljs$lang$maxFixedArity = 3;
G__9162.cljs$lang$applyTo = (function (arglist__9164){
var x = cljs.core.first(arglist__9164);
arglist__9164 = cljs.core.next(arglist__9164);
var y = cljs.core.first(arglist__9164);
arglist__9164 = cljs.core.next(arglist__9164);
var z = cljs.core.first(arglist__9164);
var args = cljs.core.rest(arglist__9164);
return G__9162__delegate(x,y,z,args);
});
G__9162.cljs$core$IFn$_invoke$arity$variadic = G__9162__delegate;
return G__9162;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__9165 = null;
if (arguments.length > 3) {
var G__9166__i = 0, G__9166__a = new Array(arguments.length -  3);
while (G__9166__i < G__9166__a.length) {G__9166__a[G__9166__i] = arguments[G__9166__i + 3]; ++G__9166__i;}
G__9165 = new cljs.core.IndexedSeq(G__9166__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9165);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3801__auto__ = (function (){var G__9091 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9091) : p1.call(null,G__9091));
})();
if(cljs.core.truth_(and__3801__auto__)){
var and__3801__auto____$1 = (function (){var G__9093 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9093) : p2.call(null,G__9093));
})();
if(cljs.core.truth_(and__3801__auto____$1)){
var G__9094 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9094) : p3.call(null,G__9094));
} else {
return and__3801__auto____$1;
}
} else {
return and__3801__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3801__auto__ = (function (){var G__9096 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9096) : p1.call(null,G__9096));
})();
if(cljs.core.truth_(and__3801__auto__)){
var and__3801__auto____$1 = (function (){var G__9098 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9098) : p2.call(null,G__9098));
})();
if(cljs.core.truth_(and__3801__auto____$1)){
var and__3801__auto____$2 = (function (){var G__9100 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9100) : p3.call(null,G__9100));
})();
if(cljs.core.truth_(and__3801__auto____$2)){
var and__3801__auto____$3 = (function (){var G__9102 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9102) : p1.call(null,G__9102));
})();
if(cljs.core.truth_(and__3801__auto____$3)){
var and__3801__auto____$4 = (function (){var G__9104 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9104) : p2.call(null,G__9104));
})();
if(cljs.core.truth_(and__3801__auto____$4)){
var G__9105 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9105) : p3.call(null,G__9105));
} else {
return and__3801__auto____$4;
}
} else {
return and__3801__auto____$3;
}
} else {
return and__3801__auto____$2;
}
} else {
return and__3801__auto____$1;
}
} else {
return and__3801__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3801__auto__ = (function (){var G__9107 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9107) : p1.call(null,G__9107));
})();
if(cljs.core.truth_(and__3801__auto__)){
var and__3801__auto____$1 = (function (){var G__9109 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9109) : p2.call(null,G__9109));
})();
if(cljs.core.truth_(and__3801__auto____$1)){
var and__3801__auto____$2 = (function (){var G__9111 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9111) : p3.call(null,G__9111));
})();
if(cljs.core.truth_(and__3801__auto____$2)){
var and__3801__auto____$3 = (function (){var G__9113 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9113) : p1.call(null,G__9113));
})();
if(cljs.core.truth_(and__3801__auto____$3)){
var and__3801__auto____$4 = (function (){var G__9115 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9115) : p2.call(null,G__9115));
})();
if(cljs.core.truth_(and__3801__auto____$4)){
var and__3801__auto____$5 = (function (){var G__9117 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9117) : p3.call(null,G__9117));
})();
if(cljs.core.truth_(and__3801__auto____$5)){
var and__3801__auto____$6 = (function (){var G__9119 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9119) : p1.call(null,G__9119));
})();
if(cljs.core.truth_(and__3801__auto____$6)){
var and__3801__auto____$7 = (function (){var G__9121 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9121) : p2.call(null,G__9121));
})();
if(cljs.core.truth_(and__3801__auto____$7)){
var G__9122 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9122) : p3.call(null,G__9122));
} else {
return and__3801__auto____$7;
}
} else {
return and__3801__auto____$6;
}
} else {
return and__3801__auto____$5;
}
} else {
return and__3801__auto____$4;
}
} else {
return and__3801__auto____$3;
}
} else {
return and__3801__auto____$2;
}
} else {
return and__3801__auto____$1;
}
} else {
return and__3801__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__9167__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__8768_SHARP_){
var and__3801__auto__ = (function (){var G__9129 = p1__8768_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9129) : p1.call(null,G__9129));
})();
if(cljs.core.truth_(and__3801__auto__)){
var and__3801__auto____$1 = (function (){var G__9131 = p1__8768_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9131) : p2.call(null,G__9131));
})();
if(cljs.core.truth_(and__3801__auto____$1)){
var G__9132 = p1__8768_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9132) : p3.call(null,G__9132));
} else {
return and__3801__auto____$1;
}
} else {
return and__3801__auto__;
}
}),args)));
};
var G__9167 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9168__i = 0, G__9168__a = new Array(arguments.length -  3);
while (G__9168__i < G__9168__a.length) {G__9168__a[G__9168__i] = arguments[G__9168__i + 3]; ++G__9168__i;}
  args = new cljs.core.IndexedSeq(G__9168__a,0);
} 
return G__9167__delegate.call(this,x,y,z,args);};
G__9167.cljs$lang$maxFixedArity = 3;
G__9167.cljs$lang$applyTo = (function (arglist__9169){
var x = cljs.core.first(arglist__9169);
arglist__9169 = cljs.core.next(arglist__9169);
var y = cljs.core.first(arglist__9169);
arglist__9169 = cljs.core.next(arglist__9169);
var z = cljs.core.first(arglist__9169);
var args = cljs.core.rest(arglist__9169);
return G__9167__delegate(x,y,z,args);
});
G__9167.cljs$core$IFn$_invoke$arity$variadic = G__9167__delegate;
return G__9167;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__9170 = null;
if (arguments.length > 3) {
var G__9171__i = 0, G__9171__a = new Array(arguments.length -  3);
while (G__9171__i < G__9171__a.length) {G__9171__a[G__9171__i] = arguments[G__9171__i + 3]; ++G__9171__i;}
G__9170 = new cljs.core.IndexedSeq(G__9171__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9170);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__9172__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__8769_SHARP_){
var G__9148 = x;
return (p1__8769_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8769_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9148) : p1__8769_SHARP_.call(null,G__9148));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__8770_SHARP_){
var and__3801__auto__ = (function (){var G__9150 = x;
return (p1__8770_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8770_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9150) : p1__8770_SHARP_.call(null,G__9150));
})();
if(cljs.core.truth_(and__3801__auto__)){
var G__9151 = y;
return (p1__8770_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8770_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9151) : p1__8770_SHARP_.call(null,G__9151));
} else {
return and__3801__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__8771_SHARP_){
var and__3801__auto__ = (function (){var G__9153 = x;
return (p1__8771_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8771_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9153) : p1__8771_SHARP_.call(null,G__9153));
})();
if(cljs.core.truth_(and__3801__auto__)){
var and__3801__auto____$1 = (function (){var G__9155 = y;
return (p1__8771_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8771_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9155) : p1__8771_SHARP_.call(null,G__9155));
})();
if(cljs.core.truth_(and__3801__auto____$1)){
var G__9156 = z;
return (p1__8771_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8771_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9156) : p1__8771_SHARP_.call(null,G__9156));
} else {
return and__3801__auto____$1;
}
} else {
return and__3801__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__9173__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__8772_SHARP_){
return cljs.core.every_QMARK_(p1__8772_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__9173 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9174__i = 0, G__9174__a = new Array(arguments.length -  3);
while (G__9174__i < G__9174__a.length) {G__9174__a[G__9174__i] = arguments[G__9174__i + 3]; ++G__9174__i;}
  args = new cljs.core.IndexedSeq(G__9174__a,0);
} 
return G__9173__delegate.call(this,x,y,z,args);};
G__9173.cljs$lang$maxFixedArity = 3;
G__9173.cljs$lang$applyTo = (function (arglist__9175){
var x = cljs.core.first(arglist__9175);
arglist__9175 = cljs.core.next(arglist__9175);
var y = cljs.core.first(arglist__9175);
arglist__9175 = cljs.core.next(arglist__9175);
var z = cljs.core.first(arglist__9175);
var args = cljs.core.rest(arglist__9175);
return G__9173__delegate(x,y,z,args);
});
G__9173.cljs$core$IFn$_invoke$arity$variadic = G__9173__delegate;
return G__9173;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__9176 = null;
if (arguments.length > 3) {
var G__9177__i = 0, G__9177__a = new Array(arguments.length -  3);
while (G__9177__i < G__9177__a.length) {G__9177__a[G__9177__i] = arguments[G__9177__i + 3]; ++G__9177__i;}
G__9176 = new cljs.core.IndexedSeq(G__9177__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9176);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__9172 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__9178__i = 0, G__9178__a = new Array(arguments.length -  3);
while (G__9178__i < G__9178__a.length) {G__9178__a[G__9178__i] = arguments[G__9178__i + 3]; ++G__9178__i;}
  ps = new cljs.core.IndexedSeq(G__9178__a,0);
} 
return G__9172__delegate.call(this,p1,p2,p3,ps);};
G__9172.cljs$lang$maxFixedArity = 3;
G__9172.cljs$lang$applyTo = (function (arglist__9179){
var p1 = cljs.core.first(arglist__9179);
arglist__9179 = cljs.core.next(arglist__9179);
var p2 = cljs.core.first(arglist__9179);
arglist__9179 = cljs.core.next(arglist__9179);
var p3 = cljs.core.first(arglist__9179);
var ps = cljs.core.rest(arglist__9179);
return G__9172__delegate(p1,p2,p3,ps);
});
G__9172.cljs$core$IFn$_invoke$arity$variadic = G__9172__delegate;
return G__9172;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__9180 = null;
if (arguments.length > 3) {
var G__9181__i = 0, G__9181__a = new Array(arguments.length -  3);
while (G__9181__i < G__9181__a.length) {G__9181__a[G__9181__i] = arguments[G__9181__i + 3]; ++G__9181__i;}
G__9180 = new cljs.core.IndexedSeq(G__9181__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__9180);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__9387 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9387) : p.call(null,G__9387));
});
var sp1__2 = (function (x,y){
var or__3813__auto__ = (function (){var G__9389 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9389) : p.call(null,G__9389));
})();
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
var G__9390 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9390) : p.call(null,G__9390));
}
});
var sp1__3 = (function (x,y,z){
var or__3813__auto__ = (function (){var G__9392 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9392) : p.call(null,G__9392));
})();
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (function (){var G__9394 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9394) : p.call(null,G__9394));
})();
if(cljs.core.truth_(or__3813__auto____$1)){
return or__3813__auto____$1;
} else {
var G__9395 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9395) : p.call(null,G__9395));
}
}
});
var sp1__4 = (function() { 
var G__9556__delegate = function (x,y,z,args){
var or__3813__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__9556 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9557__i = 0, G__9557__a = new Array(arguments.length -  3);
while (G__9557__i < G__9557__a.length) {G__9557__a[G__9557__i] = arguments[G__9557__i + 3]; ++G__9557__i;}
  args = new cljs.core.IndexedSeq(G__9557__a,0);
} 
return G__9556__delegate.call(this,x,y,z,args);};
G__9556.cljs$lang$maxFixedArity = 3;
G__9556.cljs$lang$applyTo = (function (arglist__9558){
var x = cljs.core.first(arglist__9558);
arglist__9558 = cljs.core.next(arglist__9558);
var y = cljs.core.first(arglist__9558);
arglist__9558 = cljs.core.next(arglist__9558);
var z = cljs.core.first(arglist__9558);
var args = cljs.core.rest(arglist__9558);
return G__9556__delegate(x,y,z,args);
});
G__9556.cljs$core$IFn$_invoke$arity$variadic = G__9556__delegate;
return G__9556;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__9559 = null;
if (arguments.length > 3) {
var G__9560__i = 0, G__9560__a = new Array(arguments.length -  3);
while (G__9560__i < G__9560__a.length) {G__9560__a[G__9560__i] = arguments[G__9560__i + 3]; ++G__9560__i;}
G__9559 = new cljs.core.IndexedSeq(G__9560__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9559);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3813__auto__ = (function (){var G__9427 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9427) : p1.call(null,G__9427));
})();
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
var G__9428 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9428) : p2.call(null,G__9428));
}
});
var sp2__2 = (function (x,y){
var or__3813__auto__ = (function (){var G__9430 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9430) : p1.call(null,G__9430));
})();
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (function (){var G__9432 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9432) : p1.call(null,G__9432));
})();
if(cljs.core.truth_(or__3813__auto____$1)){
return or__3813__auto____$1;
} else {
var or__3813__auto____$2 = (function (){var G__9434 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9434) : p2.call(null,G__9434));
})();
if(cljs.core.truth_(or__3813__auto____$2)){
return or__3813__auto____$2;
} else {
var G__9435 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9435) : p2.call(null,G__9435));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3813__auto__ = (function (){var G__9437 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9437) : p1.call(null,G__9437));
})();
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (function (){var G__9439 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9439) : p1.call(null,G__9439));
})();
if(cljs.core.truth_(or__3813__auto____$1)){
return or__3813__auto____$1;
} else {
var or__3813__auto____$2 = (function (){var G__9441 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9441) : p1.call(null,G__9441));
})();
if(cljs.core.truth_(or__3813__auto____$2)){
return or__3813__auto____$2;
} else {
var or__3813__auto____$3 = (function (){var G__9443 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9443) : p2.call(null,G__9443));
})();
if(cljs.core.truth_(or__3813__auto____$3)){
return or__3813__auto____$3;
} else {
var or__3813__auto____$4 = (function (){var G__9445 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9445) : p2.call(null,G__9445));
})();
if(cljs.core.truth_(or__3813__auto____$4)){
return or__3813__auto____$4;
} else {
var G__9446 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9446) : p2.call(null,G__9446));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__9561__delegate = function (x,y,z,args){
var or__3813__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
return cljs.core.some(((function (or__3813__auto__){
return (function (p1__9182_SHARP_){
var or__3813__auto____$1 = (function (){var G__9448 = p1__9182_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9448) : p1.call(null,G__9448));
})();
if(cljs.core.truth_(or__3813__auto____$1)){
return or__3813__auto____$1;
} else {
var G__9449 = p1__9182_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9449) : p2.call(null,G__9449));
}
});})(or__3813__auto__))
,args);
}
};
var G__9561 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9562__i = 0, G__9562__a = new Array(arguments.length -  3);
while (G__9562__i < G__9562__a.length) {G__9562__a[G__9562__i] = arguments[G__9562__i + 3]; ++G__9562__i;}
  args = new cljs.core.IndexedSeq(G__9562__a,0);
} 
return G__9561__delegate.call(this,x,y,z,args);};
G__9561.cljs$lang$maxFixedArity = 3;
G__9561.cljs$lang$applyTo = (function (arglist__9563){
var x = cljs.core.first(arglist__9563);
arglist__9563 = cljs.core.next(arglist__9563);
var y = cljs.core.first(arglist__9563);
arglist__9563 = cljs.core.next(arglist__9563);
var z = cljs.core.first(arglist__9563);
var args = cljs.core.rest(arglist__9563);
return G__9561__delegate(x,y,z,args);
});
G__9561.cljs$core$IFn$_invoke$arity$variadic = G__9561__delegate;
return G__9561;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__9564 = null;
if (arguments.length > 3) {
var G__9565__i = 0, G__9565__a = new Array(arguments.length -  3);
while (G__9565__i < G__9565__a.length) {G__9565__a[G__9565__i] = arguments[G__9565__i + 3]; ++G__9565__i;}
G__9564 = new cljs.core.IndexedSeq(G__9565__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9564);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3813__auto__ = (function (){var G__9495 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9495) : p1.call(null,G__9495));
})();
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (function (){var G__9497 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9497) : p2.call(null,G__9497));
})();
if(cljs.core.truth_(or__3813__auto____$1)){
return or__3813__auto____$1;
} else {
var G__9498 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9498) : p3.call(null,G__9498));
}
}
});
var sp3__2 = (function (x,y){
var or__3813__auto__ = (function (){var G__9500 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9500) : p1.call(null,G__9500));
})();
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (function (){var G__9502 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9502) : p2.call(null,G__9502));
})();
if(cljs.core.truth_(or__3813__auto____$1)){
return or__3813__auto____$1;
} else {
var or__3813__auto____$2 = (function (){var G__9504 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9504) : p3.call(null,G__9504));
})();
if(cljs.core.truth_(or__3813__auto____$2)){
return or__3813__auto____$2;
} else {
var or__3813__auto____$3 = (function (){var G__9506 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9506) : p1.call(null,G__9506));
})();
if(cljs.core.truth_(or__3813__auto____$3)){
return or__3813__auto____$3;
} else {
var or__3813__auto____$4 = (function (){var G__9508 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9508) : p2.call(null,G__9508));
})();
if(cljs.core.truth_(or__3813__auto____$4)){
return or__3813__auto____$4;
} else {
var G__9509 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9509) : p3.call(null,G__9509));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3813__auto__ = (function (){var G__9511 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9511) : p1.call(null,G__9511));
})();
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (function (){var G__9513 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9513) : p2.call(null,G__9513));
})();
if(cljs.core.truth_(or__3813__auto____$1)){
return or__3813__auto____$1;
} else {
var or__3813__auto____$2 = (function (){var G__9515 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9515) : p3.call(null,G__9515));
})();
if(cljs.core.truth_(or__3813__auto____$2)){
return or__3813__auto____$2;
} else {
var or__3813__auto____$3 = (function (){var G__9517 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9517) : p1.call(null,G__9517));
})();
if(cljs.core.truth_(or__3813__auto____$3)){
return or__3813__auto____$3;
} else {
var or__3813__auto____$4 = (function (){var G__9519 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9519) : p2.call(null,G__9519));
})();
if(cljs.core.truth_(or__3813__auto____$4)){
return or__3813__auto____$4;
} else {
var or__3813__auto____$5 = (function (){var G__9521 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9521) : p3.call(null,G__9521));
})();
if(cljs.core.truth_(or__3813__auto____$5)){
return or__3813__auto____$5;
} else {
var or__3813__auto____$6 = (function (){var G__9523 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9523) : p1.call(null,G__9523));
})();
if(cljs.core.truth_(or__3813__auto____$6)){
return or__3813__auto____$6;
} else {
var or__3813__auto____$7 = (function (){var G__9525 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9525) : p2.call(null,G__9525));
})();
if(cljs.core.truth_(or__3813__auto____$7)){
return or__3813__auto____$7;
} else {
var G__9526 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9526) : p3.call(null,G__9526));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__9566__delegate = function (x,y,z,args){
var or__3813__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
return cljs.core.some(((function (or__3813__auto__){
return (function (p1__9183_SHARP_){
var or__3813__auto____$1 = (function (){var G__9528 = p1__9183_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9528) : p1.call(null,G__9528));
})();
if(cljs.core.truth_(or__3813__auto____$1)){
return or__3813__auto____$1;
} else {
var or__3813__auto____$2 = (function (){var G__9530 = p1__9183_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9530) : p2.call(null,G__9530));
})();
if(cljs.core.truth_(or__3813__auto____$2)){
return or__3813__auto____$2;
} else {
var G__9531 = p1__9183_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9531) : p3.call(null,G__9531));
}
}
});})(or__3813__auto__))
,args);
}
};
var G__9566 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9567__i = 0, G__9567__a = new Array(arguments.length -  3);
while (G__9567__i < G__9567__a.length) {G__9567__a[G__9567__i] = arguments[G__9567__i + 3]; ++G__9567__i;}
  args = new cljs.core.IndexedSeq(G__9567__a,0);
} 
return G__9566__delegate.call(this,x,y,z,args);};
G__9566.cljs$lang$maxFixedArity = 3;
G__9566.cljs$lang$applyTo = (function (arglist__9568){
var x = cljs.core.first(arglist__9568);
arglist__9568 = cljs.core.next(arglist__9568);
var y = cljs.core.first(arglist__9568);
arglist__9568 = cljs.core.next(arglist__9568);
var z = cljs.core.first(arglist__9568);
var args = cljs.core.rest(arglist__9568);
return G__9566__delegate(x,y,z,args);
});
G__9566.cljs$core$IFn$_invoke$arity$variadic = G__9566__delegate;
return G__9566;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__9569 = null;
if (arguments.length > 3) {
var G__9570__i = 0, G__9570__a = new Array(arguments.length -  3);
while (G__9570__i < G__9570__a.length) {G__9570__a[G__9570__i] = arguments[G__9570__i + 3]; ++G__9570__i;}
G__9569 = new cljs.core.IndexedSeq(G__9570__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9569);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__9571__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__9184_SHARP_){
var G__9547 = x;
return (p1__9184_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9184_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9547) : p1__9184_SHARP_.call(null,G__9547));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__9185_SHARP_){
var or__3813__auto__ = (function (){var G__9549 = x;
return (p1__9185_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9185_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9549) : p1__9185_SHARP_.call(null,G__9549));
})();
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
var G__9550 = y;
return (p1__9185_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9185_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9550) : p1__9185_SHARP_.call(null,G__9550));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__9186_SHARP_){
var or__3813__auto__ = (function (){var G__9552 = x;
return (p1__9186_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9186_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9552) : p1__9186_SHARP_.call(null,G__9552));
})();
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (function (){var G__9554 = y;
return (p1__9186_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9186_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9554) : p1__9186_SHARP_.call(null,G__9554));
})();
if(cljs.core.truth_(or__3813__auto____$1)){
return or__3813__auto____$1;
} else {
var G__9555 = z;
return (p1__9186_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9186_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9555) : p1__9186_SHARP_.call(null,G__9555));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__9572__delegate = function (x,y,z,args){
var or__3813__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
return cljs.core.some(((function (or__3813__auto__,ps__$1){
return (function (p1__9187_SHARP_){
return cljs.core.some(p1__9187_SHARP_,args);
});})(or__3813__auto__,ps__$1))
,ps__$1);
}
};
var G__9572 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9573__i = 0, G__9573__a = new Array(arguments.length -  3);
while (G__9573__i < G__9573__a.length) {G__9573__a[G__9573__i] = arguments[G__9573__i + 3]; ++G__9573__i;}
  args = new cljs.core.IndexedSeq(G__9573__a,0);
} 
return G__9572__delegate.call(this,x,y,z,args);};
G__9572.cljs$lang$maxFixedArity = 3;
G__9572.cljs$lang$applyTo = (function (arglist__9574){
var x = cljs.core.first(arglist__9574);
arglist__9574 = cljs.core.next(arglist__9574);
var y = cljs.core.first(arglist__9574);
arglist__9574 = cljs.core.next(arglist__9574);
var z = cljs.core.first(arglist__9574);
var args = cljs.core.rest(arglist__9574);
return G__9572__delegate(x,y,z,args);
});
G__9572.cljs$core$IFn$_invoke$arity$variadic = G__9572__delegate;
return G__9572;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__9575 = null;
if (arguments.length > 3) {
var G__9576__i = 0, G__9576__a = new Array(arguments.length -  3);
while (G__9576__i < G__9576__a.length) {G__9576__a[G__9576__i] = arguments[G__9576__i + 3]; ++G__9576__i;}
G__9575 = new cljs.core.IndexedSeq(G__9576__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9575);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__9571 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__9577__i = 0, G__9577__a = new Array(arguments.length -  3);
while (G__9577__i < G__9577__a.length) {G__9577__a[G__9577__i] = arguments[G__9577__i + 3]; ++G__9577__i;}
  ps = new cljs.core.IndexedSeq(G__9577__a,0);
} 
return G__9571__delegate.call(this,p1,p2,p3,ps);};
G__9571.cljs$lang$maxFixedArity = 3;
G__9571.cljs$lang$applyTo = (function (arglist__9578){
var p1 = cljs.core.first(arglist__9578);
arglist__9578 = cljs.core.next(arglist__9578);
var p2 = cljs.core.first(arglist__9578);
arglist__9578 = cljs.core.next(arglist__9578);
var p3 = cljs.core.first(arglist__9578);
var ps = cljs.core.rest(arglist__9578);
return G__9571__delegate(p1,p2,p3,ps);
});
G__9571.cljs$core$IFn$_invoke$arity$variadic = G__9571__delegate;
return G__9571;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__9579 = null;
if (arguments.length > 3) {
var G__9580__i = 0, G__9580__a = new Array(arguments.length -  3);
while (G__9580__i < G__9580__a.length) {G__9580__a[G__9580__i] = arguments[G__9580__i + 3]; ++G__9580__i;}
G__9579 = new cljs.core.IndexedSeq(G__9580__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__9579);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__9635 = null;
var G__9635__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9635__1 = (function (result){
var G__9621 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9621) : rf.call(null,G__9621));
});
var G__9635__2 = (function (result,input){
var G__9622 = result;
var G__9623 = (function (){var G__9624 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9624) : f.call(null,G__9624));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9622,G__9623) : rf.call(null,G__9622,G__9623));
});
var G__9635__3 = (function() { 
var G__9636__delegate = function (result,input,inputs){
var G__9625 = result;
var G__9626 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9625,G__9626) : rf.call(null,G__9625,G__9626));
};
var G__9636 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__9637__i = 0, G__9637__a = new Array(arguments.length -  2);
while (G__9637__i < G__9637__a.length) {G__9637__a[G__9637__i] = arguments[G__9637__i + 2]; ++G__9637__i;}
  inputs = new cljs.core.IndexedSeq(G__9637__a,0);
} 
return G__9636__delegate.call(this,result,input,inputs);};
G__9636.cljs$lang$maxFixedArity = 2;
G__9636.cljs$lang$applyTo = (function (arglist__9638){
var result = cljs.core.first(arglist__9638);
arglist__9638 = cljs.core.next(arglist__9638);
var input = cljs.core.first(arglist__9638);
var inputs = cljs.core.rest(arglist__9638);
return G__9636__delegate(result,input,inputs);
});
G__9636.cljs$core$IFn$_invoke$arity$variadic = G__9636__delegate;
return G__9636;
})()
;
G__9635 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__9635__0.call(this);
case 1:
return G__9635__1.call(this,result);
case 2:
return G__9635__2.call(this,result,input);
default:
var G__9639 = null;
if (arguments.length > 2) {
var G__9640__i = 0, G__9640__a = new Array(arguments.length -  2);
while (G__9640__i < G__9640__a.length) {G__9640__a[G__9640__i] = arguments[G__9640__i + 2]; ++G__9640__i;}
G__9639 = new cljs.core.IndexedSeq(G__9640__a,0);
}
return G__9635__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__9639);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9635.cljs$lang$maxFixedArity = 2;
G__9635.cljs$lang$applyTo = G__9635__3.cljs$lang$applyTo;
G__9635.cljs$core$IFn$_invoke$arity$0 = G__9635__0;
G__9635.cljs$core$IFn$_invoke$arity$1 = G__9635__1;
G__9635.cljs$core$IFn$_invoke$arity$2 = G__9635__2;
G__9635.cljs$core$IFn$_invoke$arity$variadic = G__9635__3.cljs$core$IFn$_invoke$arity$variadic;
return G__9635;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4700__auto___9641 = size;
var i_9642 = (0);
while(true){
if((i_9642 < n__4700__auto___9641)){
cljs.core.chunk_append(b,(function (){var G__9627 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9642);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9627) : f.call(null,G__9627));
})());

var G__9643 = (i_9642 + (1));
i_9642 = G__9643;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__9628 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9628) : f.call(null,G__9628));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__9629 = cljs.core.first(s1);
var G__9630 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9629,G__9630) : f.call(null,G__9629,G__9630));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__9631 = cljs.core.first(s1);
var G__9632 = cljs.core.first(s2);
var G__9633 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9631,G__9632,G__9633) : f.call(null,G__9631,G__9632,G__9633));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__9644__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__9581_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__9581_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__9644 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__9645__i = 0, G__9645__a = new Array(arguments.length -  4);
while (G__9645__i < G__9645__a.length) {G__9645__a[G__9645__i] = arguments[G__9645__i + 4]; ++G__9645__i;}
  colls = new cljs.core.IndexedSeq(G__9645__a,0);
} 
return G__9644__delegate.call(this,f,c1,c2,c3,colls);};
G__9644.cljs$lang$maxFixedArity = 4;
G__9644.cljs$lang$applyTo = (function (arglist__9646){
var f = cljs.core.first(arglist__9646);
arglist__9646 = cljs.core.next(arglist__9646);
var c1 = cljs.core.first(arglist__9646);
arglist__9646 = cljs.core.next(arglist__9646);
var c2 = cljs.core.first(arglist__9646);
arglist__9646 = cljs.core.next(arglist__9646);
var c3 = cljs.core.first(arglist__9646);
var colls = cljs.core.rest(arglist__9646);
return G__9644__delegate(f,c1,c2,c3,colls);
});
G__9644.cljs$core$IFn$_invoke$arity$variadic = G__9644__delegate;
return G__9644;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__9647 = null;
if (arguments.length > 4) {
var G__9648__i = 0, G__9648__a = new Array(arguments.length -  4);
while (G__9648__i < G__9648__a.length) {G__9648__a[G__9648__i] = arguments[G__9648__i + 4]; ++G__9648__i;}
G__9647 = new cljs.core.IndexedSeq(G__9648__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__9647);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__9657 = null;
var G__9657__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9657__1 = (function (result){
var G__9654 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9654) : rf.call(null,G__9654));
});
var G__9657__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__9655 = result;
var G__9656 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9655,G__9656) : rf.call(null,G__9655,G__9656));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__9657 = function(result,input){
switch(arguments.length){
case 0:
return G__9657__0.call(this);
case 1:
return G__9657__1.call(this,result);
case 2:
return G__9657__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9657.cljs$core$IFn$_invoke$arity$0 = G__9657__0;
G__9657.cljs$core$IFn$_invoke$arity$1 = G__9657__1;
G__9657.cljs$core$IFn$_invoke$arity$2 = G__9657__2;
return G__9657;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__9664 = null;
var G__9664__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9664__1 = (function (result){
var G__9661 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9661) : rf.call(null,G__9661));
});
var G__9664__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__9662 = result;
var G__9663 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9662,G__9663) : rf.call(null,G__9662,G__9663));
}
});
G__9664 = function(result,input){
switch(arguments.length){
case 0:
return G__9664__0.call(this);
case 1:
return G__9664__1.call(this,result);
case 2:
return G__9664__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9664.cljs$core$IFn$_invoke$arity$0 = G__9664__0;
G__9664.cljs$core$IFn$_invoke$arity$1 = G__9664__1;
G__9664.cljs$core$IFn$_invoke$arity$2 = G__9664__2;
return G__9664;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__9665 = (n__$1 - (1));
var G__9666 = cljs.core.rest(s);
n__$1 = G__9665;
coll__$1 = G__9666;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__9669 = cljs.core.next(s);
var G__9670 = cljs.core.next(lead);
s = G__9669;
lead = G__9670;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__9683 = null;
var G__9683__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9683__1 = (function (result){
var G__9677 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9677) : rf.call(null,G__9677));
});
var G__9683__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3801__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3801__auto__)){
var G__9678 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9678) : pred.call(null,G__9678));
} else {
return and__3801__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__9679 = result;
var G__9680 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9679,G__9680) : rf.call(null,G__9679,G__9680));
}
});
G__9683 = function(result,input){
switch(arguments.length){
case 0:
return G__9683__0.call(this);
case 1:
return G__9683__1.call(this,result);
case 2:
return G__9683__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9683.cljs$core$IFn$_invoke$arity$0 = G__9683__0;
G__9683.cljs$core$IFn$_invoke$arity$1 = G__9683__1;
G__9683.cljs$core$IFn$_invoke$arity$2 = G__9683__2;
return G__9683;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3801__auto__ = s;
if(and__3801__auto__){
var G__9682 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__9682) : pred__$1.call(null,G__9682));
} else {
return and__3801__auto__;
}
})())){
var G__9684 = pred__$1;
var G__9685 = cljs.core.rest(s);
pred__$1 = G__9684;
coll__$1 = G__9685;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__9694 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9694) : f.call(null,G__9694));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__9697__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__9697 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__9698__i = 0, G__9698__a = new Array(arguments.length -  2);
while (G__9698__i < G__9698__a.length) {G__9698__a[G__9698__i] = arguments[G__9698__i + 2]; ++G__9698__i;}
  colls = new cljs.core.IndexedSeq(G__9698__a,0);
} 
return G__9697__delegate.call(this,c1,c2,colls);};
G__9697.cljs$lang$maxFixedArity = 2;
G__9697.cljs$lang$applyTo = (function (arglist__9699){
var c1 = cljs.core.first(arglist__9699);
arglist__9699 = cljs.core.next(arglist__9699);
var c2 = cljs.core.first(arglist__9699);
var colls = cljs.core.rest(arglist__9699);
return G__9697__delegate(c1,c2,colls);
});
G__9697.cljs$core$IFn$_invoke$arity$variadic = G__9697__delegate;
return G__9697;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__9700 = null;
if (arguments.length > 2) {
var G__9701__i = 0, G__9701__a = new Array(arguments.length -  2);
while (G__9701__i < G__9701__a.length) {G__9701__a[G__9701__i] = arguments[G__9701__i + 2]; ++G__9701__i;}
G__9700 = new cljs.core.IndexedSeq(G__9701__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__9700);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__9716 = null;
var G__9716__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9716__1 = (function (result){
var G__9709 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9709) : rf.call(null,G__9709));
});
var G__9716__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__9710 = result;
var G__9711 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9710,G__9711) : rf.call(null,G__9710,G__9711));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__9712 = sepr;
var G__9713 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9712,G__9713) : rf.call(null,G__9712,G__9713));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__9714 = result;
var G__9715 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9714,G__9715) : rf.call(null,G__9714,G__9715));
}
});
G__9716 = function(result,input){
switch(arguments.length){
case 0:
return G__9716__0.call(this);
case 1:
return G__9716__1.call(this,result);
case 2:
return G__9716__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9716.cljs$core$IFn$_invoke$arity$0 = G__9716__0;
G__9716.cljs$core$IFn$_invoke$arity$1 = G__9716__1;
G__9716.cljs$core$IFn$_invoke$arity$2 = G__9716__2;
return G__9716;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__9725__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__9725 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__9726__i = 0, G__9726__a = new Array(arguments.length -  1);
while (G__9726__i < G__9726__a.length) {G__9726__a[G__9726__i] = arguments[G__9726__i + 1]; ++G__9726__i;}
  colls = new cljs.core.IndexedSeq(G__9726__a,0);
} 
return G__9725__delegate.call(this,f,colls);};
G__9725.cljs$lang$maxFixedArity = 1;
G__9725.cljs$lang$applyTo = (function (arglist__9727){
var f = cljs.core.first(arglist__9727);
var colls = cljs.core.rest(arglist__9727);
return G__9725__delegate(f,colls);
});
G__9725.cljs$core$IFn$_invoke$arity$variadic = G__9725__delegate;
return G__9725;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__9728 = null;
if (arguments.length > 1) {
var G__9729__i = 0, G__9729__a = new Array(arguments.length -  1);
while (G__9729__i < G__9729__a.length) {G__9729__a[G__9729__i] = arguments[G__9729__i + 1]; ++G__9729__i;}
G__9728 = new cljs.core.IndexedSeq(G__9729__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__9728);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__9748 = null;
var G__9748__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9748__1 = (function (result){
var G__9742 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9742) : rf.call(null,G__9742));
});
var G__9748__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__9743 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9743) : pred.call(null,G__9743));
})())){
var G__9744 = result;
var G__9745 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9744,G__9745) : rf.call(null,G__9744,G__9745));
} else {
return result;
}
});
G__9748 = function(result,input){
switch(arguments.length){
case 0:
return G__9748__0.call(this);
case 1:
return G__9748__1.call(this,result);
case 2:
return G__9748__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9748.cljs$core$IFn$_invoke$arity$0 = G__9748__0;
G__9748.cljs$core$IFn$_invoke$arity$1 = G__9748__1;
G__9748.cljs$core$IFn$_invoke$arity$2 = G__9748__2;
return G__9748;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4700__auto___9749 = size;
var i_9750 = (0);
while(true){
if((i_9750 < n__4700__auto___9749)){
if(cljs.core.truth_((function (){var G__9746 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9750);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9746) : pred.call(null,G__9746));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9750));
} else {
}

var G__9751 = (i_9750 + (1));
i_9750 = G__9751;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__9747 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9747) : pred.call(null,G__9747));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__9758 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__9758) : branch_QMARK_.call(null,G__9758));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__9759 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__9759) : children.call(null,G__9759));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__9760_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__9760_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__9763 = to;
if(G__9763){
var bit__4487__auto__ = (G__9763.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4487__auto__) || (G__9763.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__9764 = to;
if(G__9764){
var bit__4487__auto__ = (G__9764.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4487__auto__) || (G__9764.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__9766 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9766) : f.call(null,G__9766));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__9767__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__9767 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__9768__i = 0, G__9768__a = new Array(arguments.length -  4);
while (G__9768__i < G__9768__a.length) {G__9768__a[G__9768__i] = arguments[G__9768__i + 4]; ++G__9768__i;}
  colls = new cljs.core.IndexedSeq(G__9768__a,0);
} 
return G__9767__delegate.call(this,f,c1,c2,c3,colls);};
G__9767.cljs$lang$maxFixedArity = 4;
G__9767.cljs$lang$applyTo = (function (arglist__9769){
var f = cljs.core.first(arglist__9769);
arglist__9769 = cljs.core.next(arglist__9769);
var c1 = cljs.core.first(arglist__9769);
arglist__9769 = cljs.core.next(arglist__9769);
var c2 = cljs.core.first(arglist__9769);
arglist__9769 = cljs.core.next(arglist__9769);
var c3 = cljs.core.first(arglist__9769);
var colls = cljs.core.rest(arglist__9769);
return G__9767__delegate(f,c1,c2,c3,colls);
});
G__9767.cljs$core$IFn$_invoke$arity$variadic = G__9767__delegate;
return G__9767;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__9770 = null;
if (arguments.length > 4) {
var G__9771__i = 0, G__9771__a = new Array(arguments.length -  4);
while (G__9771__i < G__9771__a.length) {G__9771__a[G__9771__i] = arguments[G__9771__i + 4]; ++G__9771__i;}
G__9770 = new cljs.core.IndexedSeq(G__9771__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__9770);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__9773 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9773) : pred.call(null,G__9773));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__9788 = m__$1;
if(G__9788){
var bit__4494__auto__ = (G__9788.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4494__auto__) || (G__9788.cljs$core$ILookup$)){
return true;
} else {
if((!G__9788.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__9788);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__9788);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__9789 = sentinel;
var G__9790 = m__$2;
var G__9791 = cljs.core.next(ks__$1);
sentinel = G__9789;
m__$1 = G__9790;
ks__$1 = G__9791;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__9792,v){
var vec__9797 = p__9792;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9797,(0),null);
var ks = cljs.core.nthnext(vec__9797,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__9798,f){
var vec__9836 = p__9798;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9836,(0),null);
var ks = cljs.core.nthnext(vec__9836,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9837 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9837) : f.call(null,G__9837));
})());
}
});
var update_in__4 = (function (m,p__9799,f,a){
var vec__9838 = p__9799;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9838,(0),null);
var ks = cljs.core.nthnext(vec__9838,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9839 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9840 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9839,G__9840) : f.call(null,G__9839,G__9840));
})());
}
});
var update_in__5 = (function (m,p__9800,f,a,b){
var vec__9841 = p__9800;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9841,(0),null);
var ks = cljs.core.nthnext(vec__9841,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9842 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9843 = a;
var G__9844 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9842,G__9843,G__9844) : f.call(null,G__9842,G__9843,G__9844));
})());
}
});
var update_in__6 = (function (m,p__9801,f,a,b,c){
var vec__9845 = p__9801;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9845,(0),null);
var ks = cljs.core.nthnext(vec__9845,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9846 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9847 = a;
var G__9848 = b;
var G__9849 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9846,G__9847,G__9848,G__9849) : f.call(null,G__9846,G__9847,G__9848,G__9849));
})());
}
});
var update_in__7 = (function() { 
var G__9851__delegate = function (m,p__9802,f,a,b,c,args){
var vec__9850 = p__9802;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9850,(0),null);
var ks = cljs.core.nthnext(vec__9850,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__9851 = function (m,p__9802,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__9852__i = 0, G__9852__a = new Array(arguments.length -  6);
while (G__9852__i < G__9852__a.length) {G__9852__a[G__9852__i] = arguments[G__9852__i + 6]; ++G__9852__i;}
  args = new cljs.core.IndexedSeq(G__9852__a,0);
} 
return G__9851__delegate.call(this,m,p__9802,f,a,b,c,args);};
G__9851.cljs$lang$maxFixedArity = 6;
G__9851.cljs$lang$applyTo = (function (arglist__9853){
var m = cljs.core.first(arglist__9853);
arglist__9853 = cljs.core.next(arglist__9853);
var p__9802 = cljs.core.first(arglist__9853);
arglist__9853 = cljs.core.next(arglist__9853);
var f = cljs.core.first(arglist__9853);
arglist__9853 = cljs.core.next(arglist__9853);
var a = cljs.core.first(arglist__9853);
arglist__9853 = cljs.core.next(arglist__9853);
var b = cljs.core.first(arglist__9853);
arglist__9853 = cljs.core.next(arglist__9853);
var c = cljs.core.first(arglist__9853);
var args = cljs.core.rest(arglist__9853);
return G__9851__delegate(m,p__9802,f,a,b,c,args);
});
G__9851.cljs$core$IFn$_invoke$arity$variadic = G__9851__delegate;
return G__9851;
})()
;
update_in = function(m,p__9802,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__9802,f);
case 4:
return update_in__4.call(this,m,p__9802,f,a);
case 5:
return update_in__5.call(this,m,p__9802,f,a,b);
case 6:
return update_in__6.call(this,m,p__9802,f,a,b,c);
default:
var G__9854 = null;
if (arguments.length > 6) {
var G__9855__i = 0, G__9855__a = new Array(arguments.length -  6);
while (G__9855__i < G__9855__a.length) {G__9855__a[G__9855__i] = arguments[G__9855__i + 6]; ++G__9855__i;}
G__9854 = new cljs.core.IndexedSeq(G__9855__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__9802,f,a,b,c, G__9854);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9866 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9866) : f.call(null,G__9866));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9867 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9868 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9867,G__9868) : f.call(null,G__9867,G__9868));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9869 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9870 = x;
var G__9871 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9869,G__9870,G__9871) : f.call(null,G__9869,G__9870,G__9871));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9872 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9873 = x;
var G__9874 = y;
var G__9875 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9872,G__9873,G__9874,G__9875) : f.call(null,G__9872,G__9873,G__9874,G__9875));
})());
});
var update__7 = (function() { 
var G__9876__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__9876 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__9877__i = 0, G__9877__a = new Array(arguments.length -  6);
while (G__9877__i < G__9877__a.length) {G__9877__a[G__9877__i] = arguments[G__9877__i + 6]; ++G__9877__i;}
  more = new cljs.core.IndexedSeq(G__9877__a,0);
} 
return G__9876__delegate.call(this,m,k,f,x,y,z,more);};
G__9876.cljs$lang$maxFixedArity = 6;
G__9876.cljs$lang$applyTo = (function (arglist__9878){
var m = cljs.core.first(arglist__9878);
arglist__9878 = cljs.core.next(arglist__9878);
var k = cljs.core.first(arglist__9878);
arglist__9878 = cljs.core.next(arglist__9878);
var f = cljs.core.first(arglist__9878);
arglist__9878 = cljs.core.next(arglist__9878);
var x = cljs.core.first(arglist__9878);
arglist__9878 = cljs.core.next(arglist__9878);
var y = cljs.core.first(arglist__9878);
arglist__9878 = cljs.core.next(arglist__9878);
var z = cljs.core.first(arglist__9878);
var more = cljs.core.rest(arglist__9878);
return G__9876__delegate(m,k,f,x,y,z,more);
});
G__9876.cljs$core$IFn$_invoke$arity$variadic = G__9876__delegate;
return G__9876;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__9879 = null;
if (arguments.length > 6) {
var G__9880__i = 0, G__9880__a = new Array(arguments.length -  6);
while (G__9880__i < G__9880__a.length) {G__9880__a[G__9880__i] = arguments[G__9880__i + 6]; ++G__9880__i;}
G__9879 = new cljs.core.IndexedSeq(G__9880__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__9879);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__9881 = (ll - (5));
var G__9882 = r;
ll = G__9881;
ret = G__9882;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__9887 = cljs.core.pv_aget(node,(0));
var G__9888 = (level - (5));
node = G__9887;
level = G__9888;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__9889 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__9890 = (level - (5));
node = G__9889;
level = G__9890;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__9900 = init__$2;
var G__9901 = (j + i);
var G__9902 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9900,G__9901,G__9902) : f.call(null,G__9900,G__9901,G__9902));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__9913 = (j + (1));
var G__9914 = init__$3;
j = G__9913;
init__$2 = G__9914;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9903 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9903) : cljs.core.deref.call(null,G__9903));
} else {
var G__9915 = (i + len);
var G__9916 = init__$2;
i = G__9915;
init__$1 = G__9916;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4234__auto__ = self__.__hash;
if(!((h__4234__auto__ == null))){
return h__4234__auto__;
} else {
var h__4234__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4234__auto____$1;

return h__4234__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__9904 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__9904) : cljs.core.tv_editable_root.call(null,G__9904));
})(),(function (){var G__9905 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__9905) : cljs.core.tv_editable_tail.call(null,G__9905));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__9906 = init__$2;
var G__9907 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9906,G__9907) : f.call(null,G__9906,G__9907));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__9917 = (j + (1));
var G__9918 = init__$3;
j = G__9917;
init__$2 = G__9918;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9908 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9908) : cljs.core.deref.call(null,G__9908));
} else {
var G__9919 = (i + len);
var G__9920 = init__$2;
i = G__9919;
init__$1 = G__9920;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__9909 = coll__$1;
var G__9910 = cljs.core.first_array_for_longvec(coll__$1);
var G__9911 = (0);
var G__9912 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9909,G__9910,G__9911,G__9912) : cljs.core.chunked_seq.call(null,G__9909,G__9910,G__9911,G__9912));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4700__auto___9921 = len;
var i_9922 = (0);
while(true){
if((i_9922 < n__4700__auto___9921)){
(new_tail[i_9922] = (self__.tail[i_9922]));

var G__9923 = (i_9922 + (1));
i_9922 = G__9923;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__9924 = null;
var G__9924__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__9924__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__9924 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9924__2.call(this,self__,k);
case 3:
return G__9924__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9924.cljs$core$IFn$_invoke$arity$2 = G__9924__2;
G__9924.cljs$core$IFn$_invoke$arity$3 = G__9924__3;
return G__9924;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args9899){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9899)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__9925 = (i + (1));
var G__9926 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__9925;
out = G__9926;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__9927__i = 0, G__9927__a = new Array(arguments.length -  0);
while (G__9927__i < G__9927__a.length) {G__9927__a[G__9927__i] = arguments[G__9927__i + 0]; ++G__9927__i;}
  args = new cljs.core.IndexedSeq(G__9927__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__9928){
var args = cljs.core.seq(arglist__9928);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__9929 = self__.vec;
var G__9930 = self__.node;
var G__9931 = self__.i;
var G__9932 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9929,G__9930,G__9931,G__9932) : cljs.core.chunked_seq.call(null,G__9929,G__9930,G__9931,G__9932));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4234__auto__ = self__.__hash;
if(!((h__4234__auto__ == null))){
return h__4234__auto__;
} else {
var h__4234__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4234__auto____$1;

return h__4234__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__9933 = self__.vec;
var G__9934 = (self__.i + self__.off);
var G__9935 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__9933,G__9934,G__9935) : cljs.core.subvec.call(null,G__9933,G__9934,G__9935));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__9936 = self__.vec;
var G__9937 = (self__.i + self__.off);
var G__9938 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__9936,G__9937,G__9938) : cljs.core.subvec.call(null,G__9936,G__9937,G__9938));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__9939 = self__.vec;
var G__9940 = self__.node;
var G__9941 = self__.i;
var G__9942 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9939,G__9940,G__9941,G__9942) : cljs.core.chunked_seq.call(null,G__9939,G__9940,G__9941,G__9942));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__9943 = self__.vec;
var G__9944 = cljs.core.unchecked_array_for(self__.vec,end);
var G__9945 = end;
var G__9946 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9943,G__9944,G__9945,G__9946) : cljs.core.chunked_seq.call(null,G__9943,G__9944,G__9945,G__9946));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__9947 = self__.vec;
var G__9948 = self__.node;
var G__9949 = self__.i;
var G__9950 = self__.off;
var G__9951 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__9947,G__9948,G__9949,G__9950,G__9951) : cljs.core.chunked_seq.call(null,G__9947,G__9948,G__9949,G__9950,G__9951));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__9952 = self__.vec;
var G__9953 = cljs.core.unchecked_array_for(self__.vec,end);
var G__9954 = end;
var G__9955 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9952,G__9953,G__9954,G__9955) : cljs.core.chunked_seq.call(null,G__9952,G__9953,G__9954,G__9955));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__9957 = self__.meta;
var G__9958 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__9959 = self__.start;
var G__9960 = (function (){var x__4130__auto__ = self__.end;
var y__4131__auto__ = (v_pos + (1));
return ((x__4130__auto__ > y__4131__auto__) ? x__4130__auto__ : y__4131__auto__);
})();
var G__9961 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9957,G__9958,G__9959,G__9960,G__9961) : cljs.core.build_subvec.call(null,G__9957,G__9958,G__9959,G__9960,G__9961));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__9962 = self__.meta;
var G__9963 = self__.v;
var G__9964 = self__.start;
var G__9965 = (self__.end - (1));
var G__9966 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9962,G__9963,G__9964,G__9965,G__9966) : cljs.core.build_subvec.call(null,G__9962,G__9963,G__9964,G__9965,G__9966));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4234__auto__ = self__.__hash;
if(!((h__4234__auto__ == null))){
return h__4234__auto__;
} else {
var h__4234__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4234__auto____$1;

return h__4234__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__9968 = meta__$1;
var G__9969 = self__.v;
var G__9970 = self__.start;
var G__9971 = self__.end;
var G__9972 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9968,G__9969,G__9970,G__9971,G__9972) : cljs.core.build_subvec.call(null,G__9968,G__9969,G__9970,G__9971,G__9972));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__9973 = self__.meta;
var G__9974 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__9975 = self__.start;
var G__9976 = (self__.end + (1));
var G__9977 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9973,G__9974,G__9975,G__9976,G__9977) : cljs.core.build_subvec.call(null,G__9973,G__9974,G__9975,G__9976,G__9977));
});

cljs.core.Subvec.prototype.call = (function() {
var G__9978 = null;
var G__9978__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__9978__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__9978 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9978__2.call(this,self__,k);
case 3:
return G__9978__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9978.cljs$core$IFn$_invoke$arity$2 = G__9978__2;
G__9978.cljs$core$IFn$_invoke$arity$3 = G__9978__3;
return G__9978;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args9956){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9956)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__9979 = meta;
var G__9980 = v.v;
var G__9981 = (v.start + start);
var G__9982 = (v.start + end);
var G__9983 = __hash;
meta = G__9979;
v = G__9980;
start = G__9981;
end = G__9982;
__hash = G__9983;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj9990 = {};
return obj9990;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__9998 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__9999 = (level - (5));
node = G__9998;
level = G__9999;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__10003 = null;
var G__10003__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10003__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10003 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10003__2.call(this,self__,k);
case 3:
return G__10003__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10003.cljs$core$IFn$_invoke$arity$2 = G__10003__2;
G__10003.cljs$core$IFn$_invoke$arity$3 = G__10003__3;
return G__10003;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args10000){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10000)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4234__auto__ = self__.__hash;
if(!((h__4234__auto__ == null))){
return h__4234__auto__;
} else {
var h__4234__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4234__auto____$1;

return h__4234__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4234__auto__ = self__.__hash;
if(!((h__4234__auto__ == null))){
return h__4234__auto__;
} else {
var h__4234__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4234__auto____$1;

return h__4234__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3813__auto__ = self__.front;
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3813__auto__ = self__.rear;
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__10004 = (i + incr);
i = G__10004;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__10005 = (i + (1));
var G__10006 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__10005;
out = G__10006;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj10010 = {};
return obj10010;
})();
var l = ks.length;
var i_10011 = (0);
while(true){
if((i_10011 < l)){
var k_10012 = (ks[i_10011]);
(new_obj[k_10012] = (obj[k_10012]));

var G__10013 = (i_10011 + (1));
i_10011 = G__10013;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3801__auto__ = (function (){var G__10017 = k;
return goog.isString(G__10017);
})();
if(cljs.core.truth_(and__3801__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3801__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__10018 = init__$1;
var G__10019 = k;
var G__10020 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10018,G__10019,G__10020) : f.call(null,G__10018,G__10019,G__10020));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10021 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10021) : cljs.core.deref.call(null,G__10021));
} else {
var G__10027 = cljs.core.rest(keys__$1);
var G__10028 = init__$2;
keys__$1 = G__10027;
init__$1 = G__10028;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4234__auto__ = self__.__hash;
if(!((h__4234__auto__ == null))){
return h__4234__auto__;
} else {
var h__4234__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4234__auto____$1;

return h__4234__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3801__auto__ = (function (){var G__10023 = k;
return goog.isString(G__10023);
})();
if(cljs.core.truth_(and__3801__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3801__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__10024 = k;
return goog.isString(G__10024);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3801__auto__ = (function (){var G__10026 = k;
return goog.isString(G__10026);
})();
if(cljs.core.truth_(and__3801__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3801__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__10014_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__10014_SHARP_,(self__.strobj[p1__10014_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__10029 = null;
var G__10029__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10029__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10029 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10029__2.call(this,self__,k);
case 3:
return G__10029__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10029.cljs$core$IFn$_invoke$arity$2 = G__10029__2;
G__10029.cljs$core$IFn$_invoke$arity$3 = G__10029__3;
return G__10029;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args10015){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10015)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj10031 = {};
return obj10031;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__10032 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10032,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10032,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__10033 = (i + (2));
i = G__10033;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__10034 = (i + (2));
i = G__10034;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__10035 = (i + (2));
i = G__10035;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__10036 = (i + (2));
i = G__10036;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__10037 = (i + (2));
i = G__10037;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3813__auto__ = (function (){var G__10041 = k;
return goog.isString(G__10041);
})();
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_10042 = (0);
while(true){
if((i_10042 < l)){
(narr[i_10042] = (arr[i_10042]));

var G__10043 = (i_10042 + (1));
i_10042 = G__10043;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10045 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__10045) : cljs.core.keys.call(null,G__10045));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10046 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__10046) : cljs.core.vals.call(null,G__10046));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__10047 = cljs.core.seq(coll);
var chunk__10048 = null;
var count__10049 = (0);
var i__10050 = (0);
while(true){
if((i__10050 < count__10049)){
var vec__10051 = chunk__10048.cljs$core$IIndexed$_nth$arity$2(null,i__10050);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10051,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10051,(1),null);
var G__10052_10065 = v;
var G__10053_10066 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10052_10065,G__10053_10066) : f.call(null,G__10052_10065,G__10053_10066));

var G__10067 = seq__10047;
var G__10068 = chunk__10048;
var G__10069 = count__10049;
var G__10070 = (i__10050 + (1));
seq__10047 = G__10067;
chunk__10048 = G__10068;
count__10049 = G__10069;
i__10050 = G__10070;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10047);
if(temp__4126__auto__){
var seq__10047__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10047__$1)){
var c__4600__auto__ = cljs.core.chunk_first(seq__10047__$1);
var G__10071 = cljs.core.chunk_rest(seq__10047__$1);
var G__10072 = c__4600__auto__;
var G__10073 = cljs.core.count(c__4600__auto__);
var G__10074 = (0);
seq__10047 = G__10071;
chunk__10048 = G__10072;
count__10049 = G__10073;
i__10050 = G__10074;
continue;
} else {
var vec__10054 = cljs.core.first(seq__10047__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10054,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10054,(1),null);
var G__10055_10075 = v;
var G__10056_10076 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10055_10075,G__10056_10076) : f.call(null,G__10055_10075,G__10056_10076));

var G__10077 = cljs.core.next(seq__10047__$1);
var G__10078 = null;
var G__10079 = (0);
var G__10080 = (0);
seq__10047 = G__10077;
chunk__10048 = G__10078;
count__10049 = G__10079;
i__10050 = G__10080;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__10057 = init__$1;
var G__10058 = (self__.arr[i]);
var G__10059 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10057,G__10058,G__10059) : f.call(null,G__10057,G__10058,G__10059));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10060 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10060) : cljs.core.deref.call(null,G__10060));
} else {
var G__10081 = (i + (2));
var G__10082 = init__$2;
i = G__10081;
init__$1 = G__10082;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4234__auto__ = self__.__hash;
if(!((h__4234__auto__ == null))){
return h__4234__auto__;
} else {
var h__4234__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4234__auto____$1;

return h__4234__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__10061 = other;
if(G__10061){
var bit__4487__auto__ = (G__10061.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4487__auto__) || (G__10061.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__10083 = (i + (2));
i = G__10083;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj10063 = {};
return obj10063;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__10084 = (s + (2));
var G__10085 = d;
s = G__10084;
d = G__10085;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__10086 = (s + (2));
var G__10087 = (d + (2));
s = G__10086;
d = G__10087;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__10064 = cljs.core.aclone(self__.arr);
(G__10064[(idx + (1))] = v);

return G__10064;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__10088 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__10089 = cljs.core.next(es);
ret = G__10088;
es = G__10089;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__10090 = null;
var G__10090__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10090__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10090 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10090__2.call(this,self__,k);
case 3:
return G__10090__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10090.cljs$core$IFn$_invoke$arity$2 = G__10090__2;
G__10090.cljs$core$IFn$_invoke$arity$3 = G__10090__3;
return G__10090;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args10044){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10044)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__10091 = (i + (2));
var G__10092 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__10091;
ret = G__10092;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__10093_10101 = self__.arr;
G__10093_10101.pop();

G__10093_10101.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__10094 = self__.len;
var G__10095 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__10094,G__10095) : cljs.core.array__GT_transient_hash_map.call(null,G__10094,G__10095));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__10096 = o;
if(G__10096){
var bit__4494__auto__ = (G__10096.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4494__auto__) || (G__10096.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__10096.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__10096);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__10096);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__10097 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10097) : cljs.core.key.call(null,G__10097));
})(),(function (){var G__10098 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__10098) : cljs.core.val.call(null,G__10098));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__10102 = cljs.core.next(es);
var G__10103 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__10099 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10099) : cljs.core.key.call(null,G__10099));
})(),(function (){var G__10100 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__10100) : cljs.core.val.call(null,G__10100));
})());
es = G__10102;
tcoll__$2 = G__10103;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__10104 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__10105 = (i + (2));
out = G__10104;
i = G__10105;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__10108 = cljs.core.aclone(arr);
(G__10108[i] = a);

return G__10108;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__10109 = cljs.core.aclone(arr);
(G__10109[i] = a);

(G__10109[j] = b);

return G__10109;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__10114 = init__$1;
var G__10115 = k;
var G__10116 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10114,G__10115,G__10116) : f.call(null,G__10114,G__10115,G__10116));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10117 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10117) : cljs.core.deref.call(null,G__10117));
} else {
var G__10118 = (i + (2));
var G__10119 = init__$2;
i = G__10118;
init__$1 = G__10119;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__10120 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__10120) : cljs.core.create_inode_seq.call(null,G__10120));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_10134 = (0);
var j_10135 = (0);
while(true){
if((i_10134 < (32))){
if((((self__.bitmap >>> i_10134) & (1)) === (0))){
var G__10136 = (i_10134 + (1));
var G__10137 = j_10135;
i_10134 = G__10136;
j_10135 = G__10137;
continue;
} else {
(nodes[i_10134] = ((!(((self__.arr[j_10135]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_10135])),(self__.arr[j_10135]),(self__.arr[(j_10135 + (1))]),added_leaf_QMARK_):(self__.arr[(j_10135 + (1))])));

var G__10138 = (i_10134 + (1));
var G__10139 = (j_10135 + (2));
i_10134 = G__10138;
j_10135 = G__10139;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__10121 = edit__$1;
var G__10122 = (shift + (5));
var G__10123 = key_or_nil;
var G__10124 = val_or_node;
var G__10125 = hash;
var G__10126 = key;
var G__10127 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__10121,G__10122,G__10123,G__10124,G__10125,G__10126,G__10127) : cljs.core.create_node.call(null,G__10121,G__10122,G__10123,G__10124,G__10125,G__10126,G__10127));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_10140 = (0);
var j_10141 = (0);
while(true){
if((i_10140 < (32))){
if((((self__.bitmap >>> i_10140) & (1)) === (0))){
var G__10142 = (i_10140 + (1));
var G__10143 = j_10141;
i_10140 = G__10142;
j_10141 = G__10143;
continue;
} else {
(nodes[i_10140] = ((!(((self__.arr[j_10141]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_10141])),(self__.arr[j_10141]),(self__.arr[(j_10141 + (1))]),added_leaf_QMARK_):(self__.arr[(j_10141 + (1))])));

var G__10144 = (i_10140 + (1));
var G__10145 = (j_10141 + (2));
i_10140 = G__10144;
j_10141 = G__10145;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__10128 = (shift + (5));
var G__10129 = key_or_nil;
var G__10130 = val_or_node;
var G__10131 = hash;
var G__10132 = key;
var G__10133 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__10128,G__10129,G__10130,G__10131,G__10132,G__10133) : cljs.core.create_node.call(null,G__10128,G__10129,G__10130,G__10131,G__10132,G__10133));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__10146 = (i + (1));
var G__10147 = (j + (2));
var G__10148 = (bitmap | ((1) << i));
i = G__10146;
j = G__10147;
bitmap = G__10148;
continue;
} else {
var G__10149 = (i + (1));
var G__10150 = j;
var G__10151 = bitmap;
i = G__10149;
j = G__10150;
bitmap = G__10151;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__10152 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__10152) : cljs.core.create_array_node_seq.call(null,G__10152));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10153 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10153) : cljs.core.deref.call(null,G__10153));
} else {
var G__10154 = (i + (1));
var G__10155 = init__$2;
i = G__10154;
init__$1 = G__10155;
continue;
}
} else {
var G__10156 = (i + (1));
var G__10157 = init__$1;
i = G__10156;
init__$1 = G__10157;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__10158 = (i + (2));
i = G__10158;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__10159 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__10159) : cljs.core.create_inode_seq.call(null,G__10159));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4234__auto__ = self__.__hash;
if(!((h__4234__auto__ == null))){
return h__4234__auto__;
} else {
var h__4234__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4234__auto____$1;

return h__4234__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__10160 = self__.nodes;
var G__10161 = (self__.i + (2));
var G__10162 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__10160,G__10161,G__10162) : cljs.core.create_inode_seq.call(null,G__10160,G__10161,G__10162));
} else {
var G__10163 = self__.nodes;
var G__10164 = self__.i;
var G__10165 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__10163,G__10164,G__10165) : cljs.core.create_inode_seq.call(null,G__10163,G__10164,G__10165));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__10169 = (j + (2));
j = G__10169;
continue;
}
} else {
var G__10170 = (j + (2));
j = G__10170;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4234__auto__ = self__.__hash;
if(!((h__4234__auto__ == null))){
return h__4234__auto__;
} else {
var h__4234__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4234__auto____$1;

return h__4234__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__10171 = null;
var G__10172 = self__.nodes;
var G__10173 = self__.i;
var G__10174 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__10171,G__10172,G__10173,G__10174) : cljs.core.create_array_node_seq.call(null,G__10171,G__10172,G__10173,G__10174));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__10179 = (j + (1));
j = G__10179;
continue;
}
} else {
var G__10180 = (j + (1));
j = G__10180;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10182 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__10182) : cljs.core.keys.call(null,G__10182));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10183 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__10183) : cljs.core.vals.call(null,G__10183));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__10184 = cljs.core.seq(coll);
var chunk__10185 = null;
var count__10186 = (0);
var i__10187 = (0);
while(true){
if((i__10187 < count__10186)){
var vec__10188 = chunk__10185.cljs$core$IIndexed$_nth$arity$2(null,i__10187);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10188,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10188,(1),null);
var G__10189_10200 = v;
var G__10190_10201 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10189_10200,G__10190_10201) : f.call(null,G__10189_10200,G__10190_10201));

var G__10202 = seq__10184;
var G__10203 = chunk__10185;
var G__10204 = count__10186;
var G__10205 = (i__10187 + (1));
seq__10184 = G__10202;
chunk__10185 = G__10203;
count__10186 = G__10204;
i__10187 = G__10205;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10184);
if(temp__4126__auto__){
var seq__10184__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10184__$1)){
var c__4600__auto__ = cljs.core.chunk_first(seq__10184__$1);
var G__10206 = cljs.core.chunk_rest(seq__10184__$1);
var G__10207 = c__4600__auto__;
var G__10208 = cljs.core.count(c__4600__auto__);
var G__10209 = (0);
seq__10184 = G__10206;
chunk__10185 = G__10207;
count__10186 = G__10208;
i__10187 = G__10209;
continue;
} else {
var vec__10191 = cljs.core.first(seq__10184__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10191,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10191,(1),null);
var G__10192_10210 = v;
var G__10193_10211 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10192_10210,G__10193_10211) : f.call(null,G__10192_10210,G__10193_10211));

var G__10212 = cljs.core.next(seq__10184__$1);
var G__10213 = null;
var G__10214 = (0);
var G__10215 = (0);
seq__10184 = G__10212;
chunk__10185 = G__10213;
count__10186 = G__10214;
i__10187 = G__10215;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__10194 = init;
var G__10195 = null;
var G__10196 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10194,G__10195,G__10196) : f.call(null,G__10194,G__10195,G__10196));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__10197 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10197) : cljs.core.deref.call(null,G__10197));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4234__auto__ = self__.__hash;
if(!((h__4234__auto__ == null))){
return h__4234__auto__;
} else {
var h__4234__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4234__auto____$1;

return h__4234__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj10199 = {};
return obj10199;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__10216 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__10217 = cljs.core.next(es);
ret = G__10216;
es = G__10217;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__10218 = null;
var G__10218__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10218__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10218 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10218__2.call(this,self__,k);
case 3:
return G__10218__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10218.cljs$core$IFn$_invoke$arity$2 = G__10218__2;
G__10218.cljs$core$IFn$_invoke$arity$3 = G__10218__3;
return G__10218;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args10181){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10181)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__10219 = (i + (2));
var G__10220 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__10219;
ret = G__10220;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__10221 = (i + (1));
var G__10222 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__10221;
out = G__10222;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__10223 = o;
if(G__10223){
var bit__4494__auto__ = (G__10223.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4494__auto__) || (G__10223.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__10223.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__10223);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__10223);
}
})()){
return tcoll.assoc_BANG_((function (){var G__10224 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10224) : cljs.core.key.call(null,G__10224));
})(),(function (){var G__10225 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__10225) : cljs.core.val.call(null,G__10225));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__10228 = cljs.core.next(es);
var G__10229 = tcoll__$1.assoc_BANG_((function (){var G__10226 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10226) : cljs.core.key.call(null,G__10226));
})(),(function (){var G__10227 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__10227) : cljs.core.val.call(null,G__10227));
})());
es = G__10228;
tcoll__$1 = G__10229;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__10230 = ((ascending_QMARK_)?t.left:t.right);
var G__10231 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__10230;
stack__$1 = G__10231;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4234__auto__ = self__.__hash;
if(!((h__4234__auto__ == null))){
return h__4234__auto__;
} else {
var h__4234__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4234__auto____$1;

return h__4234__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__10244 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10244) : cljs.core.deref.call(null,G__10244));
} else {
var init__$2 = (function (){var G__10245 = init__$1;
var G__10246 = node.key;
var G__10247 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10245,G__10246,G__10247) : f.call(null,G__10245,G__10246,G__10247));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10248 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10248) : cljs.core.deref.call(null,G__10248));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__10249 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10249) : cljs.core.deref.call(null,G__10249));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4234__auto__ = self__.__hash;
if(!((h__4234__auto__ == null))){
return h__4234__auto__;
} else {
var h__4234__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4234__auto____$1;

return h__4234__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__10251 = null;
var G__10251__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10251__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10251 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10251__2.call(this,self__,k);
case 3:
return G__10251__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10251.cljs$core$IFn$_invoke$arity$2 = G__10251__2;
G__10251.cljs$core$IFn$_invoke$arity$3 = G__10251__3;
return G__10251;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args10250){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10250)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4234__auto__ = self__.__hash;
if(!((h__4234__auto__ == null))){
return h__4234__auto__;
} else {
var h__4234__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4234__auto____$1;

return h__4234__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__10253 = null;
var G__10253__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10253__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10253 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10253__2.call(this,self__,k);
case 3:
return G__10253__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10253.cljs$core$IFn$_invoke$arity$2 = G__10253__2;
G__10253.cljs$core$IFn$_invoke$arity$3 = G__10253__3;
return G__10253;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args10252){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10252)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__10266 = k;
var G__10267 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10266,G__10267) : comp.call(null,G__10266,G__10267));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__10286 = k;
var G__10287 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10286,G__10287) : comp.call(null,G__10286,G__10287));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__10298 = k;
var G__10299 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10298,G__10299) : comp.call(null,G__10298,G__10299));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__10301 = cljs.core.seq(coll);
var chunk__10302 = null;
var count__10303 = (0);
var i__10304 = (0);
while(true){
if((i__10304 < count__10303)){
var vec__10305 = chunk__10302.cljs$core$IIndexed$_nth$arity$2(null,i__10304);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10305,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10305,(1),null);
var G__10306_10318 = v;
var G__10307_10319 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10306_10318,G__10307_10319) : f.call(null,G__10306_10318,G__10307_10319));

var G__10320 = seq__10301;
var G__10321 = chunk__10302;
var G__10322 = count__10303;
var G__10323 = (i__10304 + (1));
seq__10301 = G__10320;
chunk__10302 = G__10321;
count__10303 = G__10322;
i__10304 = G__10323;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10301);
if(temp__4126__auto__){
var seq__10301__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10301__$1)){
var c__4600__auto__ = cljs.core.chunk_first(seq__10301__$1);
var G__10324 = cljs.core.chunk_rest(seq__10301__$1);
var G__10325 = c__4600__auto__;
var G__10326 = cljs.core.count(c__4600__auto__);
var G__10327 = (0);
seq__10301 = G__10324;
chunk__10302 = G__10325;
count__10303 = G__10326;
i__10304 = G__10327;
continue;
} else {
var vec__10308 = cljs.core.first(seq__10301__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10308,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10308,(1),null);
var G__10309_10328 = v;
var G__10310_10329 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10309_10328,G__10310_10329) : f.call(null,G__10309_10328,G__10310_10329));

var G__10330 = cljs.core.next(seq__10301__$1);
var G__10331 = null;
var G__10332 = (0);
var G__10333 = (0);
seq__10301 = G__10330;
chunk__10302 = G__10331;
count__10303 = G__10332;
i__10304 = G__10333;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10311 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__10311) : cljs.core.keys.call(null,G__10311));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10312 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__10312) : cljs.core.vals.call(null,G__10312));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__10313 = k;
var G__10314 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__10313,G__10314) : self__.comp.call(null,G__10313,G__10314));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__10334 = t.left;
t = G__10334;
continue;
} else {
var G__10335 = t.right;
t = G__10335;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4234__auto__ = self__.__hash;
if(!((h__4234__auto__ == null))){
return h__4234__auto__;
} else {
var h__4234__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4234__auto____$1;

return h__4234__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__10336 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__10337 = cljs.core.next(es);
ret = G__10336;
es = G__10337;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__10338 = null;
var G__10338__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10338__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10338 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10338__2.call(this,self__,k);
case 3:
return G__10338__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10338.cljs$core$IFn$_invoke$arity$2 = G__10338__2;
G__10338.cljs$core$IFn$_invoke$arity$3 = G__10338__3;
return G__10338;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args10300){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10300)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__10315 = k;
var G__10316 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__10315,G__10316) : self__.comp.call(null,G__10315,G__10316));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__10339 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__10340 = t.left;
stack = G__10339;
t = G__10340;
continue;
} else {
var G__10341 = stack;
var G__10342 = t.right;
stack = G__10341;
t = G__10342;
continue;
}
} else {
if((c > (0))){
var G__10343 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__10344 = t.right;
stack = G__10343;
t = G__10344;
continue;
} else {
var G__10345 = stack;
var G__10346 = t.left;
stack = G__10345;
t = G__10346;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__10317 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10317) : cljs.core.key.call(null,G__10317));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__10347 = cljs.core.nnext(in$);
var G__10348 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__10347;
out = G__10348;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__10349__i = 0, G__10349__a = new Array(arguments.length -  0);
while (G__10349__i < G__10349__a.length) {G__10349__a[G__10349__i] = arguments[G__10349__i + 0]; ++G__10349__i;}
  keyvals = new cljs.core.IndexedSeq(G__10349__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__10350){
var keyvals = cljs.core.seq(arglist__10350);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__10351__i = 0, G__10351__a = new Array(arguments.length -  0);
while (G__10351__i < G__10351__a.length) {G__10351__a[G__10351__i] = arguments[G__10351__i + 0]; ++G__10351__i;}
  keyvals = new cljs.core.IndexedSeq(G__10351__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__10352){
var keyvals = cljs.core.seq(arglist__10352);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj10356 = {};
return obj10356;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__10357 = cljs.core.nnext(kvs);
kvs = G__10357;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__10358__i = 0, G__10358__a = new Array(arguments.length -  0);
while (G__10358__i < G__10358__a.length) {G__10358__a[G__10358__i] = arguments[G__10358__i + 0]; ++G__10358__i;}
  keyvals = new cljs.core.IndexedSeq(G__10358__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__10359){
var keyvals = cljs.core.seq(arglist__10359);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__10360 = cljs.core.nnext(in$);
var G__10361 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__10360;
out = G__10361;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__10362__i = 0, G__10362__a = new Array(arguments.length -  0);
while (G__10362__i < G__10362__a.length) {G__10362__a[G__10362__i] = arguments[G__10362__i + 0]; ++G__10362__i;}
  keyvals = new cljs.core.IndexedSeq(G__10362__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__10363){
var keyvals = cljs.core.seq(arglist__10363);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__10364 = cljs.core.nnext(in$);
var G__10365 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__10364;
out = G__10365;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__10366__i = 0, G__10366__a = new Array(arguments.length -  1);
while (G__10366__i < G__10366__a.length) {G__10366__a[G__10366__i] = arguments[G__10366__i + 1]; ++G__10366__i;}
  keyvals = new cljs.core.IndexedSeq(G__10366__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__10367){
var comparator = cljs.core.first(arglist__10367);
var keyvals = cljs.core.rest(arglist__10367);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__10368 = self__.mseq;
if(G__10368){
var bit__4494__auto__ = (G__10368.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4494__auto__) || (G__10368.cljs$core$INext$)){
return true;
} else {
if((!G__10368.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10368);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10368);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__10369 = self__.mseq;
if(G__10369){
var bit__4494__auto__ = (G__10369.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4494__auto__) || (G__10369.cljs$core$INext$)){
return true;
} else {
if((!G__10369.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10369);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10369);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__10370 = self__.mseq;
if(G__10370){
var bit__4494__auto__ = (G__10370.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4494__auto__) || (G__10370.cljs$core$INext$)){
return true;
} else {
if((!G__10370.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10370);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10370);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__10371 = self__.mseq;
if(G__10371){
var bit__4494__auto__ = (G__10371.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4494__auto__) || (G__10371.cljs$core$INext$)){
return true;
} else {
if((!G__10371.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10371);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10371);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__10372_SHARP_,p2__10373_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3813__auto__ = p1__10372_SHARP_;
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__10373_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__10374__i = 0, G__10374__a = new Array(arguments.length -  0);
while (G__10374__i < G__10374__a.length) {G__10374__a[G__10374__i] = arguments[G__10374__i + 0]; ++G__10374__i;}
  maps = new cljs.core.IndexedSeq(G__10374__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__10375){
var maps = cljs.core.seq(arglist__10375);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10378 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10379 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10378,G__10379) : f.call(null,G__10378,G__10379));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3813__auto__ = m1;
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__10380__i = 0, G__10380__a = new Array(arguments.length -  1);
while (G__10380__i < G__10380__a.length) {G__10380__a[G__10380__i] = arguments[G__10380__i + 1]; ++G__10380__i;}
  maps = new cljs.core.IndexedSeq(G__10380__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__10381){
var f = cljs.core.first(arglist__10381);
var maps = cljs.core.rest(arglist__10381);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__10382 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__10383 = cljs.core.next(keys);
ret = G__10382;
keys = G__10383;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__10386 = cljs.core.seq(coll);
var chunk__10387 = null;
var count__10388 = (0);
var i__10389 = (0);
while(true){
if((i__10389 < count__10388)){
var vec__10390 = chunk__10387.cljs$core$IIndexed$_nth$arity$2(null,i__10389);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10390,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10390,(1),null);
var G__10391_10396 = v;
var G__10392_10397 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10391_10396,G__10392_10397) : f.call(null,G__10391_10396,G__10392_10397));

var G__10398 = seq__10386;
var G__10399 = chunk__10387;
var G__10400 = count__10388;
var G__10401 = (i__10389 + (1));
seq__10386 = G__10398;
chunk__10387 = G__10399;
count__10388 = G__10400;
i__10389 = G__10401;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10386);
if(temp__4126__auto__){
var seq__10386__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10386__$1)){
var c__4600__auto__ = cljs.core.chunk_first(seq__10386__$1);
var G__10402 = cljs.core.chunk_rest(seq__10386__$1);
var G__10403 = c__4600__auto__;
var G__10404 = cljs.core.count(c__4600__auto__);
var G__10405 = (0);
seq__10386 = G__10402;
chunk__10387 = G__10403;
count__10388 = G__10404;
i__10389 = G__10405;
continue;
} else {
var vec__10393 = cljs.core.first(seq__10386__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10393,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10393,(1),null);
var G__10394_10406 = v;
var G__10395_10407 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10394_10406,G__10395_10407) : f.call(null,G__10394_10406,G__10395_10407));

var G__10408 = cljs.core.next(seq__10386__$1);
var G__10409 = null;
var G__10410 = (0);
var G__10411 = (0);
seq__10386 = G__10408;
chunk__10387 = G__10409;
count__10388 = G__10410;
i__10389 = G__10411;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4234__auto__ = self__.__hash;
if(!((h__4234__auto__ == null))){
return h__4234__auto__;
} else {
var h__4234__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4234__auto____$1;

return h__4234__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__10384_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__10384_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__10412 = null;
var G__10412__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10412__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10412 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10412__2.call(this,self__,k);
case 3:
return G__10412__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10412.cljs$core$IFn$_invoke$arity$2 = G__10412__2;
G__10412.cljs$core$IFn$_invoke$arity$3 = G__10412__3;
return G__10412;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args10385){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10385)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__10413 = (i + (1));
var G__10414 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__10413;
out = G__10414;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__10415 = (i + (1));
var G__10416 = cljs.core._conj_BANG_(out,(items[i]));
i = G__10415;
out = G__10416;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__10418 = null;
var G__10418__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__10418__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__10418 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10418__2.call(this,self__,k);
case 3:
return G__10418__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10418.cljs$core$IFn$_invoke$arity$2 = G__10418__2;
G__10418.cljs$core$IFn$_invoke$arity$3 = G__10418__3;
return G__10418;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args10417){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10417)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__10421 = cljs.core.seq(coll);
var chunk__10422 = null;
var count__10423 = (0);
var i__10424 = (0);
while(true){
if((i__10424 < count__10423)){
var vec__10425 = chunk__10422.cljs$core$IIndexed$_nth$arity$2(null,i__10424);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10425,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10425,(1),null);
var G__10426_10431 = v;
var G__10427_10432 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10426_10431,G__10427_10432) : f.call(null,G__10426_10431,G__10427_10432));

var G__10433 = seq__10421;
var G__10434 = chunk__10422;
var G__10435 = count__10423;
var G__10436 = (i__10424 + (1));
seq__10421 = G__10433;
chunk__10422 = G__10434;
count__10423 = G__10435;
i__10424 = G__10436;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10421);
if(temp__4126__auto__){
var seq__10421__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10421__$1)){
var c__4600__auto__ = cljs.core.chunk_first(seq__10421__$1);
var G__10437 = cljs.core.chunk_rest(seq__10421__$1);
var G__10438 = c__4600__auto__;
var G__10439 = cljs.core.count(c__4600__auto__);
var G__10440 = (0);
seq__10421 = G__10437;
chunk__10422 = G__10438;
count__10423 = G__10439;
i__10424 = G__10440;
continue;
} else {
var vec__10428 = cljs.core.first(seq__10421__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10428,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10428,(1),null);
var G__10429_10441 = v;
var G__10430_10442 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10429_10441,G__10430_10442) : f.call(null,G__10429_10441,G__10430_10442));

var G__10443 = cljs.core.next(seq__10421__$1);
var G__10444 = null;
var G__10445 = (0);
var G__10446 = (0);
seq__10421 = G__10443;
chunk__10422 = G__10444;
count__10423 = G__10445;
i__10424 = G__10446;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4234__auto__ = self__.__hash;
if(!((h__4234__auto__ == null))){
return h__4234__auto__;
} else {
var h__4234__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4234__auto____$1;

return h__4234__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__10419_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__10419_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__10447 = null;
var G__10447__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10447__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10447 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10447__2.call(this,self__,k);
case 3:
return G__10447__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10447.cljs$core$IFn$_invoke$arity$2 = G__10447__2;
G__10447.cljs$core$IFn$_invoke$arity$3 = G__10447__3;
return G__10447;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args10420){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10420)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4694__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4694__auto__.length)){
var G__10448 = (i + (1));
var G__10449 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__10448;
res = G__10449;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__10450 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__10451 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__10450;
out = G__10451;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__10452__delegate = function (keys){
return cljs.core.set(keys);
};
var G__10452 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__10453__i = 0, G__10453__a = new Array(arguments.length -  0);
while (G__10453__i < G__10453__a.length) {G__10453__a[G__10453__i] = arguments[G__10453__i + 0]; ++G__10453__i;}
  keys = new cljs.core.IndexedSeq(G__10453__a,0);
} 
return G__10452__delegate.call(this,keys);};
G__10452.cljs$lang$maxFixedArity = 0;
G__10452.cljs$lang$applyTo = (function (arglist__10454){
var keys = cljs.core.seq(arglist__10454);
return G__10452__delegate(keys);
});
G__10452.cljs$core$IFn$_invoke$arity$variadic = G__10452__delegate;
return G__10452;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__10455 = null;
if (arguments.length > 0) {
var G__10456__i = 0, G__10456__a = new Array(arguments.length -  0);
while (G__10456__i < G__10456__a.length) {G__10456__a[G__10456__i] = arguments[G__10456__i + 0]; ++G__10456__i;}
G__10455 = new cljs.core.IndexedSeq(G__10456__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__10455);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__10457__i = 0, G__10457__a = new Array(arguments.length -  0);
while (G__10457__i < G__10457__a.length) {G__10457__a[G__10457__i] = arguments[G__10457__i + 0]; ++G__10457__i;}
  keys = new cljs.core.IndexedSeq(G__10457__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__10458){
var keys = cljs.core.seq(arglist__10458);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__10459__i = 0, G__10459__a = new Array(arguments.length -  1);
while (G__10459__i < G__10459__a.length) {G__10459__a[G__10459__i] = arguments[G__10459__i + 1]; ++G__10459__i;}
  keys = new cljs.core.IndexedSeq(G__10459__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__10460){
var comparator = cljs.core.first(arglist__10460);
var keys = cljs.core.rest(arglist__10460);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__10461_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__10461_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__10461_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__10462_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__10462_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__10462_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__10483 = null;
var G__10483__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10483__1 = (function (result){
var G__10473 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10473) : rf.call(null,G__10473));
});
var G__10483__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__10474 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10474) : cljs.core.deref.call(null,G__10474));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__10475 = result;
var G__10476 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10475,G__10476) : rf.call(null,G__10475,G__10476));
}
});
G__10483 = function(result,input){
switch(arguments.length){
case 0:
return G__10483__0.call(this);
case 1:
return G__10483__1.call(this,result);
case 2:
return G__10483__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10483.cljs$core$IFn$_invoke$arity$0 = G__10483__0;
G__10483.cljs$core$IFn$_invoke$arity$1 = G__10483__1;
G__10483.cljs$core$IFn$_invoke$arity$2 = G__10483__2;
return G__10483;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__10481,seen__$1){
while(true){
var vec__10482 = p__10481;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10482,(0),null);
var xs__$1 = vec__10482;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__10484 = cljs.core.rest(s);
var G__10485 = seen__$1;
p__10481 = G__10484;
seen__$1 = G__10485;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__10486 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__10487 = cljs.core.next(s__$1);
ret = G__10486;
s__$1 = G__10487;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__10489 = x;
if(G__10489){
var bit__4487__auto__ = (G__10489.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4487__auto__) || (G__10489.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__10490 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__10491 = cljs.core.next(ks);
var G__10492 = cljs.core.next(vs);
map = G__10490;
ks = G__10491;
vs = G__10492;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__10503 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__10503) : k.call(null,G__10503));
})() > (function (){var G__10504 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__10504) : k.call(null,G__10504));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__10505__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__10493_SHARP_,p2__10494_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__10493_SHARP_,p2__10494_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__10505 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__10506__i = 0, G__10506__a = new Array(arguments.length -  3);
while (G__10506__i < G__10506__a.length) {G__10506__a[G__10506__i] = arguments[G__10506__i + 3]; ++G__10506__i;}
  more = new cljs.core.IndexedSeq(G__10506__a,0);
} 
return G__10505__delegate.call(this,k,x,y,more);};
G__10505.cljs$lang$maxFixedArity = 3;
G__10505.cljs$lang$applyTo = (function (arglist__10507){
var k = cljs.core.first(arglist__10507);
arglist__10507 = cljs.core.next(arglist__10507);
var x = cljs.core.first(arglist__10507);
arglist__10507 = cljs.core.next(arglist__10507);
var y = cljs.core.first(arglist__10507);
var more = cljs.core.rest(arglist__10507);
return G__10505__delegate(k,x,y,more);
});
G__10505.cljs$core$IFn$_invoke$arity$variadic = G__10505__delegate;
return G__10505;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__10508 = null;
if (arguments.length > 3) {
var G__10509__i = 0, G__10509__a = new Array(arguments.length -  3);
while (G__10509__i < G__10509__a.length) {G__10509__a[G__10509__i] = arguments[G__10509__i + 3]; ++G__10509__i;}
G__10508 = new cljs.core.IndexedSeq(G__10509__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__10508);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__10520 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__10520) : k.call(null,G__10520));
})() < (function (){var G__10521 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__10521) : k.call(null,G__10521));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__10522__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__10510_SHARP_,p2__10511_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__10510_SHARP_,p2__10511_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__10522 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__10523__i = 0, G__10523__a = new Array(arguments.length -  3);
while (G__10523__i < G__10523__a.length) {G__10523__a[G__10523__i] = arguments[G__10523__i + 3]; ++G__10523__i;}
  more = new cljs.core.IndexedSeq(G__10523__a,0);
} 
return G__10522__delegate.call(this,k,x,y,more);};
G__10522.cljs$lang$maxFixedArity = 3;
G__10522.cljs$lang$applyTo = (function (arglist__10524){
var k = cljs.core.first(arglist__10524);
arglist__10524 = cljs.core.next(arglist__10524);
var x = cljs.core.first(arglist__10524);
arglist__10524 = cljs.core.next(arglist__10524);
var y = cljs.core.first(arglist__10524);
var more = cljs.core.rest(arglist__10524);
return G__10522__delegate(k,x,y,more);
});
G__10522.cljs$core$IFn$_invoke$arity$variadic = G__10522__delegate;
return G__10522;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__10525 = null;
if (arguments.length > 3) {
var G__10526__i = 0, G__10526__a = new Array(arguments.length -  3);
while (G__10526__i < G__10526__a.length) {G__10526__a[G__10526__i] = arguments[G__10526__i + 3]; ++G__10526__i;}
G__10525 = new cljs.core.IndexedSeq(G__10526__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__10525);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__10543 = null;
var G__10543__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10543__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__10538 = result;
var G__10539 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10538,G__10539) : rf.call(null,G__10538,G__10539));
})());
})());
var G__10540 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10540) : rf.call(null,G__10540));
});
var G__10543__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__10541 = result;
var G__10542 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10541,G__10542) : rf.call(null,G__10541,G__10542));
} else {
return result;
}
});
G__10543 = function(result,input){
switch(arguments.length){
case 0:
return G__10543__0.call(this);
case 1:
return G__10543__1.call(this,result);
case 2:
return G__10543__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10543.cljs$core$IFn$_invoke$arity$0 = G__10543__0;
G__10543.cljs$core$IFn$_invoke$arity$1 = G__10543__1;
G__10543.cljs$core$IFn$_invoke$arity$2 = G__10543__2;
return G__10543;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__10556 = null;
var G__10556__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10556__1 = (function (result){
var G__10551 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10551) : rf.call(null,G__10551));
});
var G__10556__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__10552 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10552) : pred.call(null,G__10552));
})())){
var G__10553 = result;
var G__10554 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10553,G__10554) : rf.call(null,G__10553,G__10554));
} else {
return cljs.core.reduced(result);
}
});
G__10556 = function(result,input){
switch(arguments.length){
case 0:
return G__10556__0.call(this);
case 1:
return G__10556__1.call(this,result);
case 2:
return G__10556__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10556.cljs$core$IFn$_invoke$arity$0 = G__10556__0;
G__10556.cljs$core$IFn$_invoke$arity$1 = G__10556__1;
G__10556.cljs$core$IFn$_invoke$arity$2 = G__10556__2;
return G__10556;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__10555 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10555) : pred.call(null,G__10555));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__10561 = (function (){var G__10563 = cljs.core._entry_key(sc,e);
var G__10564 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10563,G__10564) : comp.call(null,G__10563,G__10564));
})();
var G__10562 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__10561,G__10562) : test.call(null,G__10561,G__10562));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__10568 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10568,(0),null);
var s = vec__10568;
if(cljs.core.truth_((function (){var G__10569 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__10569) : include.call(null,G__10569));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__10570 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10570,(0),null);
var s = vec__10570;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__10574 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10574,(0),null);
var s = vec__10574;
if(cljs.core.truth_((function (){var G__10575 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__10575) : include.call(null,G__10575));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__10576 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10576,(0),null);
var s = vec__10576;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__10577 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__10577) : Math.ceil.call(null,G__10577));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4234__auto__ = self__.__hash;
if(!((h__4234__auto__ == null))){
return h__4234__auto__;
} else {
var h__4234__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4234__auto____$1;

return h__4234__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__10578 = ret;
var G__10579 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10578,G__10579) : f.call(null,G__10578,G__10579));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__10580 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10580) : cljs.core.deref.call(null,G__10580));
} else {
var G__10581 = (i + self__.step);
var G__10582 = ret__$1;
i = G__10581;
ret = G__10582;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__10600 = null;
var G__10600__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10600__1 = (function (result){
var G__10597 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10597) : rf.call(null,G__10597));
});
var G__10600__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__10598 = result;
var G__10599 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10598,G__10599) : rf.call(null,G__10598,G__10599));
} else {
return result;
}
});
G__10600 = function(result,input){
switch(arguments.length){
case 0:
return G__10600__0.call(this);
case 1:
return G__10600__1.call(this,result);
case 2:
return G__10600__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10600.cljs$core$IFn$_invoke$arity$0 = G__10600__0;
G__10600.cljs$core$IFn$_invoke$arity$1 = G__10600__1;
G__10600.cljs$core$IFn$_invoke$arity$2 = G__10600__2;
return G__10600;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__10622 = null;
var G__10622__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10622__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__10613 = result;
var G__10614 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10613,G__10614) : rf.call(null,G__10613,G__10614));
})());
})());
var G__10615 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10615) : rf.call(null,G__10615));
});
var G__10622__2 = (function (result,input){
var pval = (function (){var G__10616 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10616) : cljs.core.deref.call(null,G__10616));
})();
var val = (function (){var G__10617 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10617) : f.call(null,G__10617));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__10618 = result;
var G__10619 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10618,G__10619) : rf.call(null,G__10618,G__10619));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__10622 = function(result,input){
switch(arguments.length){
case 0:
return G__10622__0.call(this);
case 1:
return G__10622__1.call(this,result);
case 2:
return G__10622__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10622.cljs$core$IFn$_invoke$arity$0 = G__10622__0;
G__10622.cljs$core$IFn$_invoke$arity$1 = G__10622__1;
G__10622.cljs$core$IFn$_invoke$arity$2 = G__10622__2;
return G__10622;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__10620 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10620) : f.call(null,G__10620));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__10601_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__10621 = p1__10601_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10621) : f.call(null,G__10621));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__10631 = init;
var G__10632 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10631,G__10632) : f.call(null,G__10631,G__10632));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__10727 = null;
var G__10727__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__10727__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10685 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10685) : f.call(null,G__10685));
})()],null));
});
var G__10727__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10686 = x;
var G__10687 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10686,G__10687) : f.call(null,G__10686,G__10687));
})()],null));
});
var G__10727__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10688 = x;
var G__10689 = y;
var G__10690 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10688,G__10689,G__10690) : f.call(null,G__10688,G__10689,G__10690));
})()],null));
});
var G__10727__4 = (function() { 
var G__10728__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__10728 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10729__i = 0, G__10729__a = new Array(arguments.length -  3);
while (G__10729__i < G__10729__a.length) {G__10729__a[G__10729__i] = arguments[G__10729__i + 3]; ++G__10729__i;}
  args = new cljs.core.IndexedSeq(G__10729__a,0);
} 
return G__10728__delegate.call(this,x,y,z,args);};
G__10728.cljs$lang$maxFixedArity = 3;
G__10728.cljs$lang$applyTo = (function (arglist__10730){
var x = cljs.core.first(arglist__10730);
arglist__10730 = cljs.core.next(arglist__10730);
var y = cljs.core.first(arglist__10730);
arglist__10730 = cljs.core.next(arglist__10730);
var z = cljs.core.first(arglist__10730);
var args = cljs.core.rest(arglist__10730);
return G__10728__delegate(x,y,z,args);
});
G__10728.cljs$core$IFn$_invoke$arity$variadic = G__10728__delegate;
return G__10728;
})()
;
G__10727 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__10727__0.call(this);
case 1:
return G__10727__1.call(this,x);
case 2:
return G__10727__2.call(this,x,y);
case 3:
return G__10727__3.call(this,x,y,z);
default:
var G__10731 = null;
if (arguments.length > 3) {
var G__10732__i = 0, G__10732__a = new Array(arguments.length -  3);
while (G__10732__i < G__10732__a.length) {G__10732__a[G__10732__i] = arguments[G__10732__i + 3]; ++G__10732__i;}
G__10731 = new cljs.core.IndexedSeq(G__10732__a,0);
}
return G__10727__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10731);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10727.cljs$lang$maxFixedArity = 3;
G__10727.cljs$lang$applyTo = G__10727__4.cljs$lang$applyTo;
G__10727.cljs$core$IFn$_invoke$arity$0 = G__10727__0;
G__10727.cljs$core$IFn$_invoke$arity$1 = G__10727__1;
G__10727.cljs$core$IFn$_invoke$arity$2 = G__10727__2;
G__10727.cljs$core$IFn$_invoke$arity$3 = G__10727__3;
G__10727.cljs$core$IFn$_invoke$arity$variadic = G__10727__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10727;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__10733 = null;
var G__10733__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__10733__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10691 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10691) : f.call(null,G__10691));
})(),(function (){var G__10692 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__10692) : g.call(null,G__10692));
})()],null));
});
var G__10733__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10693 = x;
var G__10694 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10693,G__10694) : f.call(null,G__10693,G__10694));
})(),(function (){var G__10695 = x;
var G__10696 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__10695,G__10696) : g.call(null,G__10695,G__10696));
})()],null));
});
var G__10733__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10697 = x;
var G__10698 = y;
var G__10699 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10697,G__10698,G__10699) : f.call(null,G__10697,G__10698,G__10699));
})(),(function (){var G__10700 = x;
var G__10701 = y;
var G__10702 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__10700,G__10701,G__10702) : g.call(null,G__10700,G__10701,G__10702));
})()],null));
});
var G__10733__4 = (function() { 
var G__10734__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__10734 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10735__i = 0, G__10735__a = new Array(arguments.length -  3);
while (G__10735__i < G__10735__a.length) {G__10735__a[G__10735__i] = arguments[G__10735__i + 3]; ++G__10735__i;}
  args = new cljs.core.IndexedSeq(G__10735__a,0);
} 
return G__10734__delegate.call(this,x,y,z,args);};
G__10734.cljs$lang$maxFixedArity = 3;
G__10734.cljs$lang$applyTo = (function (arglist__10736){
var x = cljs.core.first(arglist__10736);
arglist__10736 = cljs.core.next(arglist__10736);
var y = cljs.core.first(arglist__10736);
arglist__10736 = cljs.core.next(arglist__10736);
var z = cljs.core.first(arglist__10736);
var args = cljs.core.rest(arglist__10736);
return G__10734__delegate(x,y,z,args);
});
G__10734.cljs$core$IFn$_invoke$arity$variadic = G__10734__delegate;
return G__10734;
})()
;
G__10733 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__10733__0.call(this);
case 1:
return G__10733__1.call(this,x);
case 2:
return G__10733__2.call(this,x,y);
case 3:
return G__10733__3.call(this,x,y,z);
default:
var G__10737 = null;
if (arguments.length > 3) {
var G__10738__i = 0, G__10738__a = new Array(arguments.length -  3);
while (G__10738__i < G__10738__a.length) {G__10738__a[G__10738__i] = arguments[G__10738__i + 3]; ++G__10738__i;}
G__10737 = new cljs.core.IndexedSeq(G__10738__a,0);
}
return G__10733__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10737);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10733.cljs$lang$maxFixedArity = 3;
G__10733.cljs$lang$applyTo = G__10733__4.cljs$lang$applyTo;
G__10733.cljs$core$IFn$_invoke$arity$0 = G__10733__0;
G__10733.cljs$core$IFn$_invoke$arity$1 = G__10733__1;
G__10733.cljs$core$IFn$_invoke$arity$2 = G__10733__2;
G__10733.cljs$core$IFn$_invoke$arity$3 = G__10733__3;
G__10733.cljs$core$IFn$_invoke$arity$variadic = G__10733__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10733;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__10739 = null;
var G__10739__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__10739__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10703 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10703) : f.call(null,G__10703));
})(),(function (){var G__10704 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__10704) : g.call(null,G__10704));
})(),(function (){var G__10705 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__10705) : h.call(null,G__10705));
})()],null));
});
var G__10739__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10706 = x;
var G__10707 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10706,G__10707) : f.call(null,G__10706,G__10707));
})(),(function (){var G__10708 = x;
var G__10709 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__10708,G__10709) : g.call(null,G__10708,G__10709));
})(),(function (){var G__10710 = x;
var G__10711 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__10710,G__10711) : h.call(null,G__10710,G__10711));
})()],null));
});
var G__10739__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10712 = x;
var G__10713 = y;
var G__10714 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10712,G__10713,G__10714) : f.call(null,G__10712,G__10713,G__10714));
})(),(function (){var G__10715 = x;
var G__10716 = y;
var G__10717 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__10715,G__10716,G__10717) : g.call(null,G__10715,G__10716,G__10717));
})(),(function (){var G__10718 = x;
var G__10719 = y;
var G__10720 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__10718,G__10719,G__10720) : h.call(null,G__10718,G__10719,G__10720));
})()],null));
});
var G__10739__4 = (function() { 
var G__10740__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__10740 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10741__i = 0, G__10741__a = new Array(arguments.length -  3);
while (G__10741__i < G__10741__a.length) {G__10741__a[G__10741__i] = arguments[G__10741__i + 3]; ++G__10741__i;}
  args = new cljs.core.IndexedSeq(G__10741__a,0);
} 
return G__10740__delegate.call(this,x,y,z,args);};
G__10740.cljs$lang$maxFixedArity = 3;
G__10740.cljs$lang$applyTo = (function (arglist__10742){
var x = cljs.core.first(arglist__10742);
arglist__10742 = cljs.core.next(arglist__10742);
var y = cljs.core.first(arglist__10742);
arglist__10742 = cljs.core.next(arglist__10742);
var z = cljs.core.first(arglist__10742);
var args = cljs.core.rest(arglist__10742);
return G__10740__delegate(x,y,z,args);
});
G__10740.cljs$core$IFn$_invoke$arity$variadic = G__10740__delegate;
return G__10740;
})()
;
G__10739 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__10739__0.call(this);
case 1:
return G__10739__1.call(this,x);
case 2:
return G__10739__2.call(this,x,y);
case 3:
return G__10739__3.call(this,x,y,z);
default:
var G__10743 = null;
if (arguments.length > 3) {
var G__10744__i = 0, G__10744__a = new Array(arguments.length -  3);
while (G__10744__i < G__10744__a.length) {G__10744__a[G__10744__i] = arguments[G__10744__i + 3]; ++G__10744__i;}
G__10743 = new cljs.core.IndexedSeq(G__10744__a,0);
}
return G__10739__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10743);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10739.cljs$lang$maxFixedArity = 3;
G__10739.cljs$lang$applyTo = G__10739__4.cljs$lang$applyTo;
G__10739.cljs$core$IFn$_invoke$arity$0 = G__10739__0;
G__10739.cljs$core$IFn$_invoke$arity$1 = G__10739__1;
G__10739.cljs$core$IFn$_invoke$arity$2 = G__10739__2;
G__10739.cljs$core$IFn$_invoke$arity$3 = G__10739__3;
G__10739.cljs$core$IFn$_invoke$arity$variadic = G__10739__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10739;
})()
});
var juxt__4 = (function() { 
var G__10745__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__10746 = null;
var G__10746__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10633_SHARP_,p2__10634_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10633_SHARP_,(function (){return (p2__10634_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__10634_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__10634_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__10746__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10635_SHARP_,p2__10636_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10635_SHARP_,(function (){var G__10721 = x;
return (p2__10636_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__10636_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10721) : p2__10636_SHARP_.call(null,G__10721));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__10746__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10637_SHARP_,p2__10638_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10637_SHARP_,(function (){var G__10722 = x;
var G__10723 = y;
return (p2__10638_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__10638_SHARP_.cljs$core$IFn$_invoke$arity$2(G__10722,G__10723) : p2__10638_SHARP_.call(null,G__10722,G__10723));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__10746__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10639_SHARP_,p2__10640_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10639_SHARP_,(function (){var G__10724 = x;
var G__10725 = y;
var G__10726 = z;
return (p2__10640_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__10640_SHARP_.cljs$core$IFn$_invoke$arity$3(G__10724,G__10725,G__10726) : p2__10640_SHARP_.call(null,G__10724,G__10725,G__10726));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__10746__4 = (function() { 
var G__10747__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10641_SHARP_,p2__10642_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10641_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__10642_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__10747 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10748__i = 0, G__10748__a = new Array(arguments.length -  3);
while (G__10748__i < G__10748__a.length) {G__10748__a[G__10748__i] = arguments[G__10748__i + 3]; ++G__10748__i;}
  args = new cljs.core.IndexedSeq(G__10748__a,0);
} 
return G__10747__delegate.call(this,x,y,z,args);};
G__10747.cljs$lang$maxFixedArity = 3;
G__10747.cljs$lang$applyTo = (function (arglist__10749){
var x = cljs.core.first(arglist__10749);
arglist__10749 = cljs.core.next(arglist__10749);
var y = cljs.core.first(arglist__10749);
arglist__10749 = cljs.core.next(arglist__10749);
var z = cljs.core.first(arglist__10749);
var args = cljs.core.rest(arglist__10749);
return G__10747__delegate(x,y,z,args);
});
G__10747.cljs$core$IFn$_invoke$arity$variadic = G__10747__delegate;
return G__10747;
})()
;
G__10746 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__10746__0.call(this);
case 1:
return G__10746__1.call(this,x);
case 2:
return G__10746__2.call(this,x,y);
case 3:
return G__10746__3.call(this,x,y,z);
default:
var G__10750 = null;
if (arguments.length > 3) {
var G__10751__i = 0, G__10751__a = new Array(arguments.length -  3);
while (G__10751__i < G__10751__a.length) {G__10751__a[G__10751__i] = arguments[G__10751__i + 3]; ++G__10751__i;}
G__10750 = new cljs.core.IndexedSeq(G__10751__a,0);
}
return G__10746__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10750);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10746.cljs$lang$maxFixedArity = 3;
G__10746.cljs$lang$applyTo = G__10746__4.cljs$lang$applyTo;
G__10746.cljs$core$IFn$_invoke$arity$0 = G__10746__0;
G__10746.cljs$core$IFn$_invoke$arity$1 = G__10746__1;
G__10746.cljs$core$IFn$_invoke$arity$2 = G__10746__2;
G__10746.cljs$core$IFn$_invoke$arity$3 = G__10746__3;
G__10746.cljs$core$IFn$_invoke$arity$variadic = G__10746__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10746;
})()
;})(fs__$1))
};
var G__10745 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__10752__i = 0, G__10752__a = new Array(arguments.length -  3);
while (G__10752__i < G__10752__a.length) {G__10752__a[G__10752__i] = arguments[G__10752__i + 3]; ++G__10752__i;}
  fs = new cljs.core.IndexedSeq(G__10752__a,0);
} 
return G__10745__delegate.call(this,f,g,h,fs);};
G__10745.cljs$lang$maxFixedArity = 3;
G__10745.cljs$lang$applyTo = (function (arglist__10753){
var f = cljs.core.first(arglist__10753);
arglist__10753 = cljs.core.next(arglist__10753);
var g = cljs.core.first(arglist__10753);
arglist__10753 = cljs.core.next(arglist__10753);
var h = cljs.core.first(arglist__10753);
var fs = cljs.core.rest(arglist__10753);
return G__10745__delegate(f,g,h,fs);
});
G__10745.cljs$core$IFn$_invoke$arity$variadic = G__10745__delegate;
return G__10745;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__10754 = null;
if (arguments.length > 3) {
var G__10755__i = 0, G__10755__a = new Array(arguments.length -  3);
while (G__10755__i < G__10755__a.length) {G__10755__a[G__10755__i] = arguments[G__10755__i + 3]; ++G__10755__i;}
G__10754 = new cljs.core.IndexedSeq(G__10755__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__10754);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__10756 = cljs.core.next(coll);
coll = G__10756;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__10757 = (n - (1));
var G__10758 = cljs.core.next(coll);
n = G__10757;
coll = G__10758;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__10762 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10762,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10762,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10762,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_10770 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__3813__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__10771_10777 = cljs.core.first(coll);
var G__10772_10778 = writer;
var G__10773_10779 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10771_10777,G__10772_10778,G__10773_10779) : print_one.call(null,G__10771_10777,G__10772_10778,G__10773_10779));
} else {
}

var coll_10780__$1 = cljs.core.next(coll);
var n_10781 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_10780__$1) && (((n_10781 == null)) || (!((n_10781 === (0)))))){
cljs.core._write(writer,sep);

var G__10774_10782 = cljs.core.first(coll_10780__$1);
var G__10775_10783 = writer;
var G__10776_10784 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10774_10782,G__10775_10783,G__10776_10784) : print_one.call(null,G__10774_10782,G__10775_10783,G__10776_10784));

var G__10785 = cljs.core.next(coll_10780__$1);
var G__10786 = (n_10781 - (1));
coll_10780__$1 = G__10785;
n_10781 = G__10786;
continue;
} else {
if((cljs.core.seq(coll_10780__$1)) && ((n_10781 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__3813__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_10770;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__10791 = cljs.core.seq(ss);
var chunk__10792 = null;
var count__10793 = (0);
var i__10794 = (0);
while(true){
if((i__10794 < count__10793)){
var s = chunk__10792.cljs$core$IIndexed$_nth$arity$2(null,i__10794);
cljs.core._write(writer,s);

var G__10795 = seq__10791;
var G__10796 = chunk__10792;
var G__10797 = count__10793;
var G__10798 = (i__10794 + (1));
seq__10791 = G__10795;
chunk__10792 = G__10796;
count__10793 = G__10797;
i__10794 = G__10798;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10791);
if(temp__4126__auto__){
var seq__10791__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10791__$1)){
var c__4600__auto__ = cljs.core.chunk_first(seq__10791__$1);
var G__10799 = cljs.core.chunk_rest(seq__10791__$1);
var G__10800 = c__4600__auto__;
var G__10801 = cljs.core.count(c__4600__auto__);
var G__10802 = (0);
seq__10791 = G__10799;
chunk__10792 = G__10800;
count__10793 = G__10801;
i__10794 = G__10802;
continue;
} else {
var s = cljs.core.first(seq__10791__$1);
cljs.core._write(writer,s);

var G__10803 = cljs.core.next(seq__10791__$1);
var G__10804 = null;
var G__10805 = (0);
var G__10806 = (0);
seq__10791 = G__10803;
chunk__10792 = G__10804;
count__10793 = G__10805;
i__10794 = G__10806;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__10807__i = 0, G__10807__a = new Array(arguments.length -  1);
while (G__10807__i < G__10807__a.length) {G__10807__a[G__10807__i] = arguments[G__10807__i + 1]; ++G__10807__i;}
  ss = new cljs.core.IndexedSeq(G__10807__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__10808){
var writer = cljs.core.first(arglist__10808);
var ss = cljs.core.rest(arglist__10808);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj10810 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj10810;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__10813 = "[\\\\\"\b\f\n\r\t]";
var G__10814 = "g";
return RegExp(G__10813,G__10814);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3801__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__3801__auto__)){
var and__3801__auto____$1 = (function (){var G__10828 = obj;
if(G__10828){
var bit__4494__auto__ = (G__10828.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4494__auto__) || (G__10828.cljs$core$IMeta$)){
return true;
} else {
if((!G__10828.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__10828);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__10828);
}
})();
if(and__3801__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3801__auto____$1;
}
} else {
return and__3801__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__10829_10839 = cljs.core.meta(obj);
var G__10830_10840 = writer;
var G__10831_10841 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__10829_10839,G__10830_10840,G__10831_10841) : cljs.core.pr_writer.call(null,G__10829_10839,G__10830_10840,G__10831_10841));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__10832 = obj;
if(G__10832){
var bit__4487__auto__ = (G__10832.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4487__auto__) || (G__10832.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__10833 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__10834 = cljs.core.pr_writer;
var G__10835 = writer;
var G__10836 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__10833,G__10834,G__10835,G__10836) : cljs.core.print_map.call(null,G__10833,G__10834,G__10835,G__10836));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__10837 = obj;
return goog.isString(G__10837);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__10842 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__10842;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__10838 = obj;
if(G__10838){
var bit__4494__auto__ = (G__10838.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4494__auto__) || (G__10838.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__10838.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__10838);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__10838);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
var temp__4124__auto__ = new cljs.core.Keyword(null,"alt-impl","alt-impl",670969595).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4124__auto__)){
var alt_impl = temp__4124__auto__;
var G__10846 = obj;
var G__10847 = writer;
var G__10848 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,"fallback-impl","fallback-impl",-1501286995),cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__10846,G__10847,G__10848) : alt_impl.call(null,G__10846,G__10847,G__10848));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__10853 = cljs.core.seq(cljs.core.next(objs));
var chunk__10854 = null;
var count__10855 = (0);
var i__10856 = (0);
while(true){
if((i__10856 < count__10855)){
var obj = chunk__10854.cljs$core$IIndexed$_nth$arity$2(null,i__10856);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__10857 = seq__10853;
var G__10858 = chunk__10854;
var G__10859 = count__10855;
var G__10860 = (i__10856 + (1));
seq__10853 = G__10857;
chunk__10854 = G__10858;
count__10855 = G__10859;
i__10856 = G__10860;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10853);
if(temp__4126__auto__){
var seq__10853__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10853__$1)){
var c__4600__auto__ = cljs.core.chunk_first(seq__10853__$1);
var G__10861 = cljs.core.chunk_rest(seq__10853__$1);
var G__10862 = c__4600__auto__;
var G__10863 = cljs.core.count(c__4600__auto__);
var G__10864 = (0);
seq__10853 = G__10861;
chunk__10854 = G__10862;
count__10855 = G__10863;
i__10856 = G__10864;
continue;
} else {
var obj = cljs.core.first(seq__10853__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__10865 = cljs.core.next(seq__10853__$1);
var G__10866 = null;
var G__10867 = (0);
var G__10868 = (0);
seq__10853 = G__10865;
chunk__10854 = G__10866;
count__10855 = G__10867;
i__10856 = G__10868;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10869__i = 0, G__10869__a = new Array(arguments.length -  0);
while (G__10869__i < G__10869__a.length) {G__10869__a[G__10869__i] = arguments[G__10869__i + 0]; ++G__10869__i;}
  objs = new cljs.core.IndexedSeq(G__10869__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__10870){
var objs = cljs.core.seq(arglist__10870);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10871__i = 0, G__10871__a = new Array(arguments.length -  0);
while (G__10871__i < G__10871__a.length) {G__10871__a[G__10871__i] = arguments[G__10871__i + 0]; ++G__10871__i;}
  objs = new cljs.core.IndexedSeq(G__10871__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__10872){
var objs = cljs.core.seq(arglist__10872);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10873__i = 0, G__10873__a = new Array(arguments.length -  0);
while (G__10873__i < G__10873__a.length) {G__10873__a[G__10873__i] = arguments[G__10873__i + 0]; ++G__10873__i;}
  objs = new cljs.core.IndexedSeq(G__10873__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__10874){
var objs = cljs.core.seq(arglist__10874);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10875__i = 0, G__10875__a = new Array(arguments.length -  0);
while (G__10875__i < G__10875__a.length) {G__10875__a[G__10875__i] = arguments[G__10875__i + 0]; ++G__10875__i;}
  objs = new cljs.core.IndexedSeq(G__10875__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__10876){
var objs = cljs.core.seq(arglist__10876);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10877__i = 0, G__10877__a = new Array(arguments.length -  0);
while (G__10877__i < G__10877__a.length) {G__10877__a[G__10877__i] = arguments[G__10877__i + 0]; ++G__10877__i;}
  objs = new cljs.core.IndexedSeq(G__10877__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__10878){
var objs = cljs.core.seq(arglist__10878);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10879__i = 0, G__10879__a = new Array(arguments.length -  0);
while (G__10879__i < G__10879__a.length) {G__10879__a[G__10879__i] = arguments[G__10879__i + 0]; ++G__10879__i;}
  objs = new cljs.core.IndexedSeq(G__10879__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__10880){
var objs = cljs.core.seq(arglist__10880);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10881__i = 0, G__10881__a = new Array(arguments.length -  0);
while (G__10881__i < G__10881__a.length) {G__10881__a[G__10881__i] = arguments[G__10881__i + 0]; ++G__10881__i;}
  objs = new cljs.core.IndexedSeq(G__10881__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__10882){
var objs = cljs.core.seq(arglist__10882);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10883__i = 0, G__10883__a = new Array(arguments.length -  0);
while (G__10883__i < G__10883__a.length) {G__10883__a[G__10883__i] = arguments[G__10883__i + 0]; ++G__10883__i;}
  objs = new cljs.core.IndexedSeq(G__10883__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__10884){
var objs = cljs.core.seq(arglist__10884);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__10891_10897 = cljs.core.key(e);
var G__10892_10898 = w;
var G__10893_10899 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10891_10897,G__10892_10898,G__10893_10899) : print_one.call(null,G__10891_10897,G__10892_10898,G__10893_10899));

cljs.core._write(w," ");

var G__10894 = cljs.core.val(e);
var G__10895 = w;
var G__10896 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10894,G__10895,G__10896) : print_one.call(null,G__10894,G__10895,G__10896));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__10900__i = 0, G__10900__a = new Array(arguments.length -  2);
while (G__10900__i < G__10900__a.length) {G__10900__a[G__10900__i] = arguments[G__10900__i + 2]; ++G__10900__i;}
  args = new cljs.core.IndexedSeq(G__10900__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__10901){
var iref = cljs.core.first(arglist__10901);
arglist__10901 = cljs.core.next(arglist__10901);
var f = cljs.core.first(arglist__10901);
var args = cljs.core.rest(arglist__10901);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__10904 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__10904) : cljs.core.atom.call(null,G__10904));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__10906 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10906) : cljs.core.deref.call(null,G__10906));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__10907_SHARP_,p2__10908_SHARP_){
var ret = (function (){var G__10911 = p1__10907_SHARP_;
var G__10912 = p2__10908_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10911,G__10912) : rf.call(null,G__10911,G__10912));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__10915 = null;
var G__10915__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10915__1 = (function (result){
var G__10914 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10914) : rf.call(null,G__10914));
});
var G__10915__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__10915 = function(result,input){
switch(arguments.length){
case 0:
return G__10915__0.call(this);
case 1:
return G__10915__1.call(this,result);
case 2:
return G__10915__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10915.cljs$core$IFn$_invoke$arity$0 = G__10915__0;
G__10915.cljs$core$IFn$_invoke$arity$1 = G__10915__1;
G__10915.cljs$core$IFn$_invoke$arity$2 = G__10915__2;
return G__10915;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__10924 = null;
var G__10924__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10924__1 = (function (result){
var G__10920 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10920) : rf.call(null,G__10920));
});
var G__10924__2 = (function (result,input){
var prior = (function (){var G__10921 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10921) : cljs.core.deref.call(null,G__10921));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__10922 = result;
var G__10923 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10922,G__10923) : rf.call(null,G__10922,G__10923));
}
});
G__10924 = function(result,input){
switch(arguments.length){
case 0:
return G__10924__0.call(this);
case 1:
return G__10924__1.call(this,result);
case 2:
return G__10924__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10924.cljs$core$IFn$_invoke$arity$0 = G__10924__0;
G__10924.cljs$core$IFn$_invoke$arity$1 = G__10924__1;
G__10924.cljs$core$IFn$_invoke$arity$2 = G__10924__2;
return G__10924;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4791__auto__ = this;
return cljs.core.es6_iterator(this__4791__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__10926_SHARP_,p2__10925_SHARP_){
var G__10928 = p2__10925_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__10928) : proc.call(null,G__10928));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj10930 = {};
return obj10930;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3801__auto__ = x;
if(and__3801__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3801__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4457__auto__ = (((x == null))?null:x);
return (function (){var or__3813__auto__ = (cljs.core._clj__GT_js[(function (){var G__10934 = x__4457__auto__;
return goog.typeOf(G__10934);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3801__auto__ = x;
if(and__3801__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3801__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4457__auto__ = (((x == null))?null:x);
return (function (){var or__3813__auto__ = (cljs.core._key__GT_js[(function (){var G__10938 = x__4457__auto__;
return goog.typeOf(G__10938);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__10941 = k;
if(G__10941){
var bit__4494__auto__ = null;
if(cljs.core.truth_((function (){var or__3813__auto__ = bit__4494__auto__;
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
return G__10941.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__10941.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__10941);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__10941);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__10942 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__10942) : cljs.core.clj__GT_js.call(null,G__10942));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__10958 = x;
if(G__10958){
var bit__4494__auto__ = null;
if(cljs.core.truth_((function (){var or__3813__auto__ = bit__4494__auto__;
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
return G__10958.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__10958.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__10958);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__10958);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj10960 = {};
return obj10960;
})();
var seq__10961_10971 = cljs.core.seq(x);
var chunk__10962_10972 = null;
var count__10963_10973 = (0);
var i__10964_10974 = (0);
while(true){
if((i__10964_10974 < count__10963_10973)){
var vec__10965_10975 = chunk__10962_10972.cljs$core$IIndexed$_nth$arity$2(null,i__10964_10974);
var k_10976 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10965_10975,(0),null);
var v_10977 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10965_10975,(1),null);
(m[cljs.core.key__GT_js(k_10976)] = clj__GT_js(v_10977));

var G__10978 = seq__10961_10971;
var G__10979 = chunk__10962_10972;
var G__10980 = count__10963_10973;
var G__10981 = (i__10964_10974 + (1));
seq__10961_10971 = G__10978;
chunk__10962_10972 = G__10979;
count__10963_10973 = G__10980;
i__10964_10974 = G__10981;
continue;
} else {
var temp__4126__auto___10982 = cljs.core.seq(seq__10961_10971);
if(temp__4126__auto___10982){
var seq__10961_10983__$1 = temp__4126__auto___10982;
if(cljs.core.chunked_seq_QMARK_(seq__10961_10983__$1)){
var c__4600__auto___10984 = cljs.core.chunk_first(seq__10961_10983__$1);
var G__10985 = cljs.core.chunk_rest(seq__10961_10983__$1);
var G__10986 = c__4600__auto___10984;
var G__10987 = cljs.core.count(c__4600__auto___10984);
var G__10988 = (0);
seq__10961_10971 = G__10985;
chunk__10962_10972 = G__10986;
count__10963_10973 = G__10987;
i__10964_10974 = G__10988;
continue;
} else {
var vec__10966_10989 = cljs.core.first(seq__10961_10983__$1);
var k_10990 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10966_10989,(0),null);
var v_10991 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10966_10989,(1),null);
(m[cljs.core.key__GT_js(k_10990)] = clj__GT_js(v_10991));

var G__10992 = cljs.core.next(seq__10961_10983__$1);
var G__10993 = null;
var G__10994 = (0);
var G__10995 = (0);
seq__10961_10971 = G__10992;
chunk__10962_10972 = G__10993;
count__10963_10973 = G__10994;
i__10964_10974 = G__10995;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__10967_10996 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__10968_10997 = null;
var count__10969_10998 = (0);
var i__10970_10999 = (0);
while(true){
if((i__10970_10999 < count__10969_10998)){
var x_11000__$1 = chunk__10968_10997.cljs$core$IIndexed$_nth$arity$2(null,i__10970_10999);
arr.push(x_11000__$1);

var G__11001 = seq__10967_10996;
var G__11002 = chunk__10968_10997;
var G__11003 = count__10969_10998;
var G__11004 = (i__10970_10999 + (1));
seq__10967_10996 = G__11001;
chunk__10968_10997 = G__11002;
count__10969_10998 = G__11003;
i__10970_10999 = G__11004;
continue;
} else {
var temp__4126__auto___11005 = cljs.core.seq(seq__10967_10996);
if(temp__4126__auto___11005){
var seq__10967_11006__$1 = temp__4126__auto___11005;
if(cljs.core.chunked_seq_QMARK_(seq__10967_11006__$1)){
var c__4600__auto___11007 = cljs.core.chunk_first(seq__10967_11006__$1);
var G__11008 = cljs.core.chunk_rest(seq__10967_11006__$1);
var G__11009 = c__4600__auto___11007;
var G__11010 = cljs.core.count(c__4600__auto___11007);
var G__11011 = (0);
seq__10967_10996 = G__11008;
chunk__10968_10997 = G__11009;
count__10969_10998 = G__11010;
i__10970_10999 = G__11011;
continue;
} else {
var x_11012__$1 = cljs.core.first(seq__10967_11006__$1);
arr.push(x_11012__$1);

var G__11013 = cljs.core.next(seq__10967_11006__$1);
var G__11014 = null;
var G__11015 = (0);
var G__11016 = (0);
seq__10967_10996 = G__11013;
chunk__10968_10997 = G__11014;
count__10969_10998 = G__11015;
i__10970_10999 = G__11016;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj11018 = {};
return obj11018;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3801__auto__ = x;
if(and__3801__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3801__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4457__auto__ = (((x == null))?null:x);
return (function (){var or__3813__auto__ = (cljs.core._js__GT_clj[(function (){var G__11022 = x__4457__auto__;
return goog.typeOf(G__11022);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__11079__delegate = function (x,opts){
var map__11052 = opts;
var map__11052__$1 = ((cljs.core.seq_QMARK_(map__11052))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__11052):map__11052);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11052__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__11052,map__11052__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__11068 = x__$1;
if(G__11068){
var bit__4494__auto__ = null;
if(cljs.core.truth_((function (){var or__3813__auto__ = bit__4494__auto__;
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
return G__11068.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__11068.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__11068);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__11068);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4569__auto__ = ((function (map__11052,map__11052__$1,keywordize_keys,keyfn){
return (function iter__11069(s__11070){
return (new cljs.core.LazySeq(null,((function (map__11052,map__11052__$1,keywordize_keys,keyfn){
return (function (){
var s__11070__$1 = s__11070;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__11070__$1);
if(temp__4126__auto__){
var s__11070__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__11070__$2)){
var c__4567__auto__ = cljs.core.chunk_first(s__11070__$2);
var size__4568__auto__ = cljs.core.count(c__4567__auto__);
var b__11072 = cljs.core.chunk_buffer(size__4568__auto__);
if((function (){var i__11071 = (0);
while(true){
if((i__11071 < size__4568__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4567__auto__,i__11071);
cljs.core.chunk_append(b__11072,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__11077 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__11077) : keyfn.call(null,G__11077));
})(),thisfn((x__$1[k]))], null));

var G__11080 = (i__11071 + (1));
i__11071 = G__11080;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__11072),iter__11069(cljs.core.chunk_rest(s__11070__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__11072),null);
}
} else {
var k = cljs.core.first(s__11070__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__11078 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__11078) : keyfn.call(null,G__11078));
})(),thisfn((x__$1[k]))], null),iter__11069(cljs.core.rest(s__11070__$2)));
}
} else {
return null;
}
break;
}
});})(map__11052,map__11052__$1,keywordize_keys,keyfn))
,null,null));
});})(map__11052,map__11052__$1,keywordize_keys,keyfn))
;
return iter__4569__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__11052,map__11052__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__11079 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__11081__i = 0, G__11081__a = new Array(arguments.length -  1);
while (G__11081__i < G__11081__a.length) {G__11081__a[G__11081__i] = arguments[G__11081__i + 1]; ++G__11081__i;}
  opts = new cljs.core.IndexedSeq(G__11081__a,0);
} 
return G__11079__delegate.call(this,x,opts);};
G__11079.cljs$lang$maxFixedArity = 1;
G__11079.cljs$lang$applyTo = (function (arglist__11082){
var x = cljs.core.first(arglist__11082);
var opts = cljs.core.rest(arglist__11082);
return G__11079__delegate(x,opts);
});
G__11079.cljs$core$IFn$_invoke$arity$variadic = G__11079__delegate;
return G__11079;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__11083 = null;
if (arguments.length > 1) {
var G__11084__i = 0, G__11084__a = new Array(arguments.length -  1);
while (G__11084__i < G__11084__a.length) {G__11084__a[G__11084__i] = arguments[G__11084__i + 1]; ++G__11084__i;}
G__11083 = new cljs.core.IndexedSeq(G__11084__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__11083);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__11087 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__11087) : cljs.core.atom.call(null,G__11087));
})();
return ((function (mem){
return (function() { 
var G__11089__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__11088 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11088) : cljs.core.deref.call(null,G__11088));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__11089 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__11090__i = 0, G__11090__a = new Array(arguments.length -  0);
while (G__11090__i < G__11090__a.length) {G__11090__a[G__11090__i] = arguments[G__11090__i + 0]; ++G__11090__i;}
  args = new cljs.core.IndexedSeq(G__11090__a,0);
} 
return G__11089__delegate.call(this,args);};
G__11089.cljs$lang$maxFixedArity = 0;
G__11089.cljs$lang$applyTo = (function (arglist__11091){
var args = cljs.core.seq(arglist__11091);
return G__11089__delegate(args);
});
G__11089.cljs$core$IFn$_invoke$arity$variadic = G__11089__delegate;
return G__11089;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__11093 = ret;
f = G__11093;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__11094__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__11094 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__11095__i = 0, G__11095__a = new Array(arguments.length -  1);
while (G__11095__i < G__11095__a.length) {G__11095__a[G__11095__i] = arguments[G__11095__i + 1]; ++G__11095__i;}
  args = new cljs.core.IndexedSeq(G__11095__a,0);
} 
return G__11094__delegate.call(this,f,args);};
G__11094.cljs$lang$maxFixedArity = 1;
G__11094.cljs$lang$applyTo = (function (arglist__11096){
var f = cljs.core.first(arglist__11096);
var args = cljs.core.rest(arglist__11096);
return G__11094__delegate(f,args);
});
G__11094.cljs$core$IFn$_invoke$arity$variadic = G__11094__delegate;
return G__11094;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__11097 = null;
if (arguments.length > 1) {
var G__11098__i = 0, G__11098__a = new Array(arguments.length -  1);
while (G__11098__i < G__11098__a.length) {G__11098__a[G__11098__i] = arguments[G__11098__i + 1]; ++G__11098__i;}
G__11097 = new cljs.core.IndexedSeq(G__11098__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__11097);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__11101 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__11101) : Math.floor.call(null,G__11101));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__11103 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11103) : f.call(null,G__11103));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__11105 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__11105) : cljs.core.atom.call(null,G__11105));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__11106__i = 0, G__11106__a = new Array(arguments.length -  1);
while (G__11106__i < G__11106__a.length) {G__11106__a[G__11106__i] = arguments[G__11106__i + 1]; ++G__11106__i;}
  args = new cljs.core.IndexedSeq(G__11106__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__11107){
var f = cljs.core.first(arglist__11107);
var args = cljs.core.rest(arglist__11107);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__11172 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11172) : cljs.core.deref.call(null,G__11172));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3813__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
var and__3801__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3801__auto__){
var and__3801__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3801__auto____$1){
var and__3801__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3801__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__11197 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__11195 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__11195) : child.call(null,G__11195));
})(),(function (){var G__11196 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__11196) : parent.call(null,G__11196));
})());
var G__11198 = (i + (1));
ret = G__11197;
i = G__11198;
continue;
}
break;
}
} else {
return and__3801__auto____$2;
}
} else {
return and__3801__auto____$1;
}
} else {
return and__3801__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__11202 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11202) : cljs.core.deref.call(null,G__11202));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__11206 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11206) : cljs.core.deref.call(null,G__11206));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__11210 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11210) : cljs.core.deref.call(null,G__11210));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__11219 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__11219) : targets.call(null,G__11219));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__11220 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__11220) : sources.call(null,G__11220));
})()));
});})(tp,td,ta))
;
var or__3813__auto__ = ((cljs.core.contains_QMARK_((function (){var G__11224 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__11224) : tp.call(null,G__11224));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__11225 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__11225) : ta.call(null,G__11225));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__11226 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__11226) : ta.call(null,G__11226));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__11233 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__11233) : parentMap.call(null,G__11233));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__11234 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__11234) : parentMap.call(null,G__11234));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__11227_SHARP_){
return cljs.core.cons(cljs.core.first(p1__11227_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__11227_SHARP_),cljs.core.second(p1__11227_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__11235 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__11235) : parentMap.call(null,G__11235));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__11228_SHARP_,p2__11229_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__11228_SHARP_,p2__11229_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__11238 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11238) : cljs.core.deref.call(null,G__11238));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__11239 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11239) : cljs.core.deref.call(null,G__11239));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__11255 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11255) : cljs.core.deref.call(null,G__11255));
})().call(null,x);
var or__3813__auto__ = (cljs.core.truth_((function (){var and__3801__auto__ = xprefs;
if(cljs.core.truth_(and__3801__auto__)){
var G__11257 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__11257) : xprefs.call(null,G__11257));
} else {
return and__3801__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__11258 = cljs.core.rest(ps);
ps = G__11258;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3813__auto____$1)){
return or__3813__auto____$1;
} else {
var or__3813__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__11259 = cljs.core.rest(ps);
ps = G__11259;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3813__auto____$2)){
return or__3813__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3813__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3813__auto__)){
return or__3813__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__11273){
var vec__11274 = p__11273;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11274,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11274,(1),null);
var e = vec__11274;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__11275 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11275) : cljs.core.deref.call(null,G__11275));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3813__auto__ = (be == null);
if(or__3813__auto__){
return or__3813__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__11276 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11276) : cljs.core.deref.call(null,G__11276));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__11277 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11277) : cljs.core.deref.call(null,G__11277));
})(),(function (){var G__11278 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11278) : cljs.core.deref.call(null,G__11278));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj11280 = {};
return obj11280;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3801__auto__ = mf;
if(and__3801__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3801__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4457__auto__ = (((mf == null))?null:mf);
return (function (){var or__3813__auto__ = (cljs.core._reset[(function (){var G__11284 = x__4457__auto__;
return goog.typeOf(G__11284);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._reset["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3801__auto__ = mf;
if(and__3801__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3801__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4457__auto__ = (((mf == null))?null:mf);
return (function (){var or__3813__auto__ = (cljs.core._add_method[(function (){var G__11288 = x__4457__auto__;
return goog.typeOf(G__11288);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._add_method["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3801__auto__ = mf;
if(and__3801__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3801__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4457__auto__ = (((mf == null))?null:mf);
return (function (){var or__3813__auto__ = (cljs.core._remove_method[(function (){var G__11292 = x__4457__auto__;
return goog.typeOf(G__11292);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3801__auto__ = mf;
if(and__3801__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3801__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4457__auto__ = (((mf == null))?null:mf);
return (function (){var or__3813__auto__ = (cljs.core._prefer_method[(function (){var G__11296 = x__4457__auto__;
return goog.typeOf(G__11296);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3801__auto__ = mf;
if(and__3801__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3801__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4457__auto__ = (((mf == null))?null:mf);
return (function (){var or__3813__auto__ = (cljs.core._get_method[(function (){var G__11300 = x__4457__auto__;
return goog.typeOf(G__11300);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._get_method["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3801__auto__ = mf;
if(and__3801__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3801__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4457__auto__ = (((mf == null))?null:mf);
return (function (){var or__3813__auto__ = (cljs.core._methods[(function (){var G__11304 = x__4457__auto__;
return goog.typeOf(G__11304);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._methods["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3801__auto__ = mf;
if(and__3801__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3801__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4457__auto__ = (((mf == null))?null:mf);
return (function (){var or__3813__auto__ = (cljs.core._prefers[(function (){var G__11308 = x__4457__auto__;
return goog.typeOf(G__11308);
})()]);
if(or__3813__auto__){
return or__3813__auto__;
} else {
var or__3813__auto____$1 = (cljs.core._prefers["_"]);
if(or__3813__auto____$1){
return or__3813__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__11310 = this$__$1;
return goog.getUid(G__11310);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__11311 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11311) : cljs.core.deref.call(null,G__11311));
})(),(function (){var G__11312 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11312) : cljs.core.deref.call(null,G__11312));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__11313 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11313) : cljs.core.deref.call(null,G__11313));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__11314 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11314) : cljs.core.deref.call(null,G__11314));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__11315 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11315) : cljs.core.deref.call(null,G__11315));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__11316 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11316) : cljs.core.deref.call(null,G__11316));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__12157 = null;
var G__12157__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__12157__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11317 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__11317) : self__.dispatch_fn.call(null,G__11317));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11318 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__11318) : target_fn.call(null,G__11318));
});
var G__12157__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11319 = a;
var G__11320 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__11319,G__11320) : self__.dispatch_fn.call(null,G__11319,G__11320));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11321 = a;
var G__11322 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__11321,G__11322) : target_fn.call(null,G__11321,G__11322));
});
var G__12157__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11323 = a;
var G__11324 = b;
var G__11325 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__11323,G__11324,G__11325) : self__.dispatch_fn.call(null,G__11323,G__11324,G__11325));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11326 = a;
var G__11327 = b;
var G__11328 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__11326,G__11327,G__11328) : target_fn.call(null,G__11326,G__11327,G__11328));
});
var G__12157__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11329 = a;
var G__11330 = b;
var G__11331 = c;
var G__11332 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__11329,G__11330,G__11331,G__11332) : self__.dispatch_fn.call(null,G__11329,G__11330,G__11331,G__11332));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11333 = a;
var G__11334 = b;
var G__11335 = c;
var G__11336 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__11333,G__11334,G__11335,G__11336) : target_fn.call(null,G__11333,G__11334,G__11335,G__11336));
});
var G__12157__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11337 = a;
var G__11338 = b;
var G__11339 = c;
var G__11340 = d;
var G__11341 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__11337,G__11338,G__11339,G__11340,G__11341) : self__.dispatch_fn.call(null,G__11337,G__11338,G__11339,G__11340,G__11341));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11342 = a;
var G__11343 = b;
var G__11344 = c;
var G__11345 = d;
var G__11346 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__11342,G__11343,G__11344,G__11345,G__11346) : target_fn.call(null,G__11342,G__11343,G__11344,G__11345,G__11346));
});
var G__12157__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11347 = a;
var G__11348 = b;
var G__11349 = c;
var G__11350 = d;
var G__11351 = e;
var G__11352 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__11347,G__11348,G__11349,G__11350,G__11351,G__11352) : self__.dispatch_fn.call(null,G__11347,G__11348,G__11349,G__11350,G__11351,G__11352));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11353 = a;
var G__11354 = b;
var G__11355 = c;
var G__11356 = d;
var G__11357 = e;
var G__11358 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__11353,G__11354,G__11355,G__11356,G__11357,G__11358) : target_fn.call(null,G__11353,G__11354,G__11355,G__11356,G__11357,G__11358));
});
var G__12157__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11359 = a;
var G__11360 = b;
var G__11361 = c;
var G__11362 = d;
var G__11363 = e;
var G__11364 = f;
var G__11365 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__11359,G__11360,G__11361,G__11362,G__11363,G__11364,G__11365) : self__.dispatch_fn.call(null,G__11359,G__11360,G__11361,G__11362,G__11363,G__11364,G__11365));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11366 = a;
var G__11367 = b;
var G__11368 = c;
var G__11369 = d;
var G__11370 = e;
var G__11371 = f;
var G__11372 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__11366,G__11367,G__11368,G__11369,G__11370,G__11371,G__11372) : target_fn.call(null,G__11366,G__11367,G__11368,G__11369,G__11370,G__11371,G__11372));
});
var G__12157__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11373 = a;
var G__11374 = b;
var G__11375 = c;
var G__11376 = d;
var G__11377 = e;
var G__11378 = f;
var G__11379 = g;
var G__11380 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__11373,G__11374,G__11375,G__11376,G__11377,G__11378,G__11379,G__11380) : self__.dispatch_fn.call(null,G__11373,G__11374,G__11375,G__11376,G__11377,G__11378,G__11379,G__11380));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11381 = a;
var G__11382 = b;
var G__11383 = c;
var G__11384 = d;
var G__11385 = e;
var G__11386 = f;
var G__11387 = g;
var G__11388 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__11381,G__11382,G__11383,G__11384,G__11385,G__11386,G__11387,G__11388) : target_fn.call(null,G__11381,G__11382,G__11383,G__11384,G__11385,G__11386,G__11387,G__11388));
});
var G__12157__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11389 = a;
var G__11390 = b;
var G__11391 = c;
var G__11392 = d;
var G__11393 = e;
var G__11394 = f;
var G__11395 = g;
var G__11396 = h;
var G__11397 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__11389,G__11390,G__11391,G__11392,G__11393,G__11394,G__11395,G__11396,G__11397) : self__.dispatch_fn.call(null,G__11389,G__11390,G__11391,G__11392,G__11393,G__11394,G__11395,G__11396,G__11397));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11398 = a;
var G__11399 = b;
var G__11400 = c;
var G__11401 = d;
var G__11402 = e;
var G__11403 = f;
var G__11404 = g;
var G__11405 = h;
var G__11406 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__11398,G__11399,G__11400,G__11401,G__11402,G__11403,G__11404,G__11405,G__11406) : target_fn.call(null,G__11398,G__11399,G__11400,G__11401,G__11402,G__11403,G__11404,G__11405,G__11406));
});
var G__12157__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11407 = a;
var G__11408 = b;
var G__11409 = c;
var G__11410 = d;
var G__11411 = e;
var G__11412 = f;
var G__11413 = g;
var G__11414 = h;
var G__11415 = i;
var G__11416 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__11407,G__11408,G__11409,G__11410,G__11411,G__11412,G__11413,G__11414,G__11415,G__11416) : self__.dispatch_fn.call(null,G__11407,G__11408,G__11409,G__11410,G__11411,G__11412,G__11413,G__11414,G__11415,G__11416));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11417 = a;
var G__11418 = b;
var G__11419 = c;
var G__11420 = d;
var G__11421 = e;
var G__11422 = f;
var G__11423 = g;
var G__11424 = h;
var G__11425 = i;
var G__11426 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__11417,G__11418,G__11419,G__11420,G__11421,G__11422,G__11423,G__11424,G__11425,G__11426) : target_fn.call(null,G__11417,G__11418,G__11419,G__11420,G__11421,G__11422,G__11423,G__11424,G__11425,G__11426));
});
var G__12157__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11427 = a;
var G__11428 = b;
var G__11429 = c;
var G__11430 = d;
var G__11431 = e;
var G__11432 = f;
var G__11433 = g;
var G__11434 = h;
var G__11435 = i;
var G__11436 = j;
var G__11437 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__11427,G__11428,G__11429,G__11430,G__11431,G__11432,G__11433,G__11434,G__11435,G__11436,G__11437) : self__.dispatch_fn.call(null,G__11427,G__11428,G__11429,G__11430,G__11431,G__11432,G__11433,G__11434,G__11435,G__11436,G__11437));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11438 = a;
var G__11439 = b;
var G__11440 = c;
var G__11441 = d;
var G__11442 = e;
var G__11443 = f;
var G__11444 = g;
var G__11445 = h;
var G__11446 = i;
var G__11447 = j;
var G__11448 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__11438,G__11439,G__11440,G__11441,G__11442,G__11443,G__11444,G__11445,G__11446,G__11447,G__11448) : target_fn.call(null,G__11438,G__11439,G__11440,G__11441,G__11442,G__11443,G__11444,G__11445,G__11446,G__11447,G__11448));
});
var G__12157__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11449 = a;
var G__11450 = b;
var G__11451 = c;
var G__11452 = d;
var G__11453 = e;
var G__11454 = f;
var G__11455 = g;
var G__11456 = h;
var G__11457 = i;
var G__11458 = j;
var G__11459 = k;
var G__11460 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__11449,G__11450,G__11451,G__11452,G__11453,G__11454,G__11455,G__11456,G__11457,G__11458,G__11459,G__11460) : self__.dispatch_fn.call(null,G__11449,G__11450,G__11451,G__11452,G__11453,G__11454,G__11455,G__11456,G__11457,G__11458,G__11459,G__11460));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11461 = a;
var G__11462 = b;
var G__11463 = c;
var G__11464 = d;
var G__11465 = e;
var G__11466 = f;
var G__11467 = g;
var G__11468 = h;
var G__11469 = i;
var G__11470 = j;
var G__11471 = k;
var G__11472 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__11461,G__11462,G__11463,G__11464,G__11465,G__11466,G__11467,G__11468,G__11469,G__11470,G__11471,G__11472) : target_fn.call(null,G__11461,G__11462,G__11463,G__11464,G__11465,G__11466,G__11467,G__11468,G__11469,G__11470,G__11471,G__11472));
});
var G__12157__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11473 = a;
var G__11474 = b;
var G__11475 = c;
var G__11476 = d;
var G__11477 = e;
var G__11478 = f;
var G__11479 = g;
var G__11480 = h;
var G__11481 = i;
var G__11482 = j;
var G__11483 = k;
var G__11484 = l;
var G__11485 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__11473,G__11474,G__11475,G__11476,G__11477,G__11478,G__11479,G__11480,G__11481,G__11482,G__11483,G__11484,G__11485) : self__.dispatch_fn.call(null,G__11473,G__11474,G__11475,G__11476,G__11477,G__11478,G__11479,G__11480,G__11481,G__11482,G__11483,G__11484,G__11485));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11486 = a;
var G__11487 = b;
var G__11488 = c;
var G__11489 = d;
var G__11490 = e;
var G__11491 = f;
var G__11492 = g;
var G__11493 = h;
var G__11494 = i;
var G__11495 = j;
var G__11496 = k;
var G__11497 = l;
var G__11498 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__11486,G__11487,G__11488,G__11489,G__11490,G__11491,G__11492,G__11493,G__11494,G__11495,G__11496,G__11497,G__11498) : target_fn.call(null,G__11486,G__11487,G__11488,G__11489,G__11490,G__11491,G__11492,G__11493,G__11494,G__11495,G__11496,G__11497,G__11498));
});
var G__12157__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11499 = a;
var G__11500 = b;
var G__11501 = c;
var G__11502 = d;
var G__11503 = e;
var G__11504 = f;
var G__11505 = g;
var G__11506 = h;
var G__11507 = i;
var G__11508 = j;
var G__11509 = k;
var G__11510 = l;
var G__11511 = m;
var G__11512 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__11499,G__11500,G__11501,G__11502,G__11503,G__11504,G__11505,G__11506,G__11507,G__11508,G__11509,G__11510,G__11511,G__11512) : self__.dispatch_fn.call(null,G__11499,G__11500,G__11501,G__11502,G__11503,G__11504,G__11505,G__11506,G__11507,G__11508,G__11509,G__11510,G__11511,G__11512));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11513 = a;
var G__11514 = b;
var G__11515 = c;
var G__11516 = d;
var G__11517 = e;
var G__11518 = f;
var G__11519 = g;
var G__11520 = h;
var G__11521 = i;
var G__11522 = j;
var G__11523 = k;
var G__11524 = l;
var G__11525 = m;
var G__11526 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__11513,G__11514,G__11515,G__11516,G__11517,G__11518,G__11519,G__11520,G__11521,G__11522,G__11523,G__11524,G__11525,G__11526) : target_fn.call(null,G__11513,G__11514,G__11515,G__11516,G__11517,G__11518,G__11519,G__11520,G__11521,G__11522,G__11523,G__11524,G__11525,G__11526));
});
var G__12157__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11527 = a;
var G__11528 = b;
var G__11529 = c;
var G__11530 = d;
var G__11531 = e;
var G__11532 = f;
var G__11533 = g;
var G__11534 = h;
var G__11535 = i;
var G__11536 = j;
var G__11537 = k;
var G__11538 = l;
var G__11539 = m;
var G__11540 = n;
var G__11541 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__11527,G__11528,G__11529,G__11530,G__11531,G__11532,G__11533,G__11534,G__11535,G__11536,G__11537,G__11538,G__11539,G__11540,G__11541) : self__.dispatch_fn.call(null,G__11527,G__11528,G__11529,G__11530,G__11531,G__11532,G__11533,G__11534,G__11535,G__11536,G__11537,G__11538,G__11539,G__11540,G__11541));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11542 = a;
var G__11543 = b;
var G__11544 = c;
var G__11545 = d;
var G__11546 = e;
var G__11547 = f;
var G__11548 = g;
var G__11549 = h;
var G__11550 = i;
var G__11551 = j;
var G__11552 = k;
var G__11553 = l;
var G__11554 = m;
var G__11555 = n;
var G__11556 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__11542,G__11543,G__11544,G__11545,G__11546,G__11547,G__11548,G__11549,G__11550,G__11551,G__11552,G__11553,G__11554,G__11555,G__11556) : target_fn.call(null,G__11542,G__11543,G__11544,G__11545,G__11546,G__11547,G__11548,G__11549,G__11550,G__11551,G__11552,G__11553,G__11554,G__11555,G__11556));
});
var G__12157__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11557 = a;
var G__11558 = b;
var G__11559 = c;
var G__11560 = d;
var G__11561 = e;
var G__11562 = f;
var G__11563 = g;
var G__11564 = h;
var G__11565 = i;
var G__11566 = j;
var G__11567 = k;
var G__11568 = l;
var G__11569 = m;
var G__11570 = n;
var G__11571 = o;
var G__11572 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__11557,G__11558,G__11559,G__11560,G__11561,G__11562,G__11563,G__11564,G__11565,G__11566,G__11567,G__11568,G__11569,G__11570,G__11571,G__11572) : self__.dispatch_fn.call(null,G__11557,G__11558,G__11559,G__11560,G__11561,G__11562,G__11563,G__11564,G__11565,G__11566,G__11567,G__11568,G__11569,G__11570,G__11571,G__11572));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11573 = a;
var G__11574 = b;
var G__11575 = c;
var G__11576 = d;
var G__11577 = e;
var G__11578 = f;
var G__11579 = g;
var G__11580 = h;
var G__11581 = i;
var G__11582 = j;
var G__11583 = k;
var G__11584 = l;
var G__11585 = m;
var G__11586 = n;
var G__11587 = o;
var G__11588 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__11573,G__11574,G__11575,G__11576,G__11577,G__11578,G__11579,G__11580,G__11581,G__11582,G__11583,G__11584,G__11585,G__11586,G__11587,G__11588) : target_fn.call(null,G__11573,G__11574,G__11575,G__11576,G__11577,G__11578,G__11579,G__11580,G__11581,G__11582,G__11583,G__11584,G__11585,G__11586,G__11587,G__11588));
});
var G__12157__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11589 = a;
var G__11590 = b;
var G__11591 = c;
var G__11592 = d;
var G__11593 = e;
var G__11594 = f;
var G__11595 = g;
var G__11596 = h;
var G__11597 = i;
var G__11598 = j;
var G__11599 = k;
var G__11600 = l;
var G__11601 = m;
var G__11602 = n;
var G__11603 = o;
var G__11604 = p;
var G__11605 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__11589,G__11590,G__11591,G__11592,G__11593,G__11594,G__11595,G__11596,G__11597,G__11598,G__11599,G__11600,G__11601,G__11602,G__11603,G__11604,G__11605) : self__.dispatch_fn.call(null,G__11589,G__11590,G__11591,G__11592,G__11593,G__11594,G__11595,G__11596,G__11597,G__11598,G__11599,G__11600,G__11601,G__11602,G__11603,G__11604,G__11605));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11606 = a;
var G__11607 = b;
var G__11608 = c;
var G__11609 = d;
var G__11610 = e;
var G__11611 = f;
var G__11612 = g;
var G__11613 = h;
var G__11614 = i;
var G__11615 = j;
var G__11616 = k;
var G__11617 = l;
var G__11618 = m;
var G__11619 = n;
var G__11620 = o;
var G__11621 = p;
var G__11622 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__11606,G__11607,G__11608,G__11609,G__11610,G__11611,G__11612,G__11613,G__11614,G__11615,G__11616,G__11617,G__11618,G__11619,G__11620,G__11621,G__11622) : target_fn.call(null,G__11606,G__11607,G__11608,G__11609,G__11610,G__11611,G__11612,G__11613,G__11614,G__11615,G__11616,G__11617,G__11618,G__11619,G__11620,G__11621,G__11622));
});
var G__12157__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11623 = a;
var G__11624 = b;
var G__11625 = c;
var G__11626 = d;
var G__11627 = e;
var G__11628 = f;
var G__11629 = g;
var G__11630 = h;
var G__11631 = i;
var G__11632 = j;
var G__11633 = k;
var G__11634 = l;
var G__11635 = m;
var G__11636 = n;
var G__11637 = o;
var G__11638 = p;
var G__11639 = q;
var G__11640 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__11623,G__11624,G__11625,G__11626,G__11627,G__11628,G__11629,G__11630,G__11631,G__11632,G__11633,G__11634,G__11635,G__11636,G__11637,G__11638,G__11639,G__11640) : self__.dispatch_fn.call(null,G__11623,G__11624,G__11625,G__11626,G__11627,G__11628,G__11629,G__11630,G__11631,G__11632,G__11633,G__11634,G__11635,G__11636,G__11637,G__11638,G__11639,G__11640));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11641 = a;
var G__11642 = b;
var G__11643 = c;
var G__11644 = d;
var G__11645 = e;
var G__11646 = f;
var G__11647 = g;
var G__11648 = h;
var G__11649 = i;
var G__11650 = j;
var G__11651 = k;
var G__11652 = l;
var G__11653 = m;
var G__11654 = n;
var G__11655 = o;
var G__11656 = p;
var G__11657 = q;
var G__11658 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__11641,G__11642,G__11643,G__11644,G__11645,G__11646,G__11647,G__11648,G__11649,G__11650,G__11651,G__11652,G__11653,G__11654,G__11655,G__11656,G__11657,G__11658) : target_fn.call(null,G__11641,G__11642,G__11643,G__11644,G__11645,G__11646,G__11647,G__11648,G__11649,G__11650,G__11651,G__11652,G__11653,G__11654,G__11655,G__11656,G__11657,G__11658));
});
var G__12157__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11659 = a;
var G__11660 = b;
var G__11661 = c;
var G__11662 = d;
var G__11663 = e;
var G__11664 = f;
var G__11665 = g;
var G__11666 = h;
var G__11667 = i;
var G__11668 = j;
var G__11669 = k;
var G__11670 = l;
var G__11671 = m;
var G__11672 = n;
var G__11673 = o;
var G__11674 = p;
var G__11675 = q;
var G__11676 = r;
var G__11677 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__11659,G__11660,G__11661,G__11662,G__11663,G__11664,G__11665,G__11666,G__11667,G__11668,G__11669,G__11670,G__11671,G__11672,G__11673,G__11674,G__11675,G__11676,G__11677) : self__.dispatch_fn.call(null,G__11659,G__11660,G__11661,G__11662,G__11663,G__11664,G__11665,G__11666,G__11667,G__11668,G__11669,G__11670,G__11671,G__11672,G__11673,G__11674,G__11675,G__11676,G__11677));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11678 = a;
var G__11679 = b;
var G__11680 = c;
var G__11681 = d;
var G__11682 = e;
var G__11683 = f;
var G__11684 = g;
var G__11685 = h;
var G__11686 = i;
var G__11687 = j;
var G__11688 = k;
var G__11689 = l;
var G__11690 = m;
var G__11691 = n;
var G__11692 = o;
var G__11693 = p;
var G__11694 = q;
var G__11695 = r;
var G__11696 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__11678,G__11679,G__11680,G__11681,G__11682,G__11683,G__11684,G__11685,G__11686,G__11687,G__11688,G__11689,G__11690,G__11691,G__11692,G__11693,G__11694,G__11695,G__11696) : target_fn.call(null,G__11678,G__11679,G__11680,G__11681,G__11682,G__11683,G__11684,G__11685,G__11686,G__11687,G__11688,G__11689,G__11690,G__11691,G__11692,G__11693,G__11694,G__11695,G__11696));
});
var G__12157__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11697 = a;
var G__11698 = b;
var G__11699 = c;
var G__11700 = d;
var G__11701 = e;
var G__11702 = f;
var G__11703 = g;
var G__11704 = h;
var G__11705 = i;
var G__11706 = j;
var G__11707 = k;
var G__11708 = l;
var G__11709 = m;
var G__11710 = n;
var G__11711 = o;
var G__11712 = p;
var G__11713 = q;
var G__11714 = r;
var G__11715 = s;
var G__11716 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__11697,G__11698,G__11699,G__11700,G__11701,G__11702,G__11703,G__11704,G__11705,G__11706,G__11707,G__11708,G__11709,G__11710,G__11711,G__11712,G__11713,G__11714,G__11715,G__11716) : self__.dispatch_fn.call(null,G__11697,G__11698,G__11699,G__11700,G__11701,G__11702,G__11703,G__11704,G__11705,G__11706,G__11707,G__11708,G__11709,G__11710,G__11711,G__11712,G__11713,G__11714,G__11715,G__11716));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11717 = a;
var G__11718 = b;
var G__11719 = c;
var G__11720 = d;
var G__11721 = e;
var G__11722 = f;
var G__11723 = g;
var G__11724 = h;
var G__11725 = i;
var G__11726 = j;
var G__11727 = k;
var G__11728 = l;
var G__11729 = m;
var G__11730 = n;
var G__11731 = o;
var G__11732 = p;
var G__11733 = q;
var G__11734 = r;
var G__11735 = s;
var G__11736 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__11717,G__11718,G__11719,G__11720,G__11721,G__11722,G__11723,G__11724,G__11725,G__11726,G__11727,G__11728,G__11729,G__11730,G__11731,G__11732,G__11733,G__11734,G__11735,G__11736) : target_fn.call(null,G__11717,G__11718,G__11719,G__11720,G__11721,G__11722,G__11723,G__11724,G__11725,G__11726,G__11727,G__11728,G__11729,G__11730,G__11731,G__11732,G__11733,G__11734,G__11735,G__11736));
});
var G__12157__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__12157 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__12157__1.call(this,self__);
case 2:
return G__12157__2.call(this,self__,a);
case 3:
return G__12157__3.call(this,self__,a,b);
case 4:
return G__12157__4.call(this,self__,a,b,c);
case 5:
return G__12157__5.call(this,self__,a,b,c,d);
case 6:
return G__12157__6.call(this,self__,a,b,c,d,e);
case 7:
return G__12157__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__12157__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__12157__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__12157__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__12157__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__12157__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__12157__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__12157__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__12157__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__12157__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__12157__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__12157__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__12157__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__12157__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__12157__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__12157__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12157.cljs$core$IFn$_invoke$arity$1 = G__12157__1;
G__12157.cljs$core$IFn$_invoke$arity$2 = G__12157__2;
G__12157.cljs$core$IFn$_invoke$arity$3 = G__12157__3;
G__12157.cljs$core$IFn$_invoke$arity$4 = G__12157__4;
G__12157.cljs$core$IFn$_invoke$arity$5 = G__12157__5;
G__12157.cljs$core$IFn$_invoke$arity$6 = G__12157__6;
G__12157.cljs$core$IFn$_invoke$arity$7 = G__12157__7;
G__12157.cljs$core$IFn$_invoke$arity$8 = G__12157__8;
G__12157.cljs$core$IFn$_invoke$arity$9 = G__12157__9;
G__12157.cljs$core$IFn$_invoke$arity$10 = G__12157__10;
G__12157.cljs$core$IFn$_invoke$arity$11 = G__12157__11;
G__12157.cljs$core$IFn$_invoke$arity$12 = G__12157__12;
G__12157.cljs$core$IFn$_invoke$arity$13 = G__12157__13;
G__12157.cljs$core$IFn$_invoke$arity$14 = G__12157__14;
G__12157.cljs$core$IFn$_invoke$arity$15 = G__12157__15;
G__12157.cljs$core$IFn$_invoke$arity$16 = G__12157__16;
G__12157.cljs$core$IFn$_invoke$arity$17 = G__12157__17;
G__12157.cljs$core$IFn$_invoke$arity$18 = G__12157__18;
G__12157.cljs$core$IFn$_invoke$arity$19 = G__12157__19;
G__12157.cljs$core$IFn$_invoke$arity$20 = G__12157__20;
G__12157.cljs$core$IFn$_invoke$arity$21 = G__12157__21;
G__12157.cljs$core$IFn$_invoke$arity$22 = G__12157__22;
return G__12157;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args11309){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11309)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11737 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__11737) : self__.dispatch_fn.call(null,G__11737));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11738 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__11738) : target_fn.call(null,G__11738));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11739 = a;
var G__11740 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__11739,G__11740) : self__.dispatch_fn.call(null,G__11739,G__11740));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11741 = a;
var G__11742 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__11741,G__11742) : target_fn.call(null,G__11741,G__11742));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11743 = a;
var G__11744 = b;
var G__11745 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__11743,G__11744,G__11745) : self__.dispatch_fn.call(null,G__11743,G__11744,G__11745));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11746 = a;
var G__11747 = b;
var G__11748 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__11746,G__11747,G__11748) : target_fn.call(null,G__11746,G__11747,G__11748));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11749 = a;
var G__11750 = b;
var G__11751 = c;
var G__11752 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__11749,G__11750,G__11751,G__11752) : self__.dispatch_fn.call(null,G__11749,G__11750,G__11751,G__11752));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11753 = a;
var G__11754 = b;
var G__11755 = c;
var G__11756 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__11753,G__11754,G__11755,G__11756) : target_fn.call(null,G__11753,G__11754,G__11755,G__11756));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11757 = a;
var G__11758 = b;
var G__11759 = c;
var G__11760 = d;
var G__11761 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__11757,G__11758,G__11759,G__11760,G__11761) : self__.dispatch_fn.call(null,G__11757,G__11758,G__11759,G__11760,G__11761));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11762 = a;
var G__11763 = b;
var G__11764 = c;
var G__11765 = d;
var G__11766 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__11762,G__11763,G__11764,G__11765,G__11766) : target_fn.call(null,G__11762,G__11763,G__11764,G__11765,G__11766));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11767 = a;
var G__11768 = b;
var G__11769 = c;
var G__11770 = d;
var G__11771 = e;
var G__11772 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__11767,G__11768,G__11769,G__11770,G__11771,G__11772) : self__.dispatch_fn.call(null,G__11767,G__11768,G__11769,G__11770,G__11771,G__11772));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11773 = a;
var G__11774 = b;
var G__11775 = c;
var G__11776 = d;
var G__11777 = e;
var G__11778 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__11773,G__11774,G__11775,G__11776,G__11777,G__11778) : target_fn.call(null,G__11773,G__11774,G__11775,G__11776,G__11777,G__11778));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11779 = a;
var G__11780 = b;
var G__11781 = c;
var G__11782 = d;
var G__11783 = e;
var G__11784 = f;
var G__11785 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__11779,G__11780,G__11781,G__11782,G__11783,G__11784,G__11785) : self__.dispatch_fn.call(null,G__11779,G__11780,G__11781,G__11782,G__11783,G__11784,G__11785));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11786 = a;
var G__11787 = b;
var G__11788 = c;
var G__11789 = d;
var G__11790 = e;
var G__11791 = f;
var G__11792 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__11786,G__11787,G__11788,G__11789,G__11790,G__11791,G__11792) : target_fn.call(null,G__11786,G__11787,G__11788,G__11789,G__11790,G__11791,G__11792));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11793 = a;
var G__11794 = b;
var G__11795 = c;
var G__11796 = d;
var G__11797 = e;
var G__11798 = f;
var G__11799 = g;
var G__11800 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__11793,G__11794,G__11795,G__11796,G__11797,G__11798,G__11799,G__11800) : self__.dispatch_fn.call(null,G__11793,G__11794,G__11795,G__11796,G__11797,G__11798,G__11799,G__11800));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11801 = a;
var G__11802 = b;
var G__11803 = c;
var G__11804 = d;
var G__11805 = e;
var G__11806 = f;
var G__11807 = g;
var G__11808 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__11801,G__11802,G__11803,G__11804,G__11805,G__11806,G__11807,G__11808) : target_fn.call(null,G__11801,G__11802,G__11803,G__11804,G__11805,G__11806,G__11807,G__11808));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11809 = a;
var G__11810 = b;
var G__11811 = c;
var G__11812 = d;
var G__11813 = e;
var G__11814 = f;
var G__11815 = g;
var G__11816 = h;
var G__11817 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__11809,G__11810,G__11811,G__11812,G__11813,G__11814,G__11815,G__11816,G__11817) : self__.dispatch_fn.call(null,G__11809,G__11810,G__11811,G__11812,G__11813,G__11814,G__11815,G__11816,G__11817));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11818 = a;
var G__11819 = b;
var G__11820 = c;
var G__11821 = d;
var G__11822 = e;
var G__11823 = f;
var G__11824 = g;
var G__11825 = h;
var G__11826 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__11818,G__11819,G__11820,G__11821,G__11822,G__11823,G__11824,G__11825,G__11826) : target_fn.call(null,G__11818,G__11819,G__11820,G__11821,G__11822,G__11823,G__11824,G__11825,G__11826));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11827 = a;
var G__11828 = b;
var G__11829 = c;
var G__11830 = d;
var G__11831 = e;
var G__11832 = f;
var G__11833 = g;
var G__11834 = h;
var G__11835 = i;
var G__11836 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__11827,G__11828,G__11829,G__11830,G__11831,G__11832,G__11833,G__11834,G__11835,G__11836) : self__.dispatch_fn.call(null,G__11827,G__11828,G__11829,G__11830,G__11831,G__11832,G__11833,G__11834,G__11835,G__11836));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11837 = a;
var G__11838 = b;
var G__11839 = c;
var G__11840 = d;
var G__11841 = e;
var G__11842 = f;
var G__11843 = g;
var G__11844 = h;
var G__11845 = i;
var G__11846 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__11837,G__11838,G__11839,G__11840,G__11841,G__11842,G__11843,G__11844,G__11845,G__11846) : target_fn.call(null,G__11837,G__11838,G__11839,G__11840,G__11841,G__11842,G__11843,G__11844,G__11845,G__11846));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11847 = a;
var G__11848 = b;
var G__11849 = c;
var G__11850 = d;
var G__11851 = e;
var G__11852 = f;
var G__11853 = g;
var G__11854 = h;
var G__11855 = i;
var G__11856 = j;
var G__11857 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__11847,G__11848,G__11849,G__11850,G__11851,G__11852,G__11853,G__11854,G__11855,G__11856,G__11857) : self__.dispatch_fn.call(null,G__11847,G__11848,G__11849,G__11850,G__11851,G__11852,G__11853,G__11854,G__11855,G__11856,G__11857));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11858 = a;
var G__11859 = b;
var G__11860 = c;
var G__11861 = d;
var G__11862 = e;
var G__11863 = f;
var G__11864 = g;
var G__11865 = h;
var G__11866 = i;
var G__11867 = j;
var G__11868 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__11858,G__11859,G__11860,G__11861,G__11862,G__11863,G__11864,G__11865,G__11866,G__11867,G__11868) : target_fn.call(null,G__11858,G__11859,G__11860,G__11861,G__11862,G__11863,G__11864,G__11865,G__11866,G__11867,G__11868));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11869 = a;
var G__11870 = b;
var G__11871 = c;
var G__11872 = d;
var G__11873 = e;
var G__11874 = f;
var G__11875 = g;
var G__11876 = h;
var G__11877 = i;
var G__11878 = j;
var G__11879 = k;
var G__11880 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__11869,G__11870,G__11871,G__11872,G__11873,G__11874,G__11875,G__11876,G__11877,G__11878,G__11879,G__11880) : self__.dispatch_fn.call(null,G__11869,G__11870,G__11871,G__11872,G__11873,G__11874,G__11875,G__11876,G__11877,G__11878,G__11879,G__11880));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11881 = a;
var G__11882 = b;
var G__11883 = c;
var G__11884 = d;
var G__11885 = e;
var G__11886 = f;
var G__11887 = g;
var G__11888 = h;
var G__11889 = i;
var G__11890 = j;
var G__11891 = k;
var G__11892 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__11881,G__11882,G__11883,G__11884,G__11885,G__11886,G__11887,G__11888,G__11889,G__11890,G__11891,G__11892) : target_fn.call(null,G__11881,G__11882,G__11883,G__11884,G__11885,G__11886,G__11887,G__11888,G__11889,G__11890,G__11891,G__11892));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11893 = a;
var G__11894 = b;
var G__11895 = c;
var G__11896 = d;
var G__11897 = e;
var G__11898 = f;
var G__11899 = g;
var G__11900 = h;
var G__11901 = i;
var G__11902 = j;
var G__11903 = k;
var G__11904 = l;
var G__11905 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__11893,G__11894,G__11895,G__11896,G__11897,G__11898,G__11899,G__11900,G__11901,G__11902,G__11903,G__11904,G__11905) : self__.dispatch_fn.call(null,G__11893,G__11894,G__11895,G__11896,G__11897,G__11898,G__11899,G__11900,G__11901,G__11902,G__11903,G__11904,G__11905));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11906 = a;
var G__11907 = b;
var G__11908 = c;
var G__11909 = d;
var G__11910 = e;
var G__11911 = f;
var G__11912 = g;
var G__11913 = h;
var G__11914 = i;
var G__11915 = j;
var G__11916 = k;
var G__11917 = l;
var G__11918 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__11906,G__11907,G__11908,G__11909,G__11910,G__11911,G__11912,G__11913,G__11914,G__11915,G__11916,G__11917,G__11918) : target_fn.call(null,G__11906,G__11907,G__11908,G__11909,G__11910,G__11911,G__11912,G__11913,G__11914,G__11915,G__11916,G__11917,G__11918));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11919 = a;
var G__11920 = b;
var G__11921 = c;
var G__11922 = d;
var G__11923 = e;
var G__11924 = f;
var G__11925 = g;
var G__11926 = h;
var G__11927 = i;
var G__11928 = j;
var G__11929 = k;
var G__11930 = l;
var G__11931 = m;
var G__11932 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__11919,G__11920,G__11921,G__11922,G__11923,G__11924,G__11925,G__11926,G__11927,G__11928,G__11929,G__11930,G__11931,G__11932) : self__.dispatch_fn.call(null,G__11919,G__11920,G__11921,G__11922,G__11923,G__11924,G__11925,G__11926,G__11927,G__11928,G__11929,G__11930,G__11931,G__11932));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11933 = a;
var G__11934 = b;
var G__11935 = c;
var G__11936 = d;
var G__11937 = e;
var G__11938 = f;
var G__11939 = g;
var G__11940 = h;
var G__11941 = i;
var G__11942 = j;
var G__11943 = k;
var G__11944 = l;
var G__11945 = m;
var G__11946 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__11933,G__11934,G__11935,G__11936,G__11937,G__11938,G__11939,G__11940,G__11941,G__11942,G__11943,G__11944,G__11945,G__11946) : target_fn.call(null,G__11933,G__11934,G__11935,G__11936,G__11937,G__11938,G__11939,G__11940,G__11941,G__11942,G__11943,G__11944,G__11945,G__11946));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11947 = a;
var G__11948 = b;
var G__11949 = c;
var G__11950 = d;
var G__11951 = e;
var G__11952 = f;
var G__11953 = g;
var G__11954 = h;
var G__11955 = i;
var G__11956 = j;
var G__11957 = k;
var G__11958 = l;
var G__11959 = m;
var G__11960 = n;
var G__11961 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__11947,G__11948,G__11949,G__11950,G__11951,G__11952,G__11953,G__11954,G__11955,G__11956,G__11957,G__11958,G__11959,G__11960,G__11961) : self__.dispatch_fn.call(null,G__11947,G__11948,G__11949,G__11950,G__11951,G__11952,G__11953,G__11954,G__11955,G__11956,G__11957,G__11958,G__11959,G__11960,G__11961));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11962 = a;
var G__11963 = b;
var G__11964 = c;
var G__11965 = d;
var G__11966 = e;
var G__11967 = f;
var G__11968 = g;
var G__11969 = h;
var G__11970 = i;
var G__11971 = j;
var G__11972 = k;
var G__11973 = l;
var G__11974 = m;
var G__11975 = n;
var G__11976 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__11962,G__11963,G__11964,G__11965,G__11966,G__11967,G__11968,G__11969,G__11970,G__11971,G__11972,G__11973,G__11974,G__11975,G__11976) : target_fn.call(null,G__11962,G__11963,G__11964,G__11965,G__11966,G__11967,G__11968,G__11969,G__11970,G__11971,G__11972,G__11973,G__11974,G__11975,G__11976));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11977 = a;
var G__11978 = b;
var G__11979 = c;
var G__11980 = d;
var G__11981 = e;
var G__11982 = f;
var G__11983 = g;
var G__11984 = h;
var G__11985 = i;
var G__11986 = j;
var G__11987 = k;
var G__11988 = l;
var G__11989 = m;
var G__11990 = n;
var G__11991 = o;
var G__11992 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__11977,G__11978,G__11979,G__11980,G__11981,G__11982,G__11983,G__11984,G__11985,G__11986,G__11987,G__11988,G__11989,G__11990,G__11991,G__11992) : self__.dispatch_fn.call(null,G__11977,G__11978,G__11979,G__11980,G__11981,G__11982,G__11983,G__11984,G__11985,G__11986,G__11987,G__11988,G__11989,G__11990,G__11991,G__11992));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11993 = a;
var G__11994 = b;
var G__11995 = c;
var G__11996 = d;
var G__11997 = e;
var G__11998 = f;
var G__11999 = g;
var G__12000 = h;
var G__12001 = i;
var G__12002 = j;
var G__12003 = k;
var G__12004 = l;
var G__12005 = m;
var G__12006 = n;
var G__12007 = o;
var G__12008 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__11993,G__11994,G__11995,G__11996,G__11997,G__11998,G__11999,G__12000,G__12001,G__12002,G__12003,G__12004,G__12005,G__12006,G__12007,G__12008) : target_fn.call(null,G__11993,G__11994,G__11995,G__11996,G__11997,G__11998,G__11999,G__12000,G__12001,G__12002,G__12003,G__12004,G__12005,G__12006,G__12007,G__12008));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12009 = a;
var G__12010 = b;
var G__12011 = c;
var G__12012 = d;
var G__12013 = e;
var G__12014 = f;
var G__12015 = g;
var G__12016 = h;
var G__12017 = i;
var G__12018 = j;
var G__12019 = k;
var G__12020 = l;
var G__12021 = m;
var G__12022 = n;
var G__12023 = o;
var G__12024 = p;
var G__12025 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__12009,G__12010,G__12011,G__12012,G__12013,G__12014,G__12015,G__12016,G__12017,G__12018,G__12019,G__12020,G__12021,G__12022,G__12023,G__12024,G__12025) : self__.dispatch_fn.call(null,G__12009,G__12010,G__12011,G__12012,G__12013,G__12014,G__12015,G__12016,G__12017,G__12018,G__12019,G__12020,G__12021,G__12022,G__12023,G__12024,G__12025));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12026 = a;
var G__12027 = b;
var G__12028 = c;
var G__12029 = d;
var G__12030 = e;
var G__12031 = f;
var G__12032 = g;
var G__12033 = h;
var G__12034 = i;
var G__12035 = j;
var G__12036 = k;
var G__12037 = l;
var G__12038 = m;
var G__12039 = n;
var G__12040 = o;
var G__12041 = p;
var G__12042 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__12026,G__12027,G__12028,G__12029,G__12030,G__12031,G__12032,G__12033,G__12034,G__12035,G__12036,G__12037,G__12038,G__12039,G__12040,G__12041,G__12042) : target_fn.call(null,G__12026,G__12027,G__12028,G__12029,G__12030,G__12031,G__12032,G__12033,G__12034,G__12035,G__12036,G__12037,G__12038,G__12039,G__12040,G__12041,G__12042));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12043 = a;
var G__12044 = b;
var G__12045 = c;
var G__12046 = d;
var G__12047 = e;
var G__12048 = f;
var G__12049 = g;
var G__12050 = h;
var G__12051 = i;
var G__12052 = j;
var G__12053 = k;
var G__12054 = l;
var G__12055 = m;
var G__12056 = n;
var G__12057 = o;
var G__12058 = p;
var G__12059 = q;
var G__12060 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__12043,G__12044,G__12045,G__12046,G__12047,G__12048,G__12049,G__12050,G__12051,G__12052,G__12053,G__12054,G__12055,G__12056,G__12057,G__12058,G__12059,G__12060) : self__.dispatch_fn.call(null,G__12043,G__12044,G__12045,G__12046,G__12047,G__12048,G__12049,G__12050,G__12051,G__12052,G__12053,G__12054,G__12055,G__12056,G__12057,G__12058,G__12059,G__12060));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12061 = a;
var G__12062 = b;
var G__12063 = c;
var G__12064 = d;
var G__12065 = e;
var G__12066 = f;
var G__12067 = g;
var G__12068 = h;
var G__12069 = i;
var G__12070 = j;
var G__12071 = k;
var G__12072 = l;
var G__12073 = m;
var G__12074 = n;
var G__12075 = o;
var G__12076 = p;
var G__12077 = q;
var G__12078 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__12061,G__12062,G__12063,G__12064,G__12065,G__12066,G__12067,G__12068,G__12069,G__12070,G__12071,G__12072,G__12073,G__12074,G__12075,G__12076,G__12077,G__12078) : target_fn.call(null,G__12061,G__12062,G__12063,G__12064,G__12065,G__12066,G__12067,G__12068,G__12069,G__12070,G__12071,G__12072,G__12073,G__12074,G__12075,G__12076,G__12077,G__12078));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12079 = a;
var G__12080 = b;
var G__12081 = c;
var G__12082 = d;
var G__12083 = e;
var G__12084 = f;
var G__12085 = g;
var G__12086 = h;
var G__12087 = i;
var G__12088 = j;
var G__12089 = k;
var G__12090 = l;
var G__12091 = m;
var G__12092 = n;
var G__12093 = o;
var G__12094 = p;
var G__12095 = q;
var G__12096 = r;
var G__12097 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__12079,G__12080,G__12081,G__12082,G__12083,G__12084,G__12085,G__12086,G__12087,G__12088,G__12089,G__12090,G__12091,G__12092,G__12093,G__12094,G__12095,G__12096,G__12097) : self__.dispatch_fn.call(null,G__12079,G__12080,G__12081,G__12082,G__12083,G__12084,G__12085,G__12086,G__12087,G__12088,G__12089,G__12090,G__12091,G__12092,G__12093,G__12094,G__12095,G__12096,G__12097));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12098 = a;
var G__12099 = b;
var G__12100 = c;
var G__12101 = d;
var G__12102 = e;
var G__12103 = f;
var G__12104 = g;
var G__12105 = h;
var G__12106 = i;
var G__12107 = j;
var G__12108 = k;
var G__12109 = l;
var G__12110 = m;
var G__12111 = n;
var G__12112 = o;
var G__12113 = p;
var G__12114 = q;
var G__12115 = r;
var G__12116 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__12098,G__12099,G__12100,G__12101,G__12102,G__12103,G__12104,G__12105,G__12106,G__12107,G__12108,G__12109,G__12110,G__12111,G__12112,G__12113,G__12114,G__12115,G__12116) : target_fn.call(null,G__12098,G__12099,G__12100,G__12101,G__12102,G__12103,G__12104,G__12105,G__12106,G__12107,G__12108,G__12109,G__12110,G__12111,G__12112,G__12113,G__12114,G__12115,G__12116));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__12117 = a;
var G__12118 = b;
var G__12119 = c;
var G__12120 = d;
var G__12121 = e;
var G__12122 = f;
var G__12123 = g;
var G__12124 = h;
var G__12125 = i;
var G__12126 = j;
var G__12127 = k;
var G__12128 = l;
var G__12129 = m;
var G__12130 = n;
var G__12131 = o;
var G__12132 = p;
var G__12133 = q;
var G__12134 = r;
var G__12135 = s;
var G__12136 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__12117,G__12118,G__12119,G__12120,G__12121,G__12122,G__12123,G__12124,G__12125,G__12126,G__12127,G__12128,G__12129,G__12130,G__12131,G__12132,G__12133,G__12134,G__12135,G__12136) : self__.dispatch_fn.call(null,G__12117,G__12118,G__12119,G__12120,G__12121,G__12122,G__12123,G__12124,G__12125,G__12126,G__12127,G__12128,G__12129,G__12130,G__12131,G__12132,G__12133,G__12134,G__12135,G__12136));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__12137 = a;
var G__12138 = b;
var G__12139 = c;
var G__12140 = d;
var G__12141 = e;
var G__12142 = f;
var G__12143 = g;
var G__12144 = h;
var G__12145 = i;
var G__12146 = j;
var G__12147 = k;
var G__12148 = l;
var G__12149 = m;
var G__12150 = n;
var G__12151 = o;
var G__12152 = p;
var G__12153 = q;
var G__12154 = r;
var G__12155 = s;
var G__12156 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__12137,G__12138,G__12139,G__12140,G__12141,G__12142,G__12143,G__12144,G__12145,G__12146,G__12147,G__12148,G__12149,G__12150,G__12151,G__12152,G__12153,G__12154,G__12155,G__12156) : target_fn.call(null,G__12137,G__12138,G__12139,G__12140,G__12141,G__12142,G__12143,G__12144,G__12145,G__12146,G__12147,G__12148,G__12149,G__12150,G__12151,G__12152,G__12153,G__12154,G__12155,G__12156));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__12158 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__12158);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__4400__auto__,writer__4401__auto__,opt__4402__auto__){
return cljs.core._write(writer__4401__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__12163 = msg;
return Error(G__12163);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__12168 = x;
var G__12169 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__12168,G__12169) : pred.call(null,G__12168,G__12169));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__12170 = y;
var G__12171 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__12170,G__12171) : pred.call(null,G__12170,G__12171));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map